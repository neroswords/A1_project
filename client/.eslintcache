[{"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\index.js":"1","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\App.js":"2","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\reportWebVitals.js":"3","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Reducers\\rootReducers.js":"4","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Reducers\\tReducers.js":"5","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Reducers\\store.js":"6","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Private.jsx":"7","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\closeRoute.jsx":"8","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\auth.js":"9","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Register.js":"10","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Learned.js":"11","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Mapping.js":"12","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Group.js":"13","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Home.js":"14","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Login.js":"15","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Create_bot.js":"16","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Bot_list.js":"17","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Connect_bot.js":"18","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Train.js":"19","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\add_item.js":"20","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Profile_edit.js":"21","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Edit_bot.js":"22","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Navbar\\real_nav.js":"23","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Reducers\\aReducers.js":"24","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\AddTable\\AddWord.js":"25","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablemap.js":"26","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Navbar\\navbar_member.js":"27","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\Table.js":"28","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Delete_pop.js":"29","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\delete_modal.js":"30","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablecon.js":"31","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Botlist\\button_nav.js":"32","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Landing\\endpage.js":"33","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Form\\lineform.js":"34","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Landing\\Mainpage.js":"35","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Landing\\cardList.js":"36","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Footer\\footer.js":"37","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Form\\facebookform.js":"38","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\AddStyle.js":"39","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\Manage_map\\Mapchart.js":"40"},{"size":820,"mtime":1611674042218,"results":"41","hashOfConfig":"42"},{"size":2774,"mtime":1612459263883,"results":"43","hashOfConfig":"42"},{"size":375,"mtime":1608902447388,"results":"44","hashOfConfig":"42"},{"size":235,"mtime":1611674042181,"results":"45","hashOfConfig":"42"},{"size":278,"mtime":1611674042182,"results":"46","hashOfConfig":"42"},{"size":827,"mtime":1611674042182,"results":"47","hashOfConfig":"42"},{"size":482,"mtime":1610982900133,"results":"48","hashOfConfig":"42"},{"size":476,"mtime":1610982900134,"results":"49","hashOfConfig":"42"},{"size":526,"mtime":1610461342405,"results":"50","hashOfConfig":"42"},{"size":12938,"mtime":1611227852906,"results":"51","hashOfConfig":"42"},{"size":2918,"mtime":1612801624154,"results":"52","hashOfConfig":"42"},{"size":901,"mtime":1612459263895,"results":"53","hashOfConfig":"42"},{"size":970,"mtime":1612459263894,"results":"54","hashOfConfig":"42"},{"size":794,"mtime":1610982900151,"results":"55","hashOfConfig":"42"},{"size":6731,"mtime":1611227852903,"results":"56","hashOfConfig":"42"},{"size":10346,"mtime":1612547364383,"results":"57","hashOfConfig":"42"},{"size":6658,"mtime":1612546037992,"results":"58","hashOfConfig":"42"},{"size":11867,"mtime":1612459851247,"results":"59","hashOfConfig":"42"},{"size":2483,"mtime":1612459263895,"results":"60","hashOfConfig":"42"},{"size":10395,"mtime":1612460822281,"results":"61","hashOfConfig":"42"},{"size":10734,"mtime":1611227852905,"results":"62","hashOfConfig":"42"},{"size":9644,"mtime":1612459263892,"results":"63","hashOfConfig":"42"},{"size":4417,"mtime":1611227852892,"results":"64","hashOfConfig":"42"},{"size":278,"mtime":1612459263884,"results":"65","hashOfConfig":"42"},{"size":5631,"mtime":1612841459955,"results":"66","hashOfConfig":"42"},{"size":4086,"mtime":1610982900212,"results":"67","hashOfConfig":"42"},{"size":14984,"mtime":1612459263887,"results":"68","hashOfConfig":"42"},{"size":11988,"mtime":1612842262349,"results":"69","hashOfConfig":"42"},{"size":4019,"mtime":1612548505640,"results":"70","hashOfConfig":"42"},{"size":2580,"mtime":1612459263889,"results":"71","hashOfConfig":"42"},{"size":4482,"mtime":1612795824498,"results":"72","hashOfConfig":"42"},{"size":576,"mtime":1610738107196,"results":"73","hashOfConfig":"42"},{"size":2413,"mtime":1611227852890,"results":"74","hashOfConfig":"42"},{"size":6008,"mtime":1612453011222,"results":"75","hashOfConfig":"42"},{"size":2231,"mtime":1612459263885,"results":"76","hashOfConfig":"42"},{"size":4619,"mtime":1611227852889,"results":"77","hashOfConfig":"42"},{"size":4362,"mtime":1611227852894,"results":"78","hashOfConfig":"42"},{"size":5922,"mtime":1612376477606,"results":"79","hashOfConfig":"42"},{"size":216,"mtime":1610616881885,"results":"80","hashOfConfig":"42"},{"size":3394,"mtime":1610738307722,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"1561ne6",{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"85"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"85"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"85"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"85"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"85"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"85"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"85"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"85"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"85"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"85"},"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\index.js",["189","190","191"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport rootReducers from './Reducers/rootReducers'\r\nimport tReducers from './Reducers/tReducers'\r\nimport { Provider} from 'react-redux'\r\nimport {createStore} from 'redux'\r\nimport store from \"./Reducers/store\"\r\n// const store = createStore(rootReducers)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["192","193"],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\App.js",["194","195","196"],"import React from 'react';\r\nimport './App.css';\r\n// import './index.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { PrivateRoute } from \"./Private.jsx\";\r\nimport { CloseRoute } from \"./closeRoute.jsx\";\r\nimport { isLoggedIn } from './Components/auth.js';\r\nimport Register from './Page/Register';\r\nimport Login from './Page/Login';\r\nimport Home from './Page/Home';\r\nimport Learned from './Page/Learned';\r\nimport Group from './Page/Group';\r\n// import DatatablePage from './Components/DatatablePage';\r\nimport Mapping from './Page/Mapping';\r\nimport Train from './Page/Train';\r\nimport Bot_list from './Page/Bot_list';\r\nimport Profile_edit from './Page/Profile_edit';\r\nimport Edit_bot from './Page/Edit_bot';\r\nimport Create_bot from './Page/Create_bot';\r\nimport Connect from './Page/Connect_bot'\r\nimport AddWord from './Components/Table/AddTable/AddWord';\r\nimport Nav from './Components/Navbar/real_nav';\r\nimport add_item from './Page/add_item';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Nav/>\r\n          <Switch>\r\n            <Route path=\"/\" exact component= { Home } />\r\n            {/* <Route path=\"/DatatablePage\" exact component= { DatatablePage } /> */}\r\n            <CloseRoute isLoggedIn={isLoggedIn()} path=\"/register\" exact component={ Register } />\r\n            <CloseRoute isLoggedIn={isLoggedIn()} path=\"/login\" exact component={ Login } />\r\n            \r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/profile/:user_id/edit\" component={ Profile_edit }/>\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot_list/:user_id\" component={ Bot_list }/>\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:user_id/create_bot\" exact component ={ Create_bot } />\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:bot_id/edit_bot\" exact component ={ Edit_bot } />\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:bot_id/connect\" exact component ={ Connect } />\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:bot_id/learned/add\" component={ AddWord }/>\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:bot_id/training\" component={ Train }/>\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:bot_id/trained\" component={ Learned }/>\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:bot_id/group\" component={ Group }/>\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:bot_id/mapping\" component={ Mapping }/>\r\n            <PrivateRoute isloggedin={isLoggedIn()} exact path=\"/bot/:bot_id/add_item\" component={ add_item }/>\r\n            \r\n            \r\n          </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Reducers\\rootReducers.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Reducers\\tReducers.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Reducers\\store.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Private.jsx",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\closeRoute.jsx",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\auth.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Register.js",["197"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Redirect} from 'react-router-dom';\r\nimport FlashMessage from 'react-flash-message'\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    background: url(${process.env.PUBLIC_URL +'/images/b.png'}) ;\r\n    filter: gray;\r\n    background-size: 40%;\r\n    background-repeat: repeat;\r\n    position: cover;\r\n  }\r\n\r\n  .card-regis {\r\n    margin-top: 8%;\r\n    margin-bottom: 10%;\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-regis .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-regis .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .form-regis input {\r\n    border-radius: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .form-regis input {\r\n    border-radius: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .form-regis .btn {\r\n    margin-left: 10%;\r\n    border-radius: 1rem;\r\n    letter-spacing: 0.1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    text-align: center;\r\n    align-item: center;\r\n  }\r\n\r\n  .btn-regis .btn {\r\n    text-align: center;\r\n    align-item: center;\r\n  }\r\n\r\n  @mixin transition($property: all, $duration: 0.5s, $ease: cubic-bezier(0.65,-0.25,0.25, 1.95)) {\r\n    transition: $property $duration $ease;\r\n  }\r\n  \r\n  .btn-regis button {\r\n    text-align: center;\r\n    align-item: center;\r\n    position: relative;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: 0;\r\n    vertical-align: middle;\r\n    text-decoration: none;\r\n    &.btn-inregis {\r\n      @include transition(all, 0.5s, cubic-bezier(0.65,-0.25,0.25,1.95));\r\n      font-weight: 900;\r\n      color: $black;\r\n      padding: 1rem 1rem;\r\n      background: $white;\r\n      text-transform: uppercase;\r\n      &:hover, &:focus, &:active {\r\n        letter-spacing: 0.4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n    // label {\r\n    //     font-weight: \r\n    // }\r\n\r\n  .title_part {\r\n      margin-top: 4rem;\r\n    }\r\n\r\n  .title_part  p{\r\n    font-weight: bold;\r\n    margin-top:5%;\r\n  }\r\n\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n  }\r\n\r\n  input-icon{\r\n    display: flex;\r\n    width: 100%;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .form-check{\r\n    margin-top: 10%;\r\n    margin-bottom: 3%;\r\n  }\r\n  \r\n  .error {\r\n    background-color: white;\r\n    color: red;\r\n  }\r\n`;\r\n\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      email: null,\r\n      username: null,\r\n      password : null,\r\n      confirm_password : null,\r\n      firstname : null,\r\n      lastname : null,\r\n      birthday : null,\r\n      shop_name : null,\r\n      shop_type : null,\r\n      shop_address : null,\r\n      redirect : false,\r\n      message : '',\r\n      showMessageUsername: false,\r\n      showMessagePassword: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  scrollToTop() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"auto\"\r\n    });\r\n  }\r\n\r\n  handleChange (evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(this.state.password !== this.state.confirm_password){\r\n      this.setState({message:'your password and confirm was not match'})\r\n      this.setState({showMessagePassword: true})\r\n      this.scrollToTop()\r\n  }\r\n  else{\r\n    const profile = {\r\n        email: this.state.email,\r\n        username: this.state.username,\r\n        password : this.state.password,\r\n        firstname : this.state.firstname,\r\n        lastname : this.state.lastname,\r\n        birthday : this.state.birthday,\r\n        shop_name : this.state.shop_name,\r\n        shop_type : this.state.shop_type,\r\n        shop_address : this.state.shop_address\r\n      }\r\n      fetch('/profile/signup', {\r\n      method : 'POST',\r\n      headers : {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    }).then((res)=>res.json()).then(data=>{\r\n      console.log(data)\r\n      if(data.message){\r\n        this.setState({redirect:true})\r\n      }\r\n      else if(data.error){\r\n        this.setState({message:data.error})\r\n        this.setState({showMessageUsername: true})\r\n        this.scrollToTop()\r\n      }\r\n    }).then(this.setState({showMessageUsername: false})).then(this.setState({showMessagePassword: false}))\r\n  }\r\n}\r\nflash = (e) =>{\r\n  if (this.state.flash == true){\r\n    return(\r\n      <div>\r\n        {e}\r\n      </div>)\r\n  }\r\n}\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n      if (redirect) {\r\n        return <Redirect to={\"/login\"} />\r\n      }\r\n      else {\r\n        return(\r\n          <Styles>\r\n\r\n                <div className=\"container\">\r\n                      <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                        <div className=\"card card-regis\">\r\n                          <div className=\"card-body\">\r\n                            <h5 className=\"card-title text-center\">Register</h5>\r\n                            <form className=\"form-regis\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"title_part\">\r\n                                  <p className=\"col\">Account infomation</p>\r\n                                  <div className=\"line\"></div>\r\n                            </div>\r\n                                <div className=\"my-3\">\r\n                                  <label for=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                                  <input type=\"email\" className=\"form-control \" id=\"inputemail\" name='email' required value={this.state.email} onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                  <label for=\"exampleInputEmail1\" className=\"form-label\">Username</label>\r\n                                  <input type=\"text\" className=\"form-control\" id=\"inputusername\" name='username' minLength={5} maxLength={16} required value={this.state.username} onChange={this.handleChange}/>\r\n                                  { this.state.showMessageUsername &&  \r\n                                        <div className=\"container\">\r\n                                            <FlashMessage duration={4000}>\r\n                                              <div className=\"error\">\r\n                                                <strong>Error : {this.state.message}</strong>\r\n                                              </div>  \r\n                                            </FlashMessage>\r\n                                        </div>\r\n                                  }\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col \">\r\n                                    <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"inputpassword\" name='password' required  minLength={6} value={this.state.password} onChange={this.handleChange} /> \r\n                                  </div>\r\n                                  <div className=\"col\">\r\n                                    <label for=\"exampleInputPassword1\" className=\"form-label\">Comfirm Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"confirmpassword\" name='confirm_password' minLength={6} value={this.state.confirm_password} onChange={this.handleChange} />  \r\n                                  </div>\r\n                                  { this.state.showMessagePassword &&  \r\n                                      <div className=\"container\">\r\n                                          <FlashMessage duration={4000}>\r\n                                            <div className=\"error\">\r\n                                              <strong>Error : {this.state.message}</strong>\r\n                                            </div>  \r\n                                          </FlashMessage>\r\n                                      </div>\r\n                                }\r\n                                </div>\r\n                                <div className=\"title_part\">\r\n                                  <p className=\"col\">Personal infomation</p>\r\n                                  <div className=\"line\"></div>\r\n                                </div>\r\n                                  <div className=\"row my-3\">\r\n                                      <div className=\"col\">\r\n                                          <label for=\"inputFirstname\" className=\"form-label\">Firstname</label>\r\n                                          <input type=\"text\" className=\"form-control\" id=\"inputfirstname\" required  name='firstname' value={this.state.firstname} onChange={this.handleChange}/>\r\n                                      </div>\r\n                                      <div className=\"col\">\r\n                                      <label for=\"inputLastname\" className=\"form-label\">Last name</label>\r\n                                          <input type=\"text\" className=\"form-control\" id=\"inputlastname\" required name='lastname' value={this.state.lastname} onChange={this.handleChange}/>\r\n                                      </div>\r\n                                      <div className=\"col\">\r\n                                        <label for=\"exampleInputEmail1\" className=\"form-label\">Birthday</label>\r\n                                        <input type=\"date\" className=\"form-control\" id=\"inputdate\" required name='birthday' value={this.state.birthday} onChange={this.handleChange} />\r\n                                       </div> \r\n                                  </div>\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col my-3\">\r\n                                      <label for=\"exampleInputEmail1\" className=\"form-label\">Shop name</label>\r\n                                      <input type=\"text\" className=\"form-control\" id=\"inputshopname\" required value={this.state.shop_name} name='shop_name' onChange={this.handleChange} />\r\n                                    </div>\r\n                                    <div className=\"col my-3\">\r\n                                      <label for=\"exampleInputEmail1\" className=\"form-label\">Type of sale</label>\r\n                                      <input type=\"text\" className=\"form-control\" id=\"inputtypeofsale\" value={this.state.shop_type} name='shop_type' onChange={this.handleChange} />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"my-3\">\r\n                                    <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Shop Address</label>\r\n                                    <textarea className=\"form-control\" id=\"inputshopaddress\" rows=\"2\" placeholder=\"หากไม่มีให้เว้นว่างเอาไว้\" name='shop_address' value={this.state.shop_address} onChange={this.handleChange}></textarea>\r\n                                  </div>\r\n                                <div class=\"form-check\">\r\n                                  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"chaeckvalidate\" required/>\r\n                                  <label className=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                    ยินยอมตามข้อกำหนด\r\n                                    <a  href=\"/Login\"> ข้อกำหนดการใช้บริการ </a>\r\n                                    ตามที่ระบุไว้ \r\n                                  </label>\r\n                                </div>                                \r\n                                <div className=\"btn-regis\">\r\n                                    <button className=\"btn btn-primary text-uppercase btn-inregis\" type=\"submit\" >register</button>\r\n                                </div>\r\n                                <hr className=\"my-4\"/>\r\n                                <div align=\"center\">\r\n                                  <span> Already have an account ? </span>\r\n                                  <a  href=\"/Login\" >Log in</a> \r\n                                </div>\r\n                            </form>\r\n                            \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                  </div>\r\n          </Styles>\r\n          \r\n      );\r\n      }\r\n   \r\n  }\r\n}\r\n\r\nexport default Register;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Learned.js",["198","199","200","201","202","203","204"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from '../Components/Table/Table';\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div` \r\n.learned-page {\r\n    display: flex;\r\n}\r\n.container {\r\n    margin-top: 10px;\r\n}\r\n`\r\n// const mapStateToProps = (state) =>{\r\n//     return {\r\n//         ichange : state\r\n//     }\r\n// }\r\nfunction Learned(props){\r\n    const [deleteState,setdeleteState] = useState([]);\r\n    const  [Info,setInfo] = useState([]);\r\n    const delete_trained =(data)=>{\r\n        var newdata = []\r\n        var i = 0\r\n\r\n        // var a = []\r\n        for (i = 0; i < data.length; i++){\r\n            newdata.push(data[i].original)\r\n        }\r\n        // console.log(data)\r\n        console.log(newdata)\r\n        // console.log(data[0].original.ReplyWord)\r\n        // const newdata = new FormData();\r\n        // newdata.append('id', data);\r\n        // newdata.append('gender' ,this.gender.value);\r\n        // newdata.append('age' ,this.age.value);\r\n\r\n        if (data[0]){\r\n            fetch('/train_bot/delete/'+data[0].original.id, {\r\n                method : 'POST',\r\n                headers : {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Content-Type':'application/json'\r\n                    },\r\n                    body : JSON.stringify(newdata),\r\n                });\r\n                console.log(data)\r\n                window.location.reload(\"bot/\"+deleteState.bot_id+'/trained');\r\n        }    \r\n    }\r\n    const add_data = (data) =>{\r\n        deleteState.push(data)\r\n        console.log(deleteState)\r\n    }\r\n    const id = (data) =>{\r\n        console.log(id.botID)\r\n    }\r\n\r\n \r\n    \r\n\r\n      \r\n    return(\r\n        <Styles>\r\n        <div className=\"learned-page\">\r\n            <Navbar_member botID = {props.match.params.bot_id} path={\"trained\"}  />\r\n            <div className=\"container\">\r\n              \r\n                <div className=\"container-top d-flex bd-highlight\">\r\n                    <h2 className='p-2 flex-grow-1 bd-highlight'>Trained</h2>\r\n                    {/* <div className=\"p-2 bd-highlight\">\r\n                        <button className=\"btn btn-danger\" type=\"button\" onClick = {() => delete_trained(props.match.params.bot_id) } >Delete</button>\r\n                    </div> */}\r\n                    {/* <div className=\"p-2 bd-highlight\">\r\n                        <Link to={'/bot/'+props.match.params.bot_id+'/training'}>\r\n                            <button className=\"btn btn-success\" type=\"button\">Training</button>\r\n                        </Link>\r\n                    </div> */}\r\n                </div>\r\n                <hr></hr>\r\n                <Table botID={props.match.params.bot_id} delete_trained={delete_trained}  />\r\n            </div>\r\n\r\n            </div>\r\n                \r\n        </Styles>\r\n    );\r\n\r\n}\r\n\r\nexport default Learned;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Mapping.js",["205"],"import React from 'react';\r\nimport Table from '../Components/Table/Tablemap';\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div` \r\n.mapping-page {\r\n    display: flex;\r\n}\r\n.container {\r\n    margin-top:2%\r\n}\r\n` \r\nfunction Mapping(props){\r\n    return(\r\n        <Styles>\r\n        <div className=\"mapping-page\">\r\n            <Navbar_member botID = {props.match.params.bot_id} path={\"mapping\"} />\r\n            <div className=\"container\">\r\n                <div className=\"container-top d-flex bd-highlight\">\r\n                    <h2 className='p-2 flex-grow-1 bd-highlight'>Mapping</h2>\r\n                    \r\n                </div>\r\n                <hr></hr>\r\n                <Table />\r\n                    \r\n            </div>\r\n\r\n        </div>\r\n        </Styles>        \r\n        \r\n    );\r\n}\r\n\r\nexport default Mapping;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Group.js",["206"],"import React from 'react';\r\nimport Table from '../Components/Table/Table';\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div` \r\n.group-page {\r\n    display: flex;\r\n}\r\n.container {\r\n    margin-top:2%\r\n}\r\n` \r\n\r\nfunction Group(props){\r\n    return(\r\n        <Styles>\r\n        <div className=\"group-page\">\r\n            <Navbar_member botID = {props.match.params.bot_id} path={\"group\"} />\r\n            <div className=\"container\">\r\n                <div className=\"container-top d-flex bd-highlight\">\r\n                    <h2 className='p-2 flex-grow-1 bd-highlight'>Group</h2>\r\n                    <div className=\"p-2 bd-highlight\"><button className=\"btn btn-danger\" type=\"button\">Delete</button></div>\r\n                </div>\r\n                <hr></hr>\r\n                <Table />\r\n            </div>\r\n\r\n        </div>\r\n       </Styles>         \r\n        \r\n    );\r\n}\r\n\r\nexport default Group;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Home.js",["207","208","209"],"import React,{ useState } from 'react';\r\nimport {Button, Collapse } from 'react-bootstrap';\r\nimport { CardList } from '../Components/Landing/cardList';\r\nimport { Mainpage } from '../Components/Landing/Mainpage';\r\nimport { Endpage }  from '../Components/Landing/endpage';\r\n\r\nimport Footer from '../Components/Footer/footer';\r\n\r\nfunction Home(){\r\n    return(\r\n        \r\n        <div className=\"page-container\"> \r\n                <div className=\"conatainer\">\r\n                    <Mainpage />\r\n                    <CardList/>\r\n                    <Endpage/>\r\n                    {/* <img src={'/images/profile/cats.jpg'}></img>\r\n                    <img src={'/images/logo.png'}></img> */}\r\n                </div>\r\n            <Footer />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Login.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Create_bot.js",["210","211","212","213","214"],"  \r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {withRouter, Redirect} from 'react-router-dom'\r\nimport ReactFileReader from 'react-file-reader';\r\nimport Facebookform  from '../Components/Form/facebookform';\r\nimport Lineform  from '../Components/Form/lineform';\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    margin-top: 2%;\r\n  }\r\n  .card-bot{\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-bot .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-bot .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .title_part p{\r\n      font-weight: bold;\r\n      margin-top: 9%;\r\n  }\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n    margin-bottom: 5%;\r\n  }\r\n  .form-bot .btn {\r\n    border-radius: 1rem;\r\n    letter-spacing: .1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    align-items: center;\r\n    /* background-color: #; */\r\n  }\r\n  .btn-createbot{\r\n      margin-top: 3rem;\r\n      text-align : center;\r\n  }\r\n  .form-bot input {\r\n    border-radius: 0.5rem;\r\n  }\r\n  .form-bot select{\r\n    border-radius: 0.5rem;\r\n  }\r\n  .row-2{\r\n    margin-bottom: 2rem;\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  input[type=file]::-webkit-file-upload-button {\r\n    border: 2px;\r\n    padding: 0.5rem ;\r\n    border-radius: 0.75rem;\r\n    background-color: #fca311;\r\n    transition: 1s;\r\n    color: white;\r\n    width: 40%;\r\n    \r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    max-width: 100%;\r\n  }\r\n  .showimage {\r\n    margin-bottom: 1%;\r\n    text-align: center;\r\n  }\r\n  .showimage img{\r\n    border: 1px solid #ddd;\r\n    border-radius: 50%;\r\n    width: 80%;\r\n    text-align: center;\r\n  }\r\n  \r\n  .vertical-line {\r\n    border-left: 1px solid black;\r\n  }\r\n  .btn-facebook {\r\n    background-color: #0078ff;\r\n  }\r\n  .btn-line {\r\n    background-color: #34a853 ;\r\n  }\r\n\r\n  .upload-img input{\r\n    cursor: pointer;\r\n  }\r\n\r\n  .upload-img label{\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n\r\nclass Create_bot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bot_name: null,\r\n      gender: null,\r\n      age: null,\r\n      platform: 'line',\r\n      redirect: false,\r\n      bot_id:'',\r\n      imageURL: '',\r\n      file:''\r\n    };\r\n    \r\n    this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    this.handlelineChange = this.handlelineChange.bind(this);\r\n    this.handlefacebookChange = this.handlefacebookChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  renderSwitch(param) {\r\n    switch(param) {\r\n      case 'facebook':\r\n        return <Facebookform />\r\n      default:\r\n        return <Lineform />\r\n    }\r\n  }\r\n  \r\n  handlelineChange (evt) {\r\n    evt.preventDefault() ;\r\n    this.setState({ platform: \"line\" });\r\n    console.log(this.state.platform)\r\n  }\r\n  handlefacebookChange (evt) {\r\n    evt.preventDefault() ;\r\n    this.setState({ platform: \"facebook\" });\r\n    console.log(this.state.platform)\r\n  }\r\n  handleChange (evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n    console.log(this.state)\r\n  }\r\n  handleFile = (e) => {\r\n  const content = e.target.result;\r\n  console.log('file content',  content)\r\n  // You can set content in state and show it in render.\r\n}\r\n// _handleSubmit(e) {\r\n//   e.preventDefault();\r\n//   // TODO: do something with -> this.state.file\r\n//   console.log('handle uploading-', this.state.file);\r\n// }\r\n\r\n_handleImageChange(e) {\r\n  e.preventDefault();\r\n\r\n  let reader = new FileReader();\r\n  let file = e.target.files[0];\r\n\r\n  reader.onloadend = () => {\r\n    this.setState({\r\n      file: file,\r\n      imagePreviewUrl: reader.result\r\n    });\r\n  }\r\n\r\n  reader.readAsDataURL(file)\r\n}\r\n  handleUploadImage(ev) {\r\n    ev.preventDefault();\r\n\r\n    const data = new FormData();\r\n    data.append('file', this.uploadInput.files[0]);\r\n    data.append('bot_name',this.bot_name.value);\r\n    data.append('gender' ,this.gender.value);\r\n    data.append('age' ,this.age.value);\r\n    data.append('creator' , localStorage.getItem('user_id'))\r\n\r\n    fetch('/bot/create', {\r\n      method: 'POST',\r\n      // headers : {\r\n      //   \"Access-Control-Allow-Origin\": \"*\",\r\n      //   //'Content-Type':'application/json'\r\n      // },\r\n      //body : JSON.stringify(form),\r\n      body: data,\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        this.setState({ imageURL: `/${body.file}` });\r\n        this.setState({ bot_id : data.id})\r\n        this.setState({ redirect: true }) \r\n      });\r\n    });\r\n  }\r\n  // componentDidMount(){\r\n  //   fetch('/bot/'+user_id)\r\n  // }\r\n\r\n  render() {\r\n    const { redirect,bot_id } = this.state;\r\n    if (redirect) {\r\n      return <Redirect to={\"/bot_list/\"+ localStorage.getItem('user_id')} />\r\n    }\r\n    else {\r\n        let {imagePreviewUrl} = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n          $imagePreview = (<img src={imagePreviewUrl} />);\r\n        } \r\n        return(\r\n        <Styles>\r\n          \r\n              <div className=\"container\">\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                      <div className=\"card card-bot\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title text-center\">Create Bot form</h5>\r\n                          <form className=\"form-bot\" onSubmit={this.handleUploadImage}>\r\n                                <div className=\"title_part\">\r\n                                        <p className=\"col\">Bot infomation</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                        <div className=\"group col-lg-6\">\r\n                                          <div className=\"showimage col-lg-8\">\r\n                                         { imagePreviewUrl ?   $imagePreview :<img src={'/images/bot/bot_pic/Avatar.jpg'}/>}\r\n                                              \r\n                                          </div>\r\n                                          <div className=\"mt-3 upload-img\">                                           \r\n                                              <label for=\"uploadimage\">Upload Proflie</label>\r\n                                              <input ref={(ref) => { this.uploadInput = ref; }} onChange={(e)=>this._handleImageChange(e)} type=\"file\" />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div className=\" group col-lg-6\">\r\n                                            <div className=\"\">\r\n                                              <label  className=\"form-label\">Bot Name</label>\r\n                                              <input type=\"text\"  name=\"bot_name\" required  ref={(ref) => { this.bot_name = ref; }} onChange={this.handleChange} className=\"form-control\" id=\"inputbotname\"/>\r\n                                            </div>\r\n                                            <div class=\"mt-3\">\r\n                                              <label for=\"inputgender\" class=\"form-label\">Gender</label>\r\n                                              <select id=\"inputgender\" name=\"gender\" required  ref={(ref) => { this.gender = ref; }} onChange={this.handleChange} class=\"form-select\">\r\n                                                  <option disabled selected>Select your option</option>\r\n                                                  <option>Male </option>\r\n                                                  <option>Female</option>\r\n                                              </select>\r\n                                            </div>\r\n                                            <div className=\"mt-3\">\r\n                                                <label for=\"inputFirstname\" className=\"form-label\">Age</label>\r\n                                                <input type=\"integer\" name=\"age\" required className=\"form-control\" id=\"inputfirstname\"  ref={(ref) => { this.age = ref; }} onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                                <div className=\"row row-2\">\r\n                                        \r\n                                </div>\r\n                                {/* <div className=\"title_part\">\r\n                                        <p className=\"col \">Connect platform</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"connect_platform\">\r\n                                  <div className=\"row col-lg-12\">\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\">facebook</button>\r\n                                      </div>\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\">line</button>\r\n                                      </div>\r\n                                  </div>\r\n                                </div> */}\r\n\r\n                            {/* {this.renderSwitch(this.state.platform)} */}\r\n                            {/* <Lineform />                                 */}\r\n\r\n                              <div className=\"btn-createbot\">\r\n                                  <button className=\"btn btn-success text-uppercase\" onClick={this.handleUploadImage} type=\"submit\">Create ChatBot</button>\r\n                              </div>\r\n\r\n\r\n                          </form>\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n        </Styles>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Create_bot;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Bot_list.js",["215","216","217","218","219"],"import React, {useState, useEffect, useRef } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport '../Components/Botlist/Bot_list.css';\r\nimport { useDetectOutsideClick } from \"../Components/Botlist/button_nav\";\r\n// import DeleteModal from '../Components/delete_modal'\r\nimport Delete_pop from \"../Components/Delete_pop\";\r\n// import Facebookform from \"../Components/Form/facebookform\";\r\nimport Connect_bot from \"../Page/Connect_bot\";\r\n\r\nexport default function Bot_list(props) {\r\n    const [botlist,setBotlist] = useState([]);\r\n    \r\n    const delete_bot =(id)=>{\r\n        fetch('/bot/delete/'+id, {\r\n        method : 'POST',\r\n        headers : {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Content-Type':'application/json'\r\n            },\r\n        });\r\n        const newList = botlist.filter((bot) => bot._id.$oid !== id);\r\n        setBotlist(newList);\r\n    }\r\n\r\n    const [showDelete_pop, setShowDelete_pop] = useState(false);\r\n    const [showBotId, setShowBotId] = useState();\r\n    const openDelete_pop = (a) => {\r\n    setShowBotId(a)\r\n    setShowDelete_pop(prev => !prev);\r\n    }\r\n\r\n    const [showForm, setShowForm] = useState(false);\r\n    const openForm = (b) => {\r\n    setShowBotId(b)\r\n    setShowForm(prev => !prev);\r\n    }\r\n  \r\n    useEffect(async () => {\r\n        fetch('/profile/'+localStorage.getItem('user_id')).then(res => res.json().then(data => setBotlist(data)))\r\n        console.log(localStorage.getItem(\"access_token\") )\r\n    },[])\r\n\r\n\r\n    const card = botlist.map((bot) => \r\n        <Dropdown botData={bot} deleteBot={delete_bot} openDelete_pop={openDelete_pop} openForm={openForm}/>\r\n    );\r\n\r\n    return(\r\n                <div className=\"botlist-page\">\r\n                    <div className=\"popup-del-connect\">\r\n                        <Delete_pop showDelete_pop={showDelete_pop} setShowDelete_pop = {setShowDelete_pop} Delete_bot ={delete_bot} bot={showBotId}></Delete_pop>\r\n                        <Connect_bot showForm={showForm} setShowForm={setShowForm} botID={showBotId} ></Connect_bot>\r\n                    </div>\r\n\r\n                    {/* <Navbar_member /> */}\r\n                          <div class=\"container col-xl-9 col-lg-9 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"botlist-body\">\r\n                                        <Link className='link' to={'/bot/'+localStorage.getItem('user_id')+'/create_bot'}>\r\n                                        <div className=\"card-plus group\">\r\n                                            <div>\r\n                                                <p>Add new Bot</p>\r\n                                            </div>    \r\n                                                <div className=\"icon-plus\">\r\n                                                    <i class=\"fas fa-plus\"></i>\r\n                                                </div>\r\n                                        </div>\r\n                                        </Link>\r\n                                        {/* <div class=\"card-box\"> */}\r\n                                            {card}\r\n                                        {/* </div> */}\r\n\r\n                                    </div> \r\n\r\n                        </div>\r\n                </div>    \r\n               \r\n        \r\n    );\r\n}\r\n\r\nfunction Dropdown({botData, deleteBot, openDelete_pop, openForm}){\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\r\n    const onClick = () => {setIsActive(prev => !prev)\r\n    // const [showIdbot, setshowIdbot] = useState(botData._id.$oid);\r\n    // console.log(isActive);\r\n    };\r\n\r\n    // const forceUpdate = useForceUpdate();\r\n    // console.log(botData)\r\n    \r\n    // const [showConnect, setShowConnect] = useState(false);\r\n    // const openConnect = () => {\r\n    //     setShowConnect(prev => !prev);\r\n    //   }\r\n    const OnDelete = () => {\r\n    openDelete_pop(botData._id.$oid)\r\n    onClick()\r\n    }\r\n\r\n    // const [showForm, setShowForm] = useState(false);\r\n    // const [showIdbot, setshowIdbot] = useState(botData._id.$oid);\r\n    const OnopenForm = () => {\r\n    openForm(botData._id.$oid)\r\n    onClick()\r\n    }\r\n    \r\n\r\n    return(\r\n    <div>\r\n    <div class=\"card-box\">\r\n        <Link to={'/bot/'+botData._id.$oid+'/training' } >\r\n            <img src={'/images/bot/bot_pic/'+botData.Img} class=\"bot-img\"/>\r\n        </Link>\r\n        <div class=\"info-bot\">\r\n            <Link className=\"link\" to={'/bot/'+botData._id.$oid+'/training'}>\r\n                <p class=\"Bot-name\">{botData.bot_name}</p>\r\n            </Link>\r\n            <div class=\"divider\"></div>\r\n        </div>\r\n        \r\n        <div className=\"connect\">\r\n        {botData.access_token ? <div className=\"connect-area line\">\r\n                <i class=\"fab fa-line\"></i>\r\n            </div> : <div className=\"connect-area lineblack\">\r\n                 <i class=\"fab fa-line\"></i>\r\n            </div>}\r\n\r\n            {botData.page_facebook_access_token ? <div className=\"connect-area facebook\">\r\n                <i class=\"fab fa-facebook-square\"></i>\r\n            </div>\r\n             : <div className=\"connect-area facebookblack\">\r\n             <i class=\"fab fa-facebook-square\"></i>\r\n         </div>\r\n         }\r\n            \r\n        </div>\r\n        <div className=\"menu-continer\">\r\n            <div onClick={onClick} className=\"menu-trigger\">\r\n                <i class=\"fas fa-ellipsis-v\"></i>\r\n            </div>\r\n            <div\r\n                ref={dropdownRef}\r\n                className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n                >\r\n                <ul>\r\n                    <li> \r\n                        <a href={'/bot/'+botData._id.$oid+'/edit_bot'}><i class=\"fas fa-pen\"></i> edit</a>\r\n                    </li>\r\n                    <li>\r\n                    <button onClick={OnopenForm}><i class=\"fas fa-link\"></i> Connect</button>\r\n                    {/* <a href={'/bot/'+botData._id.$oid+'/connect'} ><i class=\"fas fa-link\"></i> Connect</a> */}\r\n                    {/* <Facebookform showForm={showForm} setShowForm={setShowForm} showIdbot={showIdbot}></Facebookform> */}\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\" onClick={OnDelete}>\r\n                        <i class=\"fas fa-trash\"></i> Delete</a>\r\n                    </li>\r\n                </ul>\r\n               \r\n            </div>\r\n        </div> \r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// function useForceUpdate(){\r\n//     const [value, setValue] = useState(0); // integer state\r\n//     return () => setValue(value => value + 1); // update the state to force render\r\n// }","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Connect_bot.js",["220","221","222"],"import React, { useRef, useEffect, useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Facebookform from '../Components/Form/facebookform';\r\nimport Lineform from '../Components/Form/lineform';\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    margin-top: 2%;\r\n  }\r\n\r\n  .card-bot{\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-bot .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-bot .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n\r\n  .title_part p{\r\n    font-weight: bold;\r\n    margin-top: 5%;\r\n    font-size: 23px;\r\n\r\n  }\r\n\r\n  .title_part  .line{\r\n    border: 10px;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n    margin-bottom: 5%;\r\n  }\r\n\r\n  .form-bot .btn {\r\n    border-radius: 1rem;\r\n    letter-spacing: .1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    align-items: center;\r\n    /* background-color: #; */\r\n  }\r\n  .btn-createbot{\r\n      margin-top: 3rem;\r\n      text-align : center;\r\n  }\r\n\r\n  .form-bot input {\r\n    border-radius: 0.5rem;\r\n  }\r\n\r\n  .form-bot select{\r\n    border-radius: 0.5rem;\r\n  }\r\n\r\n  .row-2{\r\n    margin-bottom: 2rem;\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  input[type=file]::-webkit-file-upload-button {\r\n    border: 2px;\r\n    padding: 0.5rem ;\r\n    border-radius: 0.75rem;\r\n    background-color: #fca311;\r\n    transition: 1s;\r\n    color: white;\r\n    width: 40%;\r\n    \r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .showimage {\r\n    margin-bottom: 1%;\r\n    text-align: center;\r\n  }\r\n\r\n  .showimage img{\r\n    border: 1px solid #ddd;\r\n    border-radius: 50%;\r\n    width: 80%;\r\n    text-align: center;\r\n  }\r\n  \r\n  .vertical-line {\r\n    border-left: 1px solid black;\r\n\r\n  }\r\n\r\n  .btn-facebook {\r\n    background-color: #0078ff;\r\n  }\r\n\r\n  .btn-line {\r\n    background-color: #34a853 ;\r\n  }\r\n  \r\n  .con-line{\r\n    margin-left: 50px;\r\n  }\r\n\r\n  .connect_platform{\r\n    text-align: center;\r\n  }\r\n\r\n  .connect_platform button{\r\n    padding: 7px 10px;\r\n    border-radius: 40px;\r\n    \r\n  }\r\n  \r\n\r\n`;\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  /* position: absolute; */\r\n  /* display: flex;\r\n  justify-content: center;\r\n  align-items: center; */\r\n  \r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  width: 400px;\r\n  height: 550px;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  z-index: -10 !important;\r\n  grid-template-columns: 1fr 1fr;\r\n  position: absolute;\r\n  margin-top: 20%;\r\n  /* display: grid; */\r\n  /* position: absolute;\r\n  /* top: 50%;\r\n  /* left: 50%; */\r\n  /* transform: translate(0%, -180%); */\r\n`;\r\n\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  width: 25px;\r\n  height: 25px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20%;\r\n`;\r\n\r\n\r\nexport function Connect_bot({ setShowForm, showForm, botID }) {\r\n  const [platform, setplatform] = useState(\"facebook\")\r\n  const renderSwitch = (platform, bot_id) => {\r\n    switch (platform) {\r\n      case 'facebook':\r\n        return <Facebookform props={bot_id} />\r\n      default:\r\n        return <Lineform props={bot_id} />\r\n    }\r\n  }\r\n\r\n  const modalRef = useRef();\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250\r\n    },\r\n    opacity: showForm ? 1 : 0,\r\n    transform: showForm ? `translateY(0%)` : `translateY(-100%)`\r\n  });\r\n\r\n  const closeModal = e => {\r\n    if (modalRef.current === e.target) {\r\n      setShowForm(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showForm) {\r\n        setShowForm(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowForm, showForm]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  return (\r\n    <Styles>\r\n      <div>\r\n        {showForm ? (\r\n          <Background onClick={closeModal} ref={modalRef}>\r\n            <animated.div style={animation}>\r\n              {/* <Container> */}\r\n                <ModalWrapper showForm={showForm}>\r\n                  <ModalContent>\r\n                    <div>\r\n                      <button className=\"con-facebook btn btn-primary text-uppercase\" onClick={() => setplatform(\"facebook\")} type=\"\"><i class=\"icon-facebook fab fa-facebook fa-2x\"></i></button>\r\n                      <button className=\"con-line btn btn-success btn-line text-uppercase\" onClick={() => setplatform(\"line\")} type=\"\"><i class=\"icon-line fab fa-line fa-2x\"></i></button>\r\n                    </div>\r\n                    {renderSwitch(platform, botID)}\r\n\r\n                  </ModalContent>\r\n                  <CloseModalButton\r\n                    aria-label=\"Close modal\"\r\n                    onClick={() => setShowForm(prev => !prev)}\r\n                  />\r\n                </ModalWrapper>\r\n              {/* </Container> */}\r\n            </animated.div>\r\n          </Background>\r\n        ) : null}\r\n      </div>\r\n\r\n    </Styles>\r\n  )\r\n}\r\n\r\n{/* <div className=\"container\">\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                        <div className=\"card card-bot\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"title_part\">\r\n                                    <p className=\"col \">Connect platform</p>\r\n                                    <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"connect_platform\">\r\n                                  <button className=\"con-facebook btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\"><i class=\"icon-facebook fab fa-facebook fa-2x\"></i></button>\r\n                                  <button className=\"con-line btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\"><i class=\"icon-line fab fa-line fa-2x\"></i></button>\r\n                                </div>\r\n                                {this.renderSwitch(this.state.platform)}\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div> */}\r\n\r\n\r\n// class Connect_bot extends React.Component {\r\n//   constructor(props, showForm, setShowForm, showIdbot) {\r\n//     super(props);\r\n//     console.log(props.showForm)\r\n//     this.state = {\r\n//       platform: 'facebook',\r\n//       redirect: false,\r\n//       bot_id: ''\r\n//     };\r\n//     this.handlelineChange = this.handlelineChange.bind(this);\r\n//     this.handlefacebookChange = this.handlefacebookChange.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//     this.modalRef = React.createRef();\r\n//     this.keyPress = this.keyPress(this);\r\n\r\n//   }\r\n\r\n//   renderSwitch(param) {\r\n//     switch (param) {\r\n//       case 'facebook':\r\n//         return <Facebookform props={this.props.match.params} />\r\n//       default:\r\n//         return <Lineform props={this.props.match.params} />\r\n//     }\r\n//   }\r\n\r\n//   handlelineChange(evt) {\r\n//     evt.preventDefault();\r\n//     this.setState({ platform: \"line\" });\r\n//   }\r\n//   handlefacebookChange(evt) {\r\n//     evt.preventDefault();\r\n//     this.setState({ platform: \"facebook\" });\r\n//     console.log(this.state.platform)\r\n//   }\r\n//   handleChange(evt) {\r\n//     this.setState({ [evt.target.name]: evt.target.value });\r\n//     console.log(this.state)\r\n//   }\r\n\r\n//   handleSubmit = (evt) => {\r\n//     evt.preventDefault();\r\n//     // const form = {\r\n//     // }\r\n//     // fetch('/bot/create',{\r\n//     //   method : 'POST',\r\n//     //   headers : {\r\n//     //     \"Access-Control-Allow-Origin\": \"*\",\r\n//     //     'Content-Type':'application/json'\r\n//     //   },\r\n//     //   body : JSON.stringify(form)\r\n//     // }).then( res => res.json()).\r\n//     // then(data => {\r\n//     //   this.setState({ bot_id : data.id})\r\n//     //   this.setState({ redirect: true }) \r\n//     // }\r\n//     // );\r\n//     // .then(data =>\r\n//     // this.props.history.push('/bot/connect_platform'+ data.bot_id +'/line') \r\n//     // )\r\n\r\n//   }\r\n//   // \"/profile/\"+localStorage.getItem('user_id')\r\n\r\n//   render() {\r\n//     console.log(this.showForm)\r\n//     // const modalRef = useRef();\r\n//     const closeModal = e => {\r\n//       if (this.modalRef.current === e.target) {\r\n//         this.setShowForm(false);\r\n//       }\r\n//     };\r\n\r\n//     this.keyPress(\r\n//       e => {\r\n//         if (e.key === 'Escape' && this.showForm) {\r\n//           this.setShowForm(false);\r\n//           console.log('I pressed');\r\n//         }\r\n//       },\r\n//       [this.setShowForm, this.showForm]\r\n//     );\r\n\r\n//     this.componentDidMount(\r\n//       () => {\r\n//         document.addEventListener('keydown', this.keyPress);\r\n//         return () => document.removeEventListener('keydown', this.keyPress);\r\n//       },\r\n//       [this.keyPress]\r\n//     );\r\n\r\n\r\n//     const { redirect, bot_id } = this.state;\r\n//     if (redirect) {\r\n//       return <Redirect to={\"/bot/\" + bot_id + \"/connect\"} />\r\n//     }\r\n//     else {\r\n//       return (\r\n//         <Styles>\r\n//           <div>\r\n//             {this.showForm ? (\r\n//               <Background onClick={closeModal} ref={this.modalRef}>\r\n//                 {/* <animated.div style={animation}> */}\r\n//                 <Container>\r\n//                   <ModalWrapper showForm={this.showForm}>\r\n//                     <ModalContent>\r\n//                       facebook form\r\n//                 </ModalContent>\r\n//                     <CloseModalButton\r\n//                       aria-label=\"Close modal\"\r\n//                       onClick={() => this.setShowForm(prev => !prev)}\r\n//                     />\r\n//                   </ModalWrapper>\r\n//                 </Container>\r\n//                 {/* </animated.div> */}\r\n//               </Background>\r\n//             ) : null}\r\n//           </div>\r\n//           {/* <div className=\"container\">\r\n//                     <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n//                         <div className=\"card card-bot\">\r\n//                             <div className=\"card-body\">\r\n//                                 <div className=\"title_part\">\r\n//                                     <p className=\"col \">Connect platform</p>\r\n//                                     <div className=\"line\"></div>\r\n//                                 </div>\r\n//                                 <div className=\"connect_platform\">\r\n//                                   <button className=\"con-facebook btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\"><i class=\"icon-facebook fab fa-facebook fa-2x\"></i></button>\r\n//                                   <button className=\"con-line btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\"><i class=\"icon-line fab fa-line fa-2x\"></i></button>\r\n//                                 </div>\r\n//                                 {this.renderSwitch(this.state.platform)}\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>   \r\n//                 </div> */}\r\n//         </Styles>\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default withRouter(Connect_bot);         ","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Train.js",["223","224","225","226","227"],"import React, { useState, useEffect } from \"react\";\r\nimport Navbar_member from \"../Components/Navbar/navbar_member\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteModal from \"../Components/delete_modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Tablecon from \"../Components/Table/Tablecon\";\r\n\r\nconst Styles = styled.div`\r\n  .train-page {\r\n    display: flex;\r\n  }\r\n  .container {\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n  }\r\n\r\n`;\r\n\r\nfunction Train(props) {\r\n  let history = useHistory();\r\n  const [deleteState, setdeleteState] = useState([]);\r\n  const delete_trained = (data) => {\r\n    const delete_data = deleteState;\r\n    if (deleteState[0]) {\r\n      fetch(\"/train_bot/delete/training/\" + data, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(delete_data),\r\n      });\r\n      window.location.reload(\"bot/\" + deleteState.bot_id + \"/trained\");\r\n    }\r\n  };\r\n  const add_data = (data) => {\r\n    deleteState.push(data);\r\n  };\r\n\r\n  return (\r\n    <Styles>\r\n      <div className=\"train-page\">\r\n        <Navbar_member botID={props.match.params.bot_id} path={\"training\"} />\r\n        <div className=\"container\">\r\n          <div className=\"container-top d-flex bd-highlight\">\r\n            <h2 className=\"p-2 flex-grow-1 bd-highlight\">Trainning</h2>\r\n            <div className=\"p-2 bd-highlight\">\r\n              {/* <button className=\"btn btn-danger\" type=\"button\">\r\n                            Delete\r\n                        </button> */}\r\n              <DeleteModal\r\n                className=\"button_delete_table\"\r\n                dataType={\"training\"}\r\n                dataID={props.match.params.bot_id}\r\n                delete_trained={delete_trained}\r\n                add_data={add_data}\r\n              />\r\n            </div>\r\n            <div className=\"p-2 bd-highlight\">\r\n              {/* <Link to={'/bot/'+props.match.params.bot_id+'/trained'}>\r\n                            <button className=\"btn btn-success\" type=\"button\">Trained</button>\r\n                        </Link> */}\r\n            </div>\r\n          </div>\r\n          <hr></hr>\r\n          <Tablecon\r\n            botID={props.match.params.bot_id}\r\n            delete_trained={delete_trained}\r\n            add_data={add_data}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Train;\r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\add_item.js",["228","229","230","231","232"],"\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    margin-top: 2%;\r\n  }\r\n  .card-bot{\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-bot .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-bot .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .title_part p{\r\n      font-weight: bold;\r\n      margin-top: 9%;\r\n  }\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n    margin-bottom: 5%;\r\n  }\r\n  .form-bot .btn {\r\n    border-radius: 1rem;\r\n    letter-spacing: .1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    align-items: center;\r\n    /* background-color: #; */\r\n  }\r\n  .btn-createbot{\r\n      margin-top: 3rem;\r\n      text-align : center;\r\n  }\r\n  .form-bot input {\r\n    border-radius: 0.5rem;\r\n  }\r\n  .form-bot select{\r\n    border-radius: 0.5rem;\r\n  }\r\n  .row-2{\r\n    margin-bottom: 2rem;\r\n    margin-top: 1rem;\r\n  }\r\n  input[type=file]::-webkit-file-upload-button {\r\n    border: 2px;\r\n    padding: 0.5rem ;\r\n    border-radius: 0.75rem;\r\n    background-color: #fca311;\r\n    transition: 1s;\r\n    color: white;\r\n    width: 40%;\r\n    \r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    max-width: 100%;\r\n  }\r\n  .showimage {\r\n    margin-bottom: 1%;\r\n    text-align: center;\r\n  }\r\n  .showimage img{\r\n    border: 1px solid #ddd;\r\n    border-radius: 50%;\r\n    width: 80%;\r\n    text-align: center;\r\n  }\r\n  \r\n  .vertical-line {\r\n    border-left: 1px solid black;\r\n  }\r\n  .btn-facebook {\r\n    background-color: #0078ff;\r\n  }\r\n  .btn-line {\r\n    background-color: #34a853 ;\r\n  }\r\n`;\r\nlet file = {}\r\nexport default class Add_item extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      item_name: '',\r\n      type: '',\r\n      amount: '',\r\n      bot_id: '',\r\n      imageURL: '',\r\n      Image: '',\r\n      des: '',\r\n      imagesPreviewUrl: [],\r\n      options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }]\r\n    };\r\n    this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n\r\n  handleChange(evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n    console.log(this.state)\r\n  }\r\n\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n\r\n    let i\r\n    for (i = 0; i < e.target.files.length; i++) {\r\n      let reader = new FileReader();\r\n      file[i] = this.uploadInput.files[i]\r\n      if (!file) {\r\n        return\r\n      }\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file: file[i],\r\n          imagesPreviewUrl: [...this.state.imagesPreviewUrl, reader.result]\r\n        });\r\n      }\r\n      console.log(reader.result)\r\n      reader.readAsDataURL(file[i])\r\n\r\n    }\r\n\r\n\r\n  }\r\n  handleUploadImage(ev) {\r\n    ev.preventDefault();\r\n\r\n    console.log(file)\r\n    var i\r\n    const data = new FormData();\r\n    for (i = 0; i < this.uploadInput.files.length; i++) {\r\n      data.append('file' + [i], this.uploadInput.files[i]);\r\n    }\r\n    data.append('item_name', this.item_name.value);\r\n    data.append('type', this.type.value);\r\n    data.append('amount', this.amount.value);\r\n    data.append('creator', localStorage.getItem('user_id'))\r\n    data.append('Image', this.state.Image)\r\n    data.append('des', this.des.value);\r\n    fetch('/bot/' + this.props.match.params.bot_id + '/additem', {\r\n      method: 'POST',\r\n      // headers : {\r\n      //   \"Access-Control-Allow-Origin\": \"*\",\r\n      //   //'Content-Type':'application/json'\r\n      // },\r\n      //body : JSON.stringify(form),\r\n      body: data,\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        this.setState({ imageURL: `/${body.file}` });\r\n        this.setState({ bot_id: data.id })\r\n        this.setState({ redirect: true })\r\n      });\r\n      console.log(\"DDD\")\r\n    });\r\n\r\n  }\r\n  //  componentDidMount ()  {\r\n  // fetch('/bot/'+this.props.match.params.bot_id+'/edit').then((response) => {\r\n  //     response.json().then((data) => {\r\n  //       this.setState({ bot_name: data[0].bot_name });\r\n  //       this.setState({ gender : data[0].gender});\r\n  //       this.setState({ age: data[0].age }) ;\r\n  //       this.setState({ Image: data[0].Img }); \r\n  //     });\r\n  //   });\r\n\r\n  //     }\r\n\r\n  render() {\r\n    const { redirect, bot_id } = this.state;\r\n    if (redirect) {\r\n      return <Redirect to={\"/bot_list/\" + localStorage.getItem('user_id')} />\r\n    }\r\n    else {\r\n      let { imagePreviewUrl } = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      }\r\n      return (\r\n        <Styles>\r\n          <Multiselect\r\n            options={this.state.options} // Options to display in the dropdown\r\n            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n            onSelect={this.onSelect} // Function will trigger on select event\r\n            onRemove={this.onRemove} // Function will trigger on remove event\r\n            displayValue=\"name\" // Property name to display in the dropdown options\r\n          />\r\n\r\n\r\n          <div className=\"container\">\r\n            <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n              <div className=\"card card-bot\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title text-center\">Create Bot form</h5>\r\n                  <form className=\"form-bot\" onSubmit={this.handleUploadImage}>\r\n                    <div className=\"title_part\">\r\n                      <p className=\"col\">Bot infomation</p>\r\n                      <div className=\"line\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"group col-lg-6\">\r\n                        {/* <div className=\"showimage col-lg-8\">\r\n                                          { imagePreviewUrl ?   $imagePreview :<img src={'/images/bot/bot_pic/Avatar.jpg'}/>}            \r\n                                          </div> */}\r\n                        <div className=\"showimage col-lg-8\">\r\n                          {this.state.imagesPreviewUrl.map((imagesPreviewUrl) => {\r\n                            return <img key={imagesPreviewUrl} alt='previewImg' src={imagesPreviewUrl} />\r\n                          })}\r\n\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                          <label for=\"uploadimage\">Upload Proflie</label>\r\n                          <input ref={(ref) => { this.uploadInput = ref; }} onChange={(e) => this._handleImageChange(e)} type=\"file\" multiple />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\" group col-lg-6\">\r\n                        <div className=\"\">\r\n                          <label className=\"form-label\">item name</label>\r\n                          <input type=\"text\" name=\"item_name\" value={this.state.item_name} ref={(ref) => { this.item_name = ref; }} onChange={this.handleChange} className=\"form-control\" id=\"inputbotname\" />\r\n                        </div>\r\n                        <div class=\"mt-3\">\r\n                          <label for=\"inputgender\" class=\"form-label\">type</label>\r\n                          <select id=\"inputgender\" name=\"type\" value={this.state.type} ref={(ref) => { this.type = ref; }} onChange={this.handleChange} class=\"form-select\">\r\n                            <option selected>Choose...</option>\r\n                            <option>Male </option>\r\n                            <option>Female</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                          <label for=\"inputFirstname\" className=\"form-label\">amount</label>\r\n                          <input type=\"integer\" name=\"amount\" className=\"form-control\" id=\"inputfirstname\" value={this.state.amount} ref={(ref) => { this.amount = ref; }} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                          <label for=\"inputFirstname\" className=\"form-label\">Desciption</label>\r\n                          <input type=\"integer\" name=\"des\" className=\"form-control\" id=\"inputfirstname\" value={this.state.des} ref={(ref) => { this.des = ref; }} onChange={this.handleChange} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row row-2\">\r\n\r\n                    </div>\r\n                    {/* <div className=\"title_part\">\r\n                                        <p className=\"col \">Connect platform</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"connect_platform\">\r\n                                  <div className=\"row col-lg-12\">\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\">facebook</button>\r\n                                      </div>\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\">line</button>\r\n                                      </div>\r\n                                  </div>\r\n                                </div> */}\r\n\r\n                    {/* {this.renderSwitch(this.state.platform)} */}\r\n                    {/* <Lineform />                                 */}\r\n\r\n                    <div className=\"btn-createbot\">\r\n                      <button className=\"btn btn-success text-uppercase\" onClick={this.handleUploadImage} type=\"submit\">Create ChatBot</button>\r\n                    </div>\r\n\r\n\r\n                  </form>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </Styles>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Profile_edit.js",["233","234","235","236","237","238","239"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    // background: url(${process.env.PUBLIC_URL +'/images/b.png'}) ;\r\n    filter: gray;\r\n    background-size: 40%;\r\n    background-repeat: repeat;\r\n    position: cover;\r\n  }\r\n\r\n  .card-regis {\r\n    margin-top: 8%;\r\n    margin-bottom: 10%;\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-regis .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-regis .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .form-regis input {\r\n    border-radius: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .form-regis input {\r\n    border-radius: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .form-regis .btn {\r\n    margin-left: 10%;\r\n    border-radius: 1rem;\r\n    letter-spacing: 0.1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    text-align: center;\r\n    align-item: center;\r\n  }\r\n\r\n  .btn-regis .btn {\r\n    text-align: center;\r\n    align-item: center;\r\n  }\r\n\r\n  @mixin transition($property: all, $duration: 0.5s, $ease: cubic-bezier(0.65,-0.25,0.25, 1.95)) {\r\n    transition: $property $duration $ease;\r\n  }\r\n  \r\n  .btn-regis button {\r\n    text-align: center;\r\n    align-item: center;\r\n    position: relative;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: 0;\r\n    vertical-align: middle;\r\n    text-decoration: none;\r\n    &.btn-inregis {\r\n      @include transition(all, 0.5s, cubic-bezier(0.65,-0.25,0.25,1.95));\r\n      font-weight: 900;\r\n      color: $black;\r\n      padding: 1rem 1rem;\r\n      background: $white;\r\n      text-transform: uppercase;\r\n      &:hover, &:focus, &:active {\r\n        letter-spacing: 0.4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n    // label {\r\n    //     font-weight: \r\n    // }\r\n\r\n  .title_part {\r\n      margin-top: 4rem;\r\n    }\r\n\r\n  .title_part  p{\r\n    font-weight: bold;\r\n    margin-top:5%;\r\n  }\r\n\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n  }\r\n\r\n  input-icon{\r\n    display: flex;\r\n    width: 100%;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .form-check{\r\n    margin-top: 10%;\r\n    margin-bottom: 3%;\r\n  }\r\n  \r\n`;\r\n\r\n\r\nclass Profile_edit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      email: '',\r\n      username: '',\r\n      password : '',\r\n      confirm_password : '',\r\n      firstname : '',\r\n      lastname : '',\r\n      birthday : '',\r\n      shop_name : '',\r\n      shop_type : '',\r\n      shop_address : ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n\r\n  handleChange (evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(this.state.password !== this.state.confirm_password){\r\n      console.log('errors');\r\n  }\r\n  else{\r\n    const profile = {\r\n        email: this.state.email,\r\n        username: this.state.username,\r\n        password : this.state.password,\r\n        firstname : this.state.firstname,\r\n        lastname : this.state.lastname,\r\n        birthday : this.state.birthday,\r\n        shop_name : this.state.shop_name,\r\n        shop_type : this.state.shop_type,\r\n        shop_address : this.state.shop_address\r\n      }\r\n      fetch('/profile/'+localStorage.getItem('user_id')+'/edit', {\r\n      method : 'POST',\r\n      headers : {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    })\r\n  \r\n    window.location.replace(\"/login\")\r\n          }\r\n\r\n  }\r\ncomponentDidMount ()  {\r\n  fetch('/profile/'+localStorage.getItem('user_id')+'/edit').then((response) => {\r\n      response.json().then((data) => {\r\n        this.setState({ username: data[0].username });\r\n        this.setState({ firstname: data[0].ft_name });\r\n        this.setState({ lastname: data[0].la_name });\r\n        this.setState({ shop_name: data[0].shop_name });\r\n        this.setState({ shop_type: data[0].type_shop });\r\n        this.setState({ shop_address: data[0].address });\r\n        this.setState({ birthday: data[0].birthday });\r\n        this.setState({ email: data[0].email });\r\n      });\r\n    });\r\n      \r\n      }\r\n    \r\n\r\n  render() {\r\n    return(\r\n        <Styles>\r\n              <div className=\"container\">\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                      <div className=\"card card-regis\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title text-center\">Edit Profile</h5>\r\n                          <form className=\"form-regis\">\r\n                          <div className=\"title_part\">\r\n                                <p className=\"col\">Account infomation</p>\r\n                                <div className=\"line\"></div>\r\n                          </div>\r\n                              <div className=\"my-3\">\r\n                              <label for=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                              <input type=\"email\" className=\"form-control \" value = {this.state.email} id=\"inputemail\" name='email' required value={this.state.email} onChange={this.handleChange} />\r\n                              </div>\r\n                              <div className=\"my-3\">\r\n                                <label for=\"exampleInputEmail1\" className=\"form-label\">Username</label>\r\n                                <input type=\"text\" className=\"form-control\" value = {this.state.username} id=\"inputusername\" name='username' disabled value={this.state.username} onChange={this.handleChange}/>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                {/* <div className=\"col \">\r\n                                  <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                                  <input type=\"password\" className=\"form-control\"  id=\"inputpassword\" name='password'  value={this.state.password} onChange={this.handleChange} /> \r\n                                </div>\r\n                                <div className=\"col\">\r\n                                  <label for=\"exampleInputPassword1\" className=\"form-label\">Comfirm Password</label>\r\n                                  <input type=\"password\" className=\"form-control\" id=\"confirmpassword\" name='confirm_password' value={this.state.confirm_password} onChange={this.handleChange} />  \r\n                                </div> */}\r\n                              </div>\r\n                              <div className=\"title_part\">\r\n                                <p className=\"col\">Personal infomation</p>\r\n                                <div className=\"line\"></div>\r\n                              </div>\r\n                                <div className=\"row my-3\">\r\n                                    <div className=\"col\">\r\n                                        <label for=\"inputFirstname\" className=\"form-label\">Firstname</label>\r\n                                        <input type=\"text\" className=\"form-control\" value = {this.state.firstname} id=\"inputfirstname\"  name='firstname' value={this.state.firstname} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                    <label for=\"inputLastname\" className=\"form-label\">Last name</label>\r\n                                        <input type=\"text\" className=\"form-control\" value = {this.state.lastname} id=\"inputlastname\"  name='lastname' value={this.state.lastname} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                      <label for=\"exampleInputEmail1\" className=\"form-label\">Birthday</label>\r\n                                      <input type=\"date\" className=\"form-control\" id=\"inputdate\" value = {this.state.birthday} name='birthday' value={this.state.birthday} onChange={this.handleChange} />\r\n                                     </div> \r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col my-3\">\r\n                                    <label for=\"exampleInputEmail1\" className=\"form-label\">Shop name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputshopname\" value={this.state.shop_name} name='shop_name' onChange={this.handleChange} />\r\n                                  </div>\r\n                                  <div className=\"col my-3\">\r\n                                    <label for=\"exampleInputEmail1\" className=\"form-label\">Type of sale</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputtypeofsale\" value={this.state.shop_type} name='shop_type' onChange={this.handleChange} />\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                  <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Shop Address</label>\r\n                                  <textarea className=\"form-control\" id=\"inputshopaddress\" value = {this.state.shop_address} rows=\"2\" placeholder=\"หากไม่มีให้เว้นว่างเอาไว้\" name='shop_address' value={this.state.shop_address} onChange={this.handleChange}></textarea>\r\n                                </div>\r\n                                {/* <hr className=\"my-4\"/>                            */}\r\n                              <div className=\"btn-regis mt-5\">\r\n                                  <button className=\"btn btn-primary text-uppercase btn-inregis\" type=\"submit\" onClick={this.handleSubmit} >Submit</button>\r\n                              </div>\r\n                              {/* <hr className=\"my-4\"/>\r\n                              <div align=\"center\">\r\n                                <span> Already have an account ? </span>\r\n                                <a  href=\"/Login\" >Log in</a> \r\n                              </div> */}\r\n                          </form>\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n        </Styles>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile_edit;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Page\\Edit_bot.js",["240","241","242","243"],"  \r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {withRouter, Redirect} from 'react-router-dom'\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    margin-top: 2%;\r\n  }\r\n  .card-bot{\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-bot .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-bot .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .title_part p{\r\n      font-weight: bold;\r\n      margin-top: 9%;\r\n  }\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n    margin-bottom: 5%;\r\n  }\r\n  .form-bot .btn {\r\n    border-radius: 1rem;\r\n    letter-spacing: .1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    align-items: center;\r\n    background-color: #;\r\n  }\r\n  .btn-createbot{\r\n      margin-top: 3rem;\r\n      text-align : center;\r\n  }\r\n  .form-bot input {\r\n    border-radius: 0.5rem;\r\n  }\r\n  .form-bot select{\r\n    border-radius: 0.5rem;\r\n  }\r\n  .row-2{\r\n    margin-bottom: 2rem;\r\n    margin-top: 1rem;\r\n  }\r\n  input[type=file]::-webkit-file-upload-button {\r\n    border: 2px;\r\n    padding: 0.5rem ;\r\n    border-radius: 0.75rem;\r\n    background-color: #fca311;\r\n    transition: 1s;\r\n    color: white;\r\n    width: 40%;\r\n    \r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    max-width: 100%;\r\n  }\r\n  .showimage {\r\n    margin-bottom: 1%;\r\n    text-align: center;\r\n  }\r\n  .showimage img{\r\n    border: 1px solid #ddd;\r\n    border-radius: 50%;\r\n    width: 80%;\r\n    text-align: center;\r\n  }\r\n  \r\n  .vertical-line {\r\n    border-left: 1px solid black;\r\n  }\r\n  .btn-facebook {\r\n    background-color: #0078ff;\r\n  }\r\n  .btn-line {\r\n    background-color: #34a853 ;\r\n  }\r\n`;\r\n\r\nclass Edit_bot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bot_name: '',\r\n      gender: '',\r\n      age: '',\r\n      bot_id:'',\r\n      imageURL: '',\r\n      Image: '',\r\n    };\r\n    this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n \r\n  handleChange (evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n    console.log(this.state)\r\n  }\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    console.log(\"File = \"+JSON.stringify(file))\r\n    if (!file){\r\n      return\r\n    }\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n        });      \r\n    }\r\n    reader.readAsDataURL(file)\r\n  }\r\n  handleUploadImage(ev) {\r\n    ev.preventDefault();\r\n    \r\n\r\n    const data = new FormData();\r\n    data.append('file', this.uploadInput.files[0]);\r\n    data.append('bot_name',this.bot_name.value);\r\n    data.append('gender' ,this.gender.value);\r\n    data.append('age' ,this.age.value);\r\n    data.append('creator' , localStorage.getItem('user_id'))\r\n    data.append('Image' , this.state.Image)\r\n    fetch('/bot/'+this.props.match.params.bot_id+'/edit', {\r\n      method: 'POST',\r\n      // headers : {\r\n      //   \"Access-Control-Allow-Origin\": \"*\",\r\n      //   //'Content-Type':'application/json'\r\n      // },\r\n      //body : JSON.stringify(form),\r\n      body: data,\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        this.setState({ imageURL: `/${body.file}` });\r\n        this.setState({ bot_id : data.id})\r\n        this.setState({ redirect: true }) \r\n      });\r\n    });\r\n  }\r\n     componentDidMount ()  {\r\n    fetch('/bot/'+this.props.match.params.bot_id+'/edit').then((response) => {\r\n        response.json().then((data) => {\r\n          this.setState({ bot_name: data[0].bot_name });\r\n          this.setState({ gender : data[0].gender});\r\n          this.setState({ age: data[0].age }) ;\r\n          this.setState({ Image: data[0].Img }); \r\n        });\r\n      });\r\n        \r\n        }\r\n      \r\n    render() {\r\n    const { redirect,bot_id } = this.state;\r\n    if (redirect) {\r\n      return <Redirect to={\"/bot_list/\"+ localStorage.getItem('user_id')} />\r\n    }\r\n    else {\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        \r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      }\r\n      return(\r\n        <Styles>\r\n          \r\n              <div className=\"container\">\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                      <div className=\"card card-bot\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title text-center\">Create Bot form</h5>\r\n                          <form className=\"form-bot\" onSubmit={this.handleUploadImage}>\r\n                                <div className=\"title_part\">\r\n                                        <p className=\"col\">Bot infomation</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                        <div className=\"group col-lg-6\">\r\n                                          <div className=\"showimage col-lg-8\">\r\n                                          { imagePreviewUrl ?   $imagePreview :  <img src={'/images/bot/bot_pic/'+this.state.Image}/> }            \r\n                                          </div>\r\n                                          <div className=\"mt-3\">                                           \r\n                                              <label for=\"uploadimage\">Upload Proflie</label>\r\n                                              <input  ref={(ref) => { this.uploadInput = ref; }} onChange={(e)=>this._handleImageChange(e)} type=\"file\"  />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div className=\" group col-lg-6\">\r\n                                            <div className=\"\">\r\n                                              <label  className=\"form-label\">Bot Name</label>\r\n                                              <input type=\"text\"  name=\"bot_name\" value = {this.state.bot_name}  ref={(ref) => { this.bot_name = ref; }} onChange={this.handleChange} className=\"form-control\" id=\"inputbotname\"/>\r\n                                            </div>\r\n                                            <div class=\"mt-3\">\r\n                                              <label for=\"inputgender\" class=\"form-label\">Gender</label>\r\n                                              <select id=\"inputgender\" name=\"gender\" value = {this.state.gender}  ref={(ref) => { this.gender = ref; }} onChange={this.handleChange} class=\"form-select\">\r\n                                                  <option selected>Choose...</option>\r\n                                                  <option>Male </option>\r\n                                                  <option>Female</option>\r\n                                              </select>\r\n                                            </div>\r\n                                            <div className=\"mt-3\">\r\n                                                <label for=\"inputFirstname\" className=\"form-label\">Age</label>\r\n                                                <input type=\"integer\" name=\"age\" className=\"form-control\" id=\"inputfirstname\" value = {this.state.age}   ref={(ref) => { this.age = ref; }} onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                                <div className=\"row row-2\">\r\n                                        \r\n                                </div>\r\n                                {/* <div className=\"title_part\">\r\n                                        <p className=\"col \">Connect platform</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"connect_platform\">\r\n                                  <div className=\"row col-lg-12\">\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\">facebook</button>\r\n                                      </div>\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\">line</button>\r\n                                      </div>\r\n                                  </div>\r\n                                </div> */}\r\n\r\n                            {/* {this.renderSwitch(this.state.platform)} */}\r\n                            {/* <Lineform />                                 */}\r\n\r\n                              <div className=\"btn-createbot\">\r\n                                  <button className=\"btn btn-success text-uppercase\" onClick={this.handleUploadImage} type=\"submit\">Create ChatBot</button>\r\n                              </div>\r\n\r\n\r\n                          </form>\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n        </Styles>\r\n      )\r\n    }\r\n}\r\n}\r\n\r\nexport default Edit_bot;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Navbar\\real_nav.js",["244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import './real_nav.css';\r\nimport { ReactComponent as CaretIcon } from './icons/caret.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport {isLoggedIn, deleteTokens} from '../auth';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n\r\nfunction Nav(){\r\n  if(isLoggedIn()){\r\n    return Loged_in_nav(localStorage.getItem('username'));\r\n  }\r\n  else{\r\n    return Normal_nav();\r\n  }\r\n\r\n}\r\n\r\nfunction Normal_nav(){\r\n  return(\r\n    <Navbar_real>\r\n      <Link to=\"/login\">\r\n          <div className=\"btn-login btn-nav\">\r\n              <a className=\"btn\" role=\"button\">Log in</a>\r\n          </div>\r\n      </Link>\r\n      <Link to=\"/register\">\r\n          <div className=\"btn-signup btn-nav\">\r\n              <a className=\"btn\" role=\"button\">Register</a>\r\n          </div>\r\n      </Link>\r\n      </Navbar_real>\r\n    )\r\n}\r\n\r\nfunction Loged_in_nav(props) {\r\n\r\n  return (\r\n    \r\n    \r\n    <Navbar_real>\r\n        <div className=\"show-user\">  \r\n          <a href={\"/bot_list/\"+ localStorage.getItem('user_id')}><i class=\"fas fa-user\"></i>{props}</a>\r\n        </div>\r\n      <NavItem icon={<CaretIcon />}>\r\n        <DropdownMenu></DropdownMenu>\r\n      </NavItem>\r\n    </Navbar_real>\r\n    \r\n  );\r\n}\r\n\r\nfunction Navbar_real(props) {\r\n  return (\r\n    <nav className=\"navbar-real\">\r\n      <a href=\"/\">\r\n          <img href=\"/\" src=\"/images/logo2.PNG\" className=\"nav_brand\"/>\r\n      </a>    \r\n          <ul className=\"navbar-nav-real\">{props.children}</ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction NavItem(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    \r\n    <li className=\"nav-item-real\">\r\n      <a href=\"#\" className=\"icon-button-real\" onClick={() => setOpen(!open)}>\r\n        {props.icon}\r\n      </a>\r\n\r\n      {open && props.children}\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\nfunction DropdownMenu() {\r\n  const [activeMenu, setActiveMenu] = useState('main');\r\n  const [username, setUsername] = useState(localStorage.getItem('user_id'));\r\n  const dropdownRef = useRef(null);\r\n\r\n  function DropdownItem(props) {\r\n    return (\r\n      <a href=\"#\" className=\"menu-item-real\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\r\n        <span className=\"icon-button-real\">{props.leftIcon}</span>\r\n        {props.children}\r\n        <span className=\"icon-right-real\">{props.rightIcon}</span>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"dropdown-real\"  ref={dropdownRef}>\r\n\r\n      {/* <CSSTransition\r\n        in={activeMenu === 'main'}\r\n        timeout={500}\r\n        classNames=\"menu-primary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}> */}\r\n      <CSSTransition\r\n      in={activeMenu === 'main'}\r\n      timeout={500}\r\n      classNames=\"menu-primary\"\r\n      unmountOnExit\r\n      >\r\n        <div className=\"menu-real\">\r\n          {/* <DropdownItem\r\n            leftIcon={<CogIcon />}\r\n            rightIcon={<ChevronIcon />}\r\n            goToMenu=\"settings\">\r\n            Settings\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            leftIcon=\"🦧\"\r\n            rightIcon={<ChevronIcon />}\r\n            goToMenu=\"animals\">\r\n            Animals\r\n          </DropdownItem> */}\r\n           <a onClick={() => {\r\n            window.location.replace(\"/profile/\"+ localStorage.getItem('user_id')+\"/edit\")\r\n          }}>\r\n            <DropdownItem \r\n              leftIcon= {<i class=\"fas fa-user\"></i>}>\r\n                Edit Profile\r\n            </DropdownItem>\r\n          </a>\r\n          <a onClick={() => {\r\n            window.location.replace(\"/bot_list/\"+ localStorage.getItem('user_id'))\r\n          }}>\r\n            <DropdownItem \r\n              leftIcon= {<i class=\"fas fa-robot\"></i>}>\r\n                Manage Bot\r\n            </DropdownItem>\r\n          </a>\r\n          <a onClick={() => {\r\n            window.location.replace('/manual')\r\n          }}>\r\n            <DropdownItem \r\n              leftIcon= {<i class=\"fas fa-book-open\"></i>}>        \r\n              Manual\r\n            </DropdownItem>\r\n          </a>\r\n          <a onClick={() => {\r\n            deleteTokens();\r\n            window.location.replace(\"/\")\r\n          }}>\r\n            <DropdownItem \r\n              leftIcon= {<i className=\"fas fa-sign-out-alt signout-icon\" >\r\n                </i>}>\r\n                SIGN OUT\r\n            </DropdownItem>\r\n          </a>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Reducers\\aReducers.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\AddTable\\AddWord.js",["258"],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablemap.js",["259"],"import React, { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Mapchart} from \"./Manage_map/Mapchart\";\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Styles = styled.div`\r\n.table{\r\n  border-collapse: collapse;\r\n  margin: 10px 0;\r\n  font-size: 0.9em;\r\n  border-radius: 5px 5px 0 0;\r\n  overflow: hidden;\r\n}\r\n.table thead tr{\r\n  text-align: left;\r\n  font-weight: bold;\r\n  border: none;\r\n}\r\n.table th,\r\n.table td{\r\n  padding: 12px 15px;\r\n  border: none;\r\n}\r\n.table tbody tr{\r\n  border-bottom: 1px solid #dddddd;\r\n}\r\n.table tbody tr:nth-of-type(even){\r\n  background-color: #e5e5e5;\r\n}\r\n`;\r\n\r\nfunction Tablemap() {\r\n  const [TablemapState, setTablemapState] = useState([]);\r\n  const [showMap, setShowMap] = useState(false);\r\n\r\n  const openMap = () => { \r\n    setShowMap(prev => !prev);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let TablemapState = [\r\n        { id: 1, Word: \"hiii\", ReplyWord: \"may i help u\"},\r\n        { id: 2, Word: \"heyy\", ReplyWord: \"may i help u\"},\r\n        { id: 3, Word: \"hello\", ReplyWord: \"may i help u\"}\r\n    ];\r\n\r\n    setTablemapState(\r\n      TablemapState.map(d => {\r\n        return {\r\n          select: false,\r\n          id: d.id,\r\n          Word: d.Word,\r\n          ReplyWord: d.ReplyWord,\r\n          Link: false,\r\n        };\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Styles>\r\n    <div className=\"container\">\r\n     \r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={e => {\r\n                  let checked = e.target.checked;\r\n                  setTablemapState(\r\n                    TablemapState.map(d => {\r\n                      d.select = checked;\r\n                      return d;\r\n                    })\r\n                  );\r\n                }}\r\n              ></input>\r\n            </th>\r\n            <th scope=\"col\">Word</th>\r\n            <th scope=\"col\">Reply Word</th>\r\n            <th scope=\"col\">Link</th>\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <th scope=\"row\">Search</th>\r\n                <td>\r\n                <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>\r\n                </td>\r\n                <td>\r\n                <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>  \r\n                </td>\r\n                <td>\r\n                <i className=\"far fa-edit\" onClick={openMap}></i>\r\n                </td>\r\n                \r\n            </tr>\r\n          {TablemapState.map((d, i) => (\r\n            <tr key={d.id}>\r\n              <th scope=\"row\">\r\n                <input\r\n                  onChange={event => {\r\n                    let checked = event.target.checked;\r\n                    setTablemapState(\r\n                      TablemapState.map(data => {\r\n                        if (d.id === data.id) {\r\n                          data.select = checked;\r\n                        }\r\n                        return data;\r\n                      })\r\n                    );\r\n                  }}\r\n                  type=\"checkbox\"\r\n                  checked={d.select}\r\n                ></input>\r\n              </th>\r\n              <td>{d.Word}</td>\r\n              <td>{d.ReplyWord}</td>\r\n              <td>\r\n                {/* <Button className='buttonaddWord' onClick={openMap}>edit</Button> */}\r\n                <i className=\"far fa-edit\" onClick={openMap}></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          <Mapchart showMap={showMap} setShowMap={setShowMap} />\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Tablemap;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Navbar\\navbar_member.js",["260","261","262","263","264","265","266","267","268","269","270","271","272"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {createStore} from 'redux'\r\nimport tReducers from '../../Reducers/tReducers'\r\nimport {connect} from 'react-redux'\r\nimport { Provider,useSelector,useDispatch} from 'react-redux'\r\n// const store = createStore(tReducers,+  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nconst Styles = styled.div` \r\n  .navbar-c {\r\n    position: relative;\r\n    background-color: #000000;\r\n    transition: width 600ms ease;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    \r\n  }\r\n  \r\n  .navbar-nav-c {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n  \r\n  .nav-item-c {\r\n    width: 100%;\r\n  }\r\n\r\n  .nav-link-c {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 4rem;\r\n    color: yellow;\r\n    text-decoration: none;\r\n    filter: grayscale(100%) opacity(0.7);\r\n    transition: 200ms;;\r\n  }\r\n  \r\n  .nav-link-c:hover {\r\n    filter: grayscale(0%) opacity(1);\r\n  }\r\n  \r\n  .nav-link-c i {\r\n    font-size: 20px;\r\n    min-width: 2rem;\r\n    margin: 0 1.5rem;\r\n  }\r\n  \r\n  .fa-primary {\r\n    color: #000000;\r\n  }\r\n\r\n  \r\n  .fa-secondary {\r\n    color: #fca311;\r\n  }\r\n  \r\n  .fa-primary,\r\n  .fa-secondary {\r\n    transition: 200ms;\r\n  }\r\n  \r\n\r\n  @media only screen and (min-width: 600px) {\r\n    .navbar-c {\r\n      top: 0;\r\n      width:  5rem;\r\n      height: 92vh;\r\n    }\r\n  }\r\n\r\n  //////////////////////////////////////////\r\n  .navbar2 {\r\n    position: relative;\r\n    background-color: #000000;\r\n    transition: width 600ms ease;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  \r\n  .navbar-nav2 {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n  \r\n  .nav-item2 {\r\n    width: 100%;\r\n  }\r\n  \r\n  .nav-link2 {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 4rem;\r\n    color: yellow;\r\n    text-decoration: none;\r\n    filter: grayscale(100%) opacity(0.7);\r\n    transition: 200ms;;\r\n  }\r\n  \r\n  .nav-link2:hover {\r\n    filter: grayscale(0%) opacity(1);\r\n    color: white;\r\n  }\r\n  \r\n  \r\n  .nav-link2 i {\r\n    font-size: 20px;\r\n    /* font-weight */\r\n    min-width: 2rem;\r\n    margin: 0 1.5rem;\r\n  }\r\n  \r\n  \r\n  /* Large screens */\r\n  @media only screen and (min-width: 600px) {\r\n    .navbar2 {\r\n      top: 0;\r\n      width: 14rem;\r\n      height: 92vh;\r\n    }\r\n  \r\n  }\r\n  \r\n  .navbar2 span{\r\n    font-weight: bold;\r\n    // margin-left: 15%;\r\n  }\r\n\r\n  .btn-nav{\r\n    margin-top:20px;\r\n    display: flex;\r\n    align-items: center;\r\n    /* color: #fca311; */\r\n    text-decoration: none;\r\n    font-size:20px;\r\n  }\r\n\r\n  .btn-nav-open i {\r\n    width: 5rem;\r\n    transform: rotate(0deg);\r\n    transition: 500ms;\r\n  }\r\n\r\n  .btn-nav-close {\r\n    color: #fca311;\r\n    text-align: right;\r\n    margin-right: 3rem;\r\n    width: 14rem;\r\n  }\r\n\r\n  .btn-nav-open i{\r\n    transform:  rotateY(0deg);\r\n    transition: 300ms;\r\n  } \r\n\r\n  .btn-nav-open i:hover {\r\n    transform:  rotateY(150deg);\r\n    /* transition: 500ms; */\r\n  }\r\n\r\n  .btn-nav-close i{\r\n    transform:  rotateY(0deg);\r\n    transition: 300ms;\r\n  }\r\n\r\n  .btn-nav-close i:hover{\r\n    transform:  rotateY(150deg);\r\n    /* transition: 500ms; */\r\n  }\r\n  \r\n.nav-check {\r\n  display: flex;\r\n    align-items: center;\r\n    height: 4rem;\r\n    text-decoration: none;\r\n    /* color: #fca311; */\r\n    transition: 200ms;\r\n    border-left: 4px solid #fafafa;\r\n    border-radius: 5%;\r\n    background-color : #242424;\r\n  }\r\n  \r\n.nav-check i {\r\n    color: #fca311;\r\n    /* filter: grayscale(100%) opacity(0.7); */\r\n    font-size: 20px;\r\n    /* font-weight */\r\n    padding: 10%;\r\n    min-width: 2rem;\r\n    margin: 0 1rem;\r\n    /* backdrop-filter: blur(10px); */\r\n  }\r\n\r\n  .nav-check-open {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 4rem;\r\n    text-decoration: none;\r\n    transition: 200ms;\r\n    background-color : #242424;\r\n    border-radius: 5%;\r\n    border-left: 4px solid #fafafa;\r\n    /* backdrop-filter: opacity(30%); */\r\n    /* backdrop-filter: blur(10px); */\r\n\r\n  }\r\n\r\n  .nav-check-open i {\r\n    font-size: 20px;\r\n    /* font-weight */\r\n    min-width: 2rem;\r\n    margin: 0 1.5rem;\r\n  }\r\n\r\n  .nav-check-open span {\r\n    color: white;\r\n    /* filter: grayscale(100%) opacity(0.7); */\r\n\r\n  }\r\n\r\n`;\r\n\r\nfunction Navbar_member({ botID, path  }) {\r\n  const stetus = useSelector(state => state.tr)\r\n  const [change, setchange] = useState(stetus);\r\n \r\n  // setchange(ichange)\r\n  const dispatch = useDispatch()\r\n  // const stetus = useSelector(state => state.auth)\r\n  const Change = (e) => {\r\n  \r\n    if (change == true) {\r\n      setchange(false);\r\n    } else if (change == false){\r\n      setchange(true);\r\n    }\r\n \r\n \r\n  };\r\n  // const testChange = (e) => {\r\n  //   e.preventDefault();\r\n  // }\r\n  const onSubmit = () =>{\r\n    \r\n    dispatch({\r\n      type : \"testcase\",\r\n      change : change\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Styles>\r\n      {change ? (\r\n        <nav className=\"navbar-c\">\r\n          <ul className=\"navbar-nav-c\">\r\n            <li className=\"btn-nav\">\r\n              <Link onClick={Change} className=\"btn-nav-open\" > \r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"fas fa-angle-double-right\"></i> \r\n                      </div>\r\n                  </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item-c\">\r\n            { path==\"training\" ? ( \r\n              <Link to={\"/bot/\" + botID + \"/training\"} onClick={onSubmit} class=\"nav-check\">\r\n                  <div className=\"fa-group\">\r\n                    <div className=\"fa-secondary\">\r\n                      <i className=\"fas fa-robot\"></i>\r\n                    </div>\r\n                  </div>\r\n              </Link> ) : (\r\n                <Link to={\"/bot/\" + botID + \"/training\"} onClick={onSubmit} class=\"nav-link-c\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-robot\"></i>\r\n                  </div>\r\n                </div>\r\n            </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            { path==\"trained\" ? ( \r\n              <Link to={\"/bot/\" + botID + \"/trained\"}  onClick={onSubmit} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-graduation-cap\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/trained\"}  onClick={onSubmit} class=\"nav-link-c\">\r\n                  <div className=\"fa-group\">\r\n                       <div className=\"fa-secondary\">\r\n                          <i class=\"fas fa-graduation-cap\"></i>\r\n                        </div>\r\n                  </div>\r\n              </Link>\r\n              ) \r\n            }\r\n            </li>\r\n            <li className=\"nav-item-c\">\r\n            { path==\"group\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/group\"} onClick={onSubmit} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-object-group\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/group\"} onClick={onSubmit} class=\"nav-link-c\">\r\n                    <div className=\"fa-group\">\r\n                        <div className=\"fa-secondary\">\r\n                            <i class=\"fas fa-object-group\"></i>\r\n                        </div>\r\n                    </div>\r\n              </Link>\r\n              ) \r\n            }\r\n            </li>\r\n            <li className=\"nav-item-c\">\r\n            { path==\"mapping\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/mapping\"} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-project-diagram\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/mapping\"} class=\"nav-link-c\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i class=\"fas fa-project-diagram\"></i>\r\n                      </div>\r\n                  </div>\r\n                </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            <Link class=\"nav-link-c\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-history\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            <Link class=\"nav-link-c\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fad fa-boxes\"></i>\r\n                  </div>\r\n                </div>\r\n            </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            <Link class=\"nav-link-c\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"far fa-address-book\"></i>\r\n                  </div>\r\n                </div>\r\n            </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n      ) : (\r\n\r\n        <nav className=\"navbar2\">\r\n          <ul className=\"navbar-nav2\">\r\n            <li className=\"btn-nav\">\r\n              \r\n              <Link onClick={Change} className=\"btn-nav-close\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-angle-double-left\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"training\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/training\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-robot\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Training bot</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/training\"} onClick={onSubmit} class=\"nav-link2\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"fas fa-robot\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span className=\"link-text\">Training bot</span>\r\n              </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            \r\n            <li className=\"nav-item2\">\r\n            { path==\"trained\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/trained\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-graduation-cap\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Trained</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/trained\"}  onClick={onSubmit} class=\"nav-link2\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i class=\"fas fa-graduation-cap\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span className=\"link-text\">Trained</span>\r\n              </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"group\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/group\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-object-group\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Group</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/group\"} onClick={onSubmit} class=\"nav-link2\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-object-group\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Group</span>\r\n              </Link> \r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"mapping\" ? (  \r\n              <Link to={\"/bot/\" + botID + \"/mapping\"} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-project-diagram\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Mapping</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/mapping\"} class=\"nav-link2\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-project-diagram\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Mapping</span>\r\n              </Link>  \r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            <Link class=\"nav-link2\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-history\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">History</span>\r\n            </Link>  \r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            <Link class=\"nav-link2\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fad fa-boxes\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Inventory</span>\r\n            </Link> \r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            <Link class=\"nav-link2\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"far fa-address-book\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Customer <br></br> infomation</span>\r\n            </Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n      )}\r\n\r\n\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default connect()(Navbar_member);\r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\Table.js",["273","274","275","276","277","278","279","280"],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Delete_pop.js",["281"],"import React, { useRef, useEffect, useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { Container } from \"react-bootstrap\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ImageWarnning from \"./Images/warnning2.png\";\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  width: 400px;\r\n  height: 250px;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  background: #fff;\r\n  color: #000;\r\n  display: grid;\r\n  z-index: 10;\r\n  border-radius: 10px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(90%, -140%);\r\n  margin-top: 250px;\r\n`;\r\n\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  width: 25px;\r\n  height: 25px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1.8;\r\n\r\n.button-delete-bot{\r\n  text-align: center;\r\n}\r\n\r\n.button-delete-bot .cancle-delete-bot{\r\n  padding: 7px 15px;\r\n  font-size: 12px;\r\n  border-radius: 25px;\r\n  border: 1px solid #0078ff;\r\n  transition: 0.5s;\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  color: #0078ff;\r\n\r\n}\r\n\r\n.button-delete-bot .cancle-delete-bot:hover{\r\n  color:#fff;\r\n}\r\n\r\n.button-delete-bot .delete-bot{\r\n    padding: 7px 15px;\r\n    font-size: 12px;\r\n    border-radius: 25px;\r\n    border: 1px solid #CD5C5C;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #CD5C5C;\r\n    color: #fff;\r\n}\r\n.button-delete-bot .delete-bot:hover{\r\n  color: #000;\r\n}\r\n\r\nimg{\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 50%;\r\n}\r\n`;\r\n\r\nfunction Delete_pop({ showDelete_pop, setShowDelete_pop, Delete_bot, bot }) {\r\n\r\n  const ConfirmDelete = (bot) => {\r\n    Delete_bot(bot)\r\n    setShowDelete_pop(prev => !prev)\r\n  }\r\n  console.log(showDelete_pop);\r\n\r\n  const modalRef = useRef();\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250\r\n    },\r\n    opacity: showDelete_pop ? 1 : 0,\r\n    transform: showDelete_pop ? `translateY(0%)` : `translateY(-100%)`\r\n  });\r\n\r\n  const closeModal = e => {\r\n    if (modalRef.current === e.target) {\r\n      setShowDelete_pop(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showDelete_pop) {\r\n        setShowDelete_pop(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowDelete_pop, showDelete_pop]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {showDelete_pop ? (\r\n        <Background onClick={closeModal} ref={modalRef}>\r\n          <animated.div style={animation}>\r\n            <Container>\r\n              <ModalWrapper showDelete_pop={showDelete_pop}>\r\n                <ModalContent>\r\n                  <div>\r\n                    <img src={ImageWarnning} alt=\"warnning\" className=\"warnning_img\" />\r\n                  </div>\r\n                  you want to delete this bot?\r\n                <Container className=\"button-delete-bot\">\r\n                    <Button className=\"cancle-delete-bot\" onClick={() => setShowDelete_pop(prev => !prev)}>cancle</Button>\r\n                    <Button className=\"delete-bot\" onClick={() => { ConfirmDelete(bot)}}>delete</Button>\r\n                  </Container>\r\n                </ModalContent>\r\n                <CloseModalButton\r\n                  aria-label=\"Close modal\"\r\n                  onClick={() => setShowDelete_pop(prev => !prev)}\r\n                />\r\n              </ModalWrapper>\r\n            </Container>\r\n          </animated.div>\r\n        </Background>\r\n      ) : null}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Delete_pop;\r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\delete_modal.js",["282","283","284","285","286"],"import React,{ useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n  function rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n  }\r\n\r\n  function getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\nexport default function DeleteModal({dataID,delete_trained,add_data, dataType}){\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    \r\n    const deleteData = (ID, dataType) => {\r\n        fetch('/'+dataType+'/'+ID+'/delete')\r\n    }\r\n    \r\n    \r\n\r\n    const button = (dataType) =>{\r\n        if(dataType == 'bot'){\r\n            return (\r\n                <a href=\"#\" onClick={handleOpen} ><i class=\"fas fa-trash\"></i> Delete</a>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <button className=\"btn btn-danger\" onClick={handleOpen} type=\"button\">\r\n                    Delete\r\n                </button>\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    function onKeyDown(event) {\r\n      if (event.key === 'Enter' ) {\r\n        delete_trained(dataID)\r\n      }\r\n    }\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            Do you want to delete this data?\r\n            <div>\r\n                <button className=\"btn btn-success\" onKeyDown={onKeyDown} onClick={()=>delete_trained(dataID)} type=\"button\">\r\n                    Yes\r\n                </button>\r\n                <button className=\"btn btn-danger\" onClick={handleClose} type=\"button\">\r\n                    No\r\n                </button>\r\n            </div>\r\n        </div>\r\n      );\r\n    return (\r\n        <>\r\n            {button(dataType)}\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n           {body} \r\n          </Modal>\r\n        </>\r\n    );\r\n}","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablecon.js",["287","288","289","290"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport {Button} from 'react-bootstrap';\r\nimport {AddWord} from './AddTable/AddWord';\r\nimport { AddStyle } from \"./AddStyle\";\r\n\r\n\r\nconst Styles = styled.div`\r\n.table{\r\n  border-collapse: collapse;\r\n  margin: 10px 0;\r\n  font-size: 0.9em;\r\n  border-radius: 5px 5px 0 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.table thead tr{\r\n  text-align: left;\r\n  font-weight: bold;\r\n  border: none;\r\n}\r\n\r\n.table th,\r\n.table td{\r\n  padding: 12px 15px;\r\n  border: none;\r\n}\r\n\r\n.table tbody tr{\r\n  border-bottom: 1px solid #dddddd;\r\n}\r\n\r\n.table tbody tr:nth-of-type(even){\r\n  background-color: #e5e5e5;\r\n}\r\n\r\n.buttonaddWord{\r\n  padding: 7px 15px;\r\n  font-size: 12px;\r\n  border-radius: 25px;\r\n  border: 1px solid #0078ff;\r\n  transition: 0.5s;\r\n  background-color: #0078ff;\r\n  color: #fff;\r\n}\r\n\r\n.buttonaddWord:hover{\r\n  color: #000;\r\n}\r\n`;\r\n\r\nfunction Tablecon({botID,add_data}) {\r\n  const [TableconState, setTableconState] = useState([]);\r\n  const [newState, setnewState] = useState([]);\r\n  const [showWord, setShowWord] = useState(false);\r\n\r\n  let x = 0;\r\n  \r\n  // for (newst in TableconState)\r\n  // {\r\n    \r\n\r\n  //   x++;\r\n  // }\r\n  // console.log(TableconState.AddWord)\r\n  // setnewState({Word : TableconState.AddWord})\r\n\r\n const openWord = () => {\r\n    setShowWord(prev => !prev);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('/train_bot/'+botID+'/training')\r\n    .then(res => res.json().then(data => {\r\n      setTableconState(\r\n        data.map(d => {\r\n          console.log(d)\r\n          return {\r\n            select: false,\r\n            id: d._id.$oid,\r\n            Word: d.question,\r\n            ReplyWord: d.answer,\r\n            Confidence : d.confident\r\n          };\r\n        })\r\n    \r\n\r\n      );\r\n      \r\n    }))\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <Styles>\r\n          <Button className='buttonaddWord' onClick={openWord}>Add Word</Button>\r\n          <AddWord showWord={showWord} setShowWord={setShowWord} botID = {botID}/>\r\n          <AddStyle />\r\n      \r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={e => {\r\n                  let checked = e.target.checked;\r\n                  setTableconState(\r\n                    TableconState.map(d => {\r\n                      d.select = checked;\r\n                      return d;\r\n                    })\r\n                  );\r\n                }}\r\n              ></input>\r\n            </th>\r\n            <th scope=\"col\">Word</th>\r\n            <th scope=\"col\">Reply Word</th>\r\n            <th scope=\"col\">Confidence</th>\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <th scope=\"row\">Search</th>\r\n                <td>\r\n                <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>\r\n                </td>\r\n                <td>\r\n                <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>  \r\n                </td>\r\n                <td>Avg</td>\r\n                \r\n            </tr>\r\n          {TableconState.map((d, i) => (\r\n            <tr key={d.id}>\r\n              <th scope=\"row\">\r\n                <input\r\n                  onChange={event => {\r\n                    let checked = event.target.checked;\r\n                    setTableconState(\r\n                      TableconState.map(data => {\r\n                        if (d.id === data.id) {\r\n                          data.select = checked;\r\n                          add_data(data)\r\n                        }\r\n                        return data;\r\n                        \r\n                      })\r\n                    );\r\n                  }}\r\n                  type=\"checkbox\"\r\n                  checked={d.select}\r\n                ></input>\r\n              </th>\r\n              <td>{d.Word}</td>\r\n              <td>{d.ReplyWord}</td>\r\n              <td>{d.Confidence}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Tablecon;","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Botlist\\button_nav.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Landing\\endpage.js",["291"],"import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport {isLoggedIn} from '../auth'\r\n\r\n// import Telephone from './images/Telephone.png';\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    align-items: center;\r\n  }\r\n\r\n  .container {\r\n    // background: url(${process.env.PUBLIC_URL +'/images/Background.png'}) no-repeat fixed bottom;\r\n    background-size: 100%;\r\n    // margin-top: 10%;\r\n    margin-bottom: 20%;\r\n}\r\n\r\n  #main {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  \r\n  #main .main-text {\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    line-height: 1.25;\r\n    \r\n  }\r\n\r\n  h1 {\r\n    font-size: 40px;\r\n    font-weight: 700;\r\n    margin-bottom: 5%;\r\n    font-family: 'Roboto', sans-serif;\r\n\r\n  }\r\n\r\n  span {\r\n    font-size: 20px;\r\n    color: grey;\r\n    margin-bottom: 15%;\r\n  }\r\n\r\n  .btn-regis button {\r\n    color: black;\r\n    font-weight: bold;\r\n    padding: 15px 90px;\r\n    border-radius: 30px;\r\n    background-color: #fca311;\r\n    border-style :none;\r\n  }\r\n\r\n  .btn-regis button:hover {\r\n    color: black;\r\n    font-weight: bold;\r\n    padding: 15px 90px;\r\n    border-radius: 30px;\r\n    background-color: white;\r\n    border: 2px solid #fca311;\r\n  }\r\n    \r\n\r\n`;\r\n\r\nfunction regisBot(props){\r\n  if(isLoggedIn()){\r\n    return(\r\n      <Link to={'/bot_list/'+localStorage.getItem('user_id')}>\r\n        <button className=\"\" >Manage Bot</button>\r\n      </Link>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <Link to = \"/register\">\r\n          <button class=\"btn btn-primary\" type=\"button\">Register for FREE! </button>\r\n      </Link>\r\n    )\r\n  }  \r\n} \r\n\r\nexport const Endpage = () => (\r\n  <Styles>\r\n    <Container className=\"container\">\r\n    <Jumbo fluid className=\"jumbo d-flex position-relative\">\r\n        <section id=\"main\">\r\n          <img src=\"./images/phone_group.png\" width=\"90%\"/>\r\n          <div className=\"main-text\">\r\n            <h1>Improve at every stage <br/> of your business growth</h1>\r\n            <span>No matter whether you’re a growing company <br/> ChatBot helps you communicate better with customers.</span>\r\n            <div class=\"d-grid gap-2 col-6 mx-auto mt-5 btn-regis\">\r\n              {regisBot()}\r\n            </div>\r\n          </div>\r\n          \r\n        </section>\r\n    </Jumbo>\r\n    </Container>\r\n  </Styles>\r\n) \r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Form\\lineform.js",["292","293"],"import React, { useState, useEffect }from 'react';\r\nimport styled from 'styled-components';\r\nimport packageJson from '../../../package.json';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Styles = styled.div`\r\n.container {\r\n    margin-top: 2%;\r\n}\r\n\r\n.facebook-card {\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    background-color: #fff;\r\n    color: black;\r\n    // box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\r\n    // border: 1px solid rgba(0,0,0,.1);\r\n    border: 5px solid #34a853;\r\n}\r\n\r\n.facebook {\r\n    padding : 5%;\r\n}\r\n\r\n.facebook p{\r\n    font-weight: bold;\r\n    font-size: 23px;\r\n    margin: 0 0 25px;\r\n}\r\n\r\n.link i{\r\n    color: #34a853;\r\n}\r\n\r\n.link p{\r\n    font-size: 11px;\r\n    color: black;\r\n}\r\n\r\n.copy-clipboard {\r\n    color: #34a853;\r\n    position: absolute;\r\n    top: 275px;\r\n    right: 70px;\r\n}\r\n\r\n.link button{\r\n    background: white;\r\n    padding: 5px 12px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #34a853;\r\n    transition: 0.5s;\r\n}\r\n\r\n.facebook .input-Box label{\r\n    font-size: 18px;\r\n}\r\n\r\n.facebook .input-Box input{\r\n    box-shadow: none;\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 2px solid #000;\r\n    outline: none;\r\n    /* margin-bottom: 30px; */\r\n    margin-top: 1px;\r\n    font-size: 16px;\r\n    padding: 5px 0;\r\n}\r\n\r\n.all-button{\r\n    display: inline;\r\n}\r\n\r\n#container-button{\r\n    text-align: center;\r\n}\r\n\r\n#container-button{\r\n    text-align: center;\r\n}\r\n\r\n#container-button .submit{\r\n    padding: 5px 12px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #34a853;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #34a853;\r\n    color: #fff;\r\n}\r\n\r\n#container-button .submit:hover{\r\n    color: #000;\r\n}\r\n\r\n#container-button .cancle{\r\n    padding: 5px 12px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #CD5C5C;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #CD5C5C;\r\n    color: #fff;\r\n}\r\n\r\n#container-button .cancle:hover{\r\n    color: #000;\r\n}\r\n\r\n`;\r\n\r\nexport default function Lineform(props) {\r\n    console.log(props)\r\n    const [access_token, setAccess_token] = useState('');\r\n    const [channel_secret, setChannel_secret] = useState('');\r\n    const [basic_id, setBasic_id] = useState('');\r\n    const [webhook, setWebhook] = useState(packageJson.proxy+'bot/webhook/'+props.props.bot_id+'/line');\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const editData = {\r\n            'access_token':access_token, \r\n            'channel_secret':channel_secret, \r\n            'basic_id':basic_id,\r\n            'creator':localStorage.getItem('user_id'),\r\n            'platform': 'line'\r\n            }\r\n        fetch('/bot/'+props.props.bot_id+'/connect', {\r\n            method: 'POST',\r\n            headers : {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(editData)\r\n        }).then(response => response.json().then(data => alert(data.message)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('/bot/'+props.props.bot_id+'/connect').then(\r\n            response => response.json()\r\n          ).then(data =>{\r\n            setAccess_token(data.access_token);\r\n            setChannel_secret(data.channel_secret);\r\n            setBasic_id(data.basic_id);\r\n        })\r\n    }, []);\r\n\r\n    return(\r\n            <Styles>\r\n                <div className=\"container\">\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"group facebook-card col-lg-12\">\r\n                            <form className=\"facebook\" onSubmit={ handleSubmit }>\r\n                                <div className=\"row\">\r\n                                    <p className=\"col\">Connect to Line</p>\r\n                                </div>\r\n                                <div className=\"link\">\r\n                                    <p>{packageJson.proxy}bot/webhook/{props.props.bot_id}/line</p>\r\n                                    <button type='button' className=\"copy-clipboard\" onClick={() => {navigator.clipboard.writeText(webhook)}}><i className=\"fas fa-copy fa-xs\"></i></button>\r\n                                </div>\r\n                                <div className=\"input-Box\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <label  className=\"form-label\">Channel secret</label>\r\n                                    <input type=\"text\" value={channel_secret} onChange={e => setChannel_secret(e.target.value)} className=\"form-control\" id=\"inputpagefacebook\"/>\r\n                                </div>\r\n                                <div className=\"col-lg-12 mt-3\">\r\n                                    <label  className=\"form-label\">Channel access token</label>\r\n                                    <input type=\"text\" value={access_token} onChange={e => setAccess_token(e.target.value)} className=\"form-control\" id=\"inputbotname\"/>\r\n                                </div>\r\n                                <div className=\"col-lg-12 mt-3\">\r\n                                    <label  className=\"form-label\">Basic ID</label>\r\n                                    <input type=\"text\" value={basic_id} onChange={e => setBasic_id(e.target.value)} className=\"form-control\" id=\"inputbotname\"/>\r\n                                </div>\r\n                                </div>\r\n                                <div id=\"container-button\">\r\n                                    <button className=\"submit\" type='submit'>Submit</button>\r\n                                    <button className=\"cancle\" type='button' onClick={() => {history.goBack()}} >Back</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>  \r\n                    </div>\r\n                </div>\r\n            </Styles>\r\n        )   \r\n}\r\n\r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Landing\\Mainpage.js",["294","295"],"import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n// import Telephone from './images/Telephone.png';\r\n\r\nconst Styles = styled.div`\r\n  .home .jumbo {\r\n    align-items: center;\r\n    font-family: 'Public Sans', sans-serif;\r\n    \r\n  }\r\n\r\n  .home .container {\r\n    // background: url(${process.env.PUBLIC_URL +'/images/Background.png'});\r\n    background-repeat: no-repeat;\r\n    background-attachment: fixed;\r\n    position: relative;\r\n}\r\n\r\n  #main-page {\r\n    margin-top: 150px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  \r\n  #main-page .main-text {\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    line-height: 1.25;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 80px;\r\n    font-family: 'Roboto', sans-serif;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .main-text p {\r\n    font-size: 18px;\r\n    color: grey;\r\n    line-height: 1.7;\r\n    width: 21rem;\r\n  }\r\n`;\r\n\r\n\r\nexport const Mainpage = () => (\r\n  <Styles>\r\n    <div className=\"home\" >\r\n    <Container className=\"container\">\r\n    <Jumbo fluid className=\"jumbo d-flex position-relative\">\r\n        <section id=\"main-page\">\r\n          <div className=\"main-text\">\r\n            <h1>A1 Chatbot</h1>\r\n            <div className=\"text\">\r\n              <p>A1 chatbot is a web-application that can help manage  online purchasing and selling. It also includes automated reply message, order management, and online shop system administration via bot which you can create by your own. </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"img-main\">\r\n            <img src=\"./images/Telephone.png\" width=\"110%\"/>\r\n          </div>\r\n        </section>\r\n    </Jumbo>\r\n    </Container>\r\n    </div>\r\n  </Styles>\r\n) \r\n\r\n\r\n\r\n{/* <Container fluid className=\"jumbo d-flex position-relative\" >\r\n        <img src=\"./images/Telephone.png\" class=\"img-fluid\" width=\"50%\"/> \r\n        <h1>Welcome</h1>\r\n        <span>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</span>      \r\n        </Container> */}","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Landing\\cardList.js",["296","297","298"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Jumbotron as Jumbo } from 'react-bootstrap';\r\n// import PhoneG from './image/phone_group.png';\r\n\r\n\r\nconst Styles = styled.div`\r\n.jumbo {\r\n    align-items: center;\r\n    margin: 5% 0;\r\n}\r\n\r\n.container {\r\n    // background: url(${process.env.PUBLIC_URL +'/images/bg-home.png'}) no-repeat fixed bottom;\r\n    background-size: 100%;\r\n    margin-bottom: 20%;\r\n}\r\n\r\n.line {\r\n    height: 2px;\r\n    background-color: #D3D3D3;\r\n    width: 400px;\r\n    align-items: right;\r\n    margin-top: 1%;\r\n    margin-bottom: 1%;\r\n}\r\n\r\n.card {\r\n  width: 20rem;\r\n  height: 35rem;\r\n  margin-bottom: 5%;\r\n  border-radius: 10px;\r\n  border: 0 solid #fca311;\r\n  background: #fff;\r\n  padding: 3%;\r\n  box-shadow: 0 9px 15px rgba(0,0,0,.08), 0 9px 10px rgba(0,0,0,.05);\r\n  transition: .3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12);\r\n//   cursor: pointer;\r\n}\r\n\r\n// .card:hover{\r\n//   transform: scale(1.05);\r\n//   box-shadow: 0 10px 20px rgba(0,0,0,.12), 0 4px 8px rgba(0,0,0,.06);\r\n// }\r\n\r\nh1 {\r\n    font-size: 40px;\r\n    font-weight: 700;\r\n    margin-bottom: 40px;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n.card h5 {\r\n    margin-top: 2%;\r\n    font-weight: bold;\r\n\r\n}\r\n\r\n.card p {\r\n    color: black;\r\n}\r\n\r\nul { \t\r\n    list-style: none; \t \t\r\n    font-size: 18px; \t\r\n    letter-spacing: 0.5px;\r\n    display: inline;\r\n    // padding: none;\r\n    // line-height: 50px; \r\n} \r\n\r\nli i {\r\n    margin-left: -30px;\r\n    color: #5BB30A;\r\n    margin-right: 5%;\r\n    display: inline;\r\n    margin-bottom: 5px;\r\n} \r\n\r\nli p {\r\n    display: inline;\r\n}\r\n\r\n.select {\r\n    margin-button: 15px;\r\n}\r\n\r\n.img-card img {\r\n    width: 80%;\r\n    text-align: center;\r\n    align-item: center;\r\n    // background-color: black;\r\n    margin-bottom:10%;\r\n}\r\n\r\n.img-card {\r\n    margin-left: 20%;\r\n}\r\n\r\n\r\n`;\r\n\r\nexport const CardList = () => (\r\n    <Styles >\r\n        <Container className=\"container\"> \r\n        <div className=\"title\">\r\n            <h1>About Features</h1>\r\n        </div>\r\n        <Jumbo className=\"jumbo col-lg-12 row justify-content-around\">\r\n                <div className=\"card col-lg-6\">\r\n                    <div className=\"img-card\">\r\n                        <img src=\"./images/chat.svg\" />\r\n                    </div>\r\n                    <h5 className=\"card-title\">Bot Features\r\n                        <hr />\r\n                    </h5>\r\n                    <ul> \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check select\"></i><p>Can get ordering from customer</p></li>\r\n                        <div className=\"mt-3\"></div>\t\t\t\t\t\r\n                        <li><i class=\"fas fa-check select\"></i><p>Can understand and answer customer as what we teach</p></li>\r\n                        <div className=\"mt-3\"></div> \t\t\t\t\t\r\n                        <li> <i class=\"fas fa-check select\"></i><p>Can do dealing by itself</p></li>\r\n                        \t\t\t\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"card col-lg-6\">\r\n                    <div className=\"img-card\">\r\n                        <img src=\"./images/delivery-truck.svg\" />\r\n                    </div>\r\n                    <h5 className=\"card-title\">Parcel Features\r\n                        <hr />\r\n                    </h5>\r\n                    <ul> \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check\"></i><p>Can issue a cover sheet for the parcel</p></li>\r\n                        <div className=\"mt-4\"></div> \r\n                        <li><i class=\"fas fa-check\"></i><p>Can issue tracking number</p></li>\r\n                        <div className=\"mt-4\"></div>  \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check\"></i><p>Can keep the address</p></li> \t\t\t\t\t\r\n                         \t\t\t\t\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"card col-lg-6\">\r\n                    <div className=\"img-card\">\r\n                        <img src=\"./images/statistics.svg\"/>\r\n                    </div>\r\n                    <h5 className=\"card-title\">Visualization Feature\r\n                    <hr />\r\n                    </h5>\r\n                    <ul> \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check\"></i><p>Able to check sales on time</p></li>\r\n                        <div className=\"mt-4\"></div>  \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check\"></i><p>Able to check product balances</p></li>\r\n\t\t\t\t\t\t\t\t\t\r\n                    </ul>\r\n                </div>\r\n            \r\n        </Jumbo>\r\n        </Container>\r\n    </Styles>\r\n)\r\n\r\n\r\n","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Footer\\footer.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Form\\facebookform.js",["299","300"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport packageJson from '../../../package.json';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Styles = styled.div`\r\n.container {\r\n    margin-top: 2%;\r\n}\r\n.facebook-card {\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    background-color: #fff;\r\n    color: white;\r\n    // box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\r\n    border: 5px solid #0078ff;\r\n}\r\n.facebook {\r\n    padding : 5%;\r\n}\r\n.facebook p{\r\n    font-weight: bold;\r\n    font-size: 23px;\r\n    color: black;\r\n}\r\n.link p{\r\n    font-size: 11px;\r\n    color: black;\r\n}\r\n.link i{\r\n    color: #0078ff;\r\n}\r\n.copy-clipboard {\r\n    color: #34a853;\r\n    position: absolute;\r\n    top: 275px;\r\n    right: 70px;\r\n}\r\n.link button{\r\n    background: white;\r\n    padding: 5px 12px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #0078ff;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n} \r\n.facebook .input-Box label{\r\n    font-size: 18px;\r\n    color: black;\r\n}\r\n.facebook .input-Box input{\r\n    box-shadow: none;\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 2px solid #000;\r\n    outline: none;\r\n    /* margin-bottom: 30px; */\r\n    margin-top: 1px;\r\n    font-size: 16px;\r\n    padding: 5px 0;\r\n}\r\n#container-button{\r\n    text-align: center;\r\n}\r\n#container-button .submit{\r\n    padding: 5px 12px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #0078ff;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #0078ff;\r\n    color: #fff;\r\n}\r\n#container-button .submit:hover{\r\n    color: #000;\r\n}\r\n#container-button .cancle{\r\n    padding: 5px 12px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #CD5C5C;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #CD5C5C;\r\n    color: #fff;\r\n}\r\n#container-button .cancle:hover{\r\n    color: #000;\r\n}\r\n`;\r\n\r\nexport default function Facebookform(props) {\r\n    const [access_token, setAccess_token] = useState('');\r\n    const [verify_token, setVerify_token] = useState('');\r\n    const [webhook, setWebhook] = useState(packageJson.proxy+'bot/webhook/'+props.props.bot_id+'/facebook')\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const editData = {\r\n            'page_facebook_access_token':access_token, \r\n            'verify_token':verify_token,\r\n            'creator':localStorage.getItem('user_id'),\r\n            'platform':'facebook'\r\n        }\r\n        fetch('/bot/'+props.props.bot_id+'/connect', {\r\n            method: 'POST',\r\n            headers : {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(editData)\r\n        }).then(response => response.json().then(data => alert(data.message)))\r\n        // .then( res => res.json())\r\n        // .then(data=>{\r\n        //     localStorage.setItem('access_token', data.access_token);\r\n        //     localStorage.setItem('username', data.username);\r\n        //     localStorage.setItem('user_id', data.user_id);\r\n        //     if (localStorage.getItem(\"access_token\") !== null && localStorage.getItem(\"access_token\")!==\"undefined\") {\r\n        //       window.location.replace(\"/\")\r\n        //     }else{\r\n        //         alert(data.error);  \r\n        //   }\r\n        // }).catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('/bot/'+props.props.bot_id+'/connect').then(\r\n            response => response.json()\r\n          ).then(data =>{\r\n            setAccess_token(data.page_facebook_access_token);\r\n            setVerify_token(data.verify_token);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Styles>\r\n            <div className=\"container\">\r\n                 <div className=\"row my-3\">\r\n                    <div className=\"group facebook-card col-lg-12\">\r\n                        <form className=\"facebook\" onSubmit={ handleSubmit }>\r\n                            <div className=\"row\">\r\n                                <p className=\"col\">Connect to facebook</p>\r\n                                {/* <i className=\"col fab fa-facebook\"></i> */}\r\n                            </div>\r\n                            <div className=\"link\">\r\n                                <p>{packageJson.proxy}bot/webhook/{props.props.bot_id}/facebook</p>\r\n                                <button type=\"button\" className=\"copy-clipboard\" onClick={() => {navigator.clipboard.writeText(webhook)}}><i className=\"fas fa-copy fa-xs\"></i></button>\r\n                            </div>\r\n                            <div className=\"input-Box\">\r\n                            <div className=\"col-lg-12\">\r\n                                <label  className=\"form-label\">Page Facebook access token</label>\r\n                                <input type=\"text\" value={access_token} onChange={e => setAccess_token(e.target.value)} className=\"form-control\" id=\"inputpagefacebook\" />\r\n                            </div>\r\n                            <div className=\"col-lg-12 mt-3\">\r\n                                <label  className=\"form-label\">Verify token</label>\r\n                                <input type=\"text\" value={ verify_token } onChange={e => setVerify_token(e.target.value)} className=\"form-control\" id=\"inputverity\" />\r\n                            </div>\r\n                            </div>\r\n                            <div id=\"container-button\">\r\n                                <button className=\"submit\" type='submit'>Submit</button>\r\n                                <button className=\"cancle\" type='button' onClick={() => {history.goBack()}} >Back</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Styles>\r\n    )\r\n}","C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\AddStyle.js",[],"C:\\Users\\12non\\OneDrive\\Desktop\\A1_project\\client\\src\\Components\\Table\\Manage_map\\Mapchart.js",["301","302","303"],"import React, { useRef, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  width: 800px;\r\n  height: 500px;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  background: #fff;\r\n  color: #000;\r\n  display: grid;\r\n  position: absolute;\r\n  z-index: 10;\r\n  border-radius: 10px;\r\n  transform: translate(30%, -70%);\r\n  // align-items: center;\r\n  // grid-template-columns: 1fr 1fr;\r\n  // position: absolute;\r\n  // top: 50%;\r\n  // left: 50%;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n\r\n// .content:after{\r\n//   background-color: #e17b77;\r\n//   content: '';\r\n//   position: absolute;\r\n//   width: 4px;\r\n//   height: 100%;\r\n//   margin-left:45%;\r\n// }\r\n\r\n.content{\r\n  margin:90px auto;\r\n  width: 360px;\r\n  border-left: 2px solit #ccc;\r\n  padding: 0 20px 0 30px;\r\n}\r\n\r\n.content div{\r\n  background-color: #ffc15e;\r\n  padding: 10px 10px;\r\n  font-size: 16px;\r\n  line-height: 1.7;\r\n  position: relative;\r\n  height: 60px;\r\n  width: 60px;\r\n  margin-bottom: 30px;\r\n  margin-left: 45%;\r\n  border-radius: 5px;\r\n}\r\n\r\n`;\r\n\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\n\r\nexport const Mapchart = ({ showMap, setShowMap}) => {\r\n  const modalRef = useRef();\r\n\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250\r\n    },\r\n    opacity: showMap ? 1 : 0,\r\n    transform: showMap ? `translateY(0%)` : `translateY(-100%)`\r\n  });\r\n\r\n  const closeModal = e => {\r\n    if (modalRef.current === e.target) {\r\n      setShowMap(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showMap) {\r\n        setShowMap(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowMap, showMap]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  return(\r\n    <div>\r\n    {showMap ? (\r\n        <Background onClick={closeModal} ref={modalRef}>\r\n          <animated.div style={animation}>\r\n            <Container className=\"col-sm-10 col-md-9\">\r\n            <ModalWrapper showMap={showMap}>\r\n              <ModalContent>\r\n                  {/* <div className=\"container_word\"> */}\r\n                    <div className=\"content\">\r\n                      <div>\r\n                        <a>hiii</a>\r\n                      </div>\r\n                      <div>\r\n                        <a>heyy</a>\r\n                      </div>\r\n                      <div>\r\n                        <a>hello</a> \r\n                      </div>\r\n                    </div>\r\n                  {/* </div> */}\r\n              </ModalContent>\r\n              <CloseModalButton\r\n                aria-label=\"Close modal\"\r\n                onClick={() => setShowMap(prev => !prev)}\r\n              />\r\n            </ModalWrapper>\r\n            </Container>\r\n          </animated.div>\r\n        </Background>\r\n      ) : null}\r\n    </div>\r\n    );\r\n    \r\n  \r\n};\r\n\r\nexport default Mapchart;",{"ruleId":"304","severity":1,"message":"305","line":6,"column":8,"nodeType":"306","messageId":"307","endLine":6,"endColumn":20},{"ruleId":"304","severity":1,"message":"308","line":7,"column":8,"nodeType":"306","messageId":"307","endLine":7,"endColumn":17},{"ruleId":"304","severity":1,"message":"309","line":9,"column":9,"nodeType":"306","messageId":"307","endLine":9,"endColumn":20},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":36,"column":91,"nodeType":"316","endLine":36,"endColumn":96},{"ruleId":"314","severity":1,"message":"315","line":37,"column":88,"nodeType":"316","endLine":37,"endColumn":93},{"ruleId":"314","severity":1,"message":"315","line":38,"column":87,"nodeType":"316","endLine":38,"endColumn":92},{"ruleId":"317","severity":1,"message":"318","line":202,"column":24,"nodeType":"319","messageId":"320","endLine":202,"endColumn":26},{"ruleId":"304","severity":1,"message":"321","line":1,"column":27,"nodeType":"306","messageId":"307","endLine":1,"endColumn":36},{"ruleId":"304","severity":1,"message":"322","line":20,"column":24,"nodeType":"306","messageId":"307","endLine":20,"endColumn":38},{"ruleId":"304","severity":1,"message":"323","line":21,"column":13,"nodeType":"306","messageId":"307","endLine":21,"endColumn":17},{"ruleId":"304","severity":1,"message":"324","line":21,"column":18,"nodeType":"306","messageId":"307","endLine":21,"endColumn":25},{"ruleId":"304","severity":1,"message":"325","line":51,"column":11,"nodeType":"306","messageId":"307","endLine":51,"endColumn":19},{"ruleId":"304","severity":1,"message":"326","line":56,"column":21,"nodeType":"306","messageId":"307","endLine":56,"endColumn":23},{"ruleId":"327","severity":1,"message":"328","line":66,"column":13,"nodeType":"329","endLine":66,"endColumn":84},{"ruleId":"327","severity":1,"message":"328","line":19,"column":13,"nodeType":"329","endLine":19,"endColumn":83},{"ruleId":"327","severity":1,"message":"328","line":20,"column":13,"nodeType":"329","endLine":20,"endColumn":81},{"ruleId":"304","severity":1,"message":"330","line":1,"column":16,"nodeType":"306","messageId":"307","endLine":1,"endColumn":24},{"ruleId":"304","severity":1,"message":"331","line":2,"column":9,"nodeType":"306","messageId":"307","endLine":2,"endColumn":15},{"ruleId":"304","severity":1,"message":"332","line":2,"column":17,"nodeType":"306","messageId":"307","endLine":2,"endColumn":25},{"ruleId":"304","severity":1,"message":"333","line":4,"column":9,"nodeType":"306","messageId":"307","endLine":4,"endColumn":19},{"ruleId":"304","severity":1,"message":"334","line":5,"column":8,"nodeType":"306","messageId":"307","endLine":5,"endColumn":23},{"ruleId":"304","severity":1,"message":"335","line":212,"column":22,"nodeType":"306","messageId":"307","endLine":212,"endColumn":28},{"ruleId":"336","severity":1,"message":"337","line":220,"column":28,"nodeType":"329","endLine":220,"endColumn":57},{"ruleId":"336","severity":1,"message":"337","line":238,"column":79,"nodeType":"329","endLine":238,"endColumn":124},{"ruleId":"338","severity":1,"message":"339","line":38,"column":15,"nodeType":"340","endLine":41,"endColumn":6},{"ruleId":"327","severity":1,"message":"341","line":51,"column":25,"nodeType":"329","endLine":51,"endColumn":150},{"ruleId":"327","severity":1,"message":"342","line":52,"column":25,"nodeType":"329","endLine":52,"endColumn":103},{"ruleId":"336","severity":1,"message":"337","line":113,"column":13,"nodeType":"329","endLine":113,"endColumn":76},{"ruleId":"343","severity":1,"message":"344","line":156,"column":25,"nodeType":"329","endLine":156,"endColumn":56},{"ruleId":"304","severity":1,"message":"345","line":5,"column":22,"nodeType":"306","messageId":"307","endLine":5,"endColumn":30},{"ruleId":"304","severity":1,"message":"346","line":9,"column":10,"nodeType":"306","messageId":"307","endLine":9,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":258,"column":1,"nodeType":"349","messageId":"350","endLine":274,"endColumn":27},{"ruleId":"304","severity":1,"message":"321","line":1,"column":27,"nodeType":"306","messageId":"307","endLine":1,"endColumn":36},{"ruleId":"304","severity":1,"message":"351","line":3,"column":10,"nodeType":"306","messageId":"307","endLine":3,"endColumn":14},{"ruleId":"304","severity":1,"message":"352","line":21,"column":7,"nodeType":"306","messageId":"307","endLine":21,"endColumn":14},{"ruleId":"304","severity":1,"message":"322","line":22,"column":23,"nodeType":"306","messageId":"307","endLine":22,"endColumn":37},{"ruleId":"327","severity":1,"message":"328","line":44,"column":9,"nodeType":"329","endLine":44,"endColumn":78},{"ruleId":"304","severity":1,"message":"333","line":4,"column":10,"nodeType":"306","messageId":"307","endLine":4,"endColumn":20},{"ruleId":"353","severity":1,"message":"354","line":136,"column":26,"nodeType":"340","messageId":"355","endLine":141,"endColumn":8},{"ruleId":"304","severity":1,"message":"335","line":195,"column":23,"nodeType":"306","messageId":"307","endLine":195,"endColumn":29},{"ruleId":"304","severity":1,"message":"356","line":204,"column":9,"nodeType":"306","messageId":"307","endLine":204,"endColumn":22},{"ruleId":"336","severity":1,"message":"337","line":204,"column":26,"nodeType":"329","endLine":204,"endColumn":55},{"ruleId":"304","severity":1,"message":"351","line":3,"column":9,"nodeType":"306","messageId":"307","endLine":3,"endColumn":13},{"ruleId":"314","severity":1,"message":"315","line":208,"column":142,"nodeType":"316","endLine":208,"endColumn":166},{"ruleId":"314","severity":1,"message":"315","line":212,"column":151,"nodeType":"316","endLine":212,"endColumn":178},{"ruleId":"314","severity":1,"message":"315","line":231,"column":154,"nodeType":"316","endLine":231,"endColumn":182},{"ruleId":"314","severity":1,"message":"315","line":235,"column":151,"nodeType":"316","endLine":235,"endColumn":178},{"ruleId":"314","severity":1,"message":"315","line":239,"column":144,"nodeType":"316","endLine":239,"endColumn":171},{"ruleId":"314","severity":1,"message":"315","line":254,"column":195,"nodeType":"316","endLine":254,"endColumn":226},{"ruleId":"304","severity":1,"message":"333","line":4,"column":9,"nodeType":"306","messageId":"307","endLine":4,"endColumn":19},{"ruleId":"304","severity":1,"message":"335","line":177,"column":22,"nodeType":"306","messageId":"307","endLine":177,"endColumn":28},{"ruleId":"336","severity":1,"message":"337","line":186,"column":26,"nodeType":"329","endLine":186,"endColumn":55},{"ruleId":"336","severity":1,"message":"337","line":204,"column":82,"nodeType":"329","endLine":204,"endColumn":134},{"ruleId":"304","severity":1,"message":"321","line":5,"column":27,"nodeType":"306","messageId":"307","endLine":5,"endColumn":36},{"ruleId":"327","severity":1,"message":"357","line":21,"column":5,"nodeType":"329","endLine":21,"endColumn":18},{"ruleId":"343","severity":1,"message":"358","line":24,"column":15,"nodeType":"329","endLine":24,"endColumn":48},{"ruleId":"343","severity":1,"message":"358","line":29,"column":15,"nodeType":"329","endLine":29,"endColumn":48},{"ruleId":"327","severity":1,"message":"357","line":41,"column":5,"nodeType":"329","endLine":41,"endColumn":18},{"ruleId":"336","severity":1,"message":"337","line":57,"column":11,"nodeType":"329","endLine":57,"endColumn":72},{"ruleId":"343","severity":1,"message":"344","line":70,"column":7,"nodeType":"329","endLine":70,"endColumn":79},{"ruleId":"304","severity":1,"message":"359","line":82,"column":10,"nodeType":"306","messageId":"307","endLine":82,"endColumn":18},{"ruleId":"304","severity":1,"message":"360","line":82,"column":20,"nodeType":"306","messageId":"307","endLine":82,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":87,"column":7,"nodeType":"329","endLine":87,"endColumn":110},{"ruleId":"343","severity":1,"message":"358","line":124,"column":12,"nodeType":"329","endLine":126,"endColumn":14},{"ruleId":"343","severity":1,"message":"358","line":132,"column":11,"nodeType":"329","endLine":134,"endColumn":14},{"ruleId":"343","severity":1,"message":"358","line":140,"column":11,"nodeType":"329","endLine":142,"endColumn":14},{"ruleId":"343","severity":1,"message":"358","line":148,"column":11,"nodeType":"329","endLine":151,"endColumn":14},{"ruleId":"347","severity":1,"message":"348","line":201,"column":1,"nodeType":"349","messageId":"350","endLine":221,"endColumn":32},{"ruleId":"304","severity":1,"message":"351","line":2,"column":9,"nodeType":"306","messageId":"307","endLine":2,"endColumn":13},{"ruleId":"304","severity":1,"message":"309","line":5,"column":9,"nodeType":"306","messageId":"307","endLine":5,"endColumn":20},{"ruleId":"304","severity":1,"message":"308","line":6,"column":8,"nodeType":"306","messageId":"307","endLine":6,"endColumn":17},{"ruleId":"304","severity":1,"message":"361","line":8,"column":10,"nodeType":"306","messageId":"307","endLine":8,"endColumn":18},{"ruleId":"317","severity":1,"message":"318","line":244,"column":16,"nodeType":"319","messageId":"320","endLine":244,"endColumn":18},{"ruleId":"317","severity":1,"message":"318","line":246,"column":23,"nodeType":"319","messageId":"320","endLine":246,"endColumn":25},{"ruleId":"317","severity":1,"message":"318","line":279,"column":19,"nodeType":"319","messageId":"320","endLine":279,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":299,"column":19,"nodeType":"319","messageId":"320","endLine":299,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":318,"column":19,"nodeType":"319","messageId":"320","endLine":318,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":337,"column":19,"nodeType":"319","messageId":"320","endLine":337,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":404,"column":19,"nodeType":"319","messageId":"320","endLine":404,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":427,"column":19,"nodeType":"319","messageId":"320","endLine":427,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":449,"column":19,"nodeType":"319","messageId":"320","endLine":449,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":471,"column":19,"nodeType":"319","messageId":"320","endLine":471,"endColumn":21},{"ruleId":"304","severity":1,"message":"362","line":289,"column":5,"nodeType":"306","messageId":"307","endLine":289,"endColumn":19},{"ruleId":"304","severity":1,"message":"363","line":293,"column":35,"nodeType":"306","messageId":"307","endLine":293,"endColumn":49},{"ruleId":"304","severity":1,"message":"364","line":448,"column":10,"nodeType":"306","messageId":"307","endLine":448,"endColumn":18},{"ruleId":"317","severity":1,"message":"365","line":478,"column":24,"nodeType":"319","messageId":"320","endLine":478,"endColumn":26},{"ruleId":"317","severity":1,"message":"365","line":478,"column":50,"nodeType":"319","messageId":"320","endLine":478,"endColumn":52},{"ruleId":"304","severity":1,"message":"366","line":498,"column":9,"nodeType":"306","messageId":"307","endLine":498,"endColumn":17},{"ruleId":"338","severity":1,"message":"367","line":522,"column":7,"nodeType":"368","endLine":522,"endColumn":9,"suggestions":"369"},{"ruleId":"304","severity":1,"message":"370","line":525,"column":9,"nodeType":"306","messageId":"307","endLine":525,"endColumn":18},{"ruleId":"304","severity":1,"message":"330","line":1,"column":49,"nodeType":"306","messageId":"307","endLine":1,"endColumn":57},{"ruleId":"304","severity":1,"message":"330","line":1,"column":16,"nodeType":"306","messageId":"307","endLine":1,"endColumn":24},{"ruleId":"304","severity":1,"message":"371","line":17,"column":12,"nodeType":"306","messageId":"307","endLine":17,"endColumn":16},{"ruleId":"304","severity":1,"message":"372","line":45,"column":11,"nodeType":"306","messageId":"307","endLine":45,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":52,"column":21,"nodeType":"319","messageId":"320","endLine":52,"endColumn":23},{"ruleId":"343","severity":1,"message":"344","line":54,"column":17,"nodeType":"329","endLine":54,"endColumn":51},{"ruleId":"304","severity":1,"message":"373","line":54,"column":10,"nodeType":"306","messageId":"307","endLine":54,"endColumn":18},{"ruleId":"304","severity":1,"message":"374","line":54,"column":20,"nodeType":"306","messageId":"307","endLine":54,"endColumn":31},{"ruleId":"304","severity":1,"message":"375","line":57,"column":7,"nodeType":"306","messageId":"307","endLine":57,"endColumn":8},{"ruleId":"338","severity":1,"message":"367","line":92,"column":6,"nodeType":"368","endLine":92,"endColumn":8,"suggestions":"376"},{"ruleId":"336","severity":1,"message":"337","line":91,"column":11,"nodeType":"329","endLine":91,"endColumn":60},{"ruleId":"304","severity":1,"message":"377","line":124,"column":21,"nodeType":"306","messageId":"307","endLine":124,"endColumn":31},{"ruleId":"338","severity":1,"message":"378","line":154,"column":8,"nodeType":"368","endLine":154,"endColumn":10,"suggestions":"379"},{"ruleId":"336","severity":1,"message":"337","line":60,"column":13,"nodeType":"329","endLine":60,"endColumn":61},{"ruleId":"347","severity":1,"message":"348","line":71,"column":1,"nodeType":"349","messageId":"350","endLine":75,"endColumn":25},{"ruleId":"336","severity":1,"message":"337","line":112,"column":25,"nodeType":"329","endLine":112,"endColumn":56},{"ruleId":"336","severity":1,"message":"337","line":129,"column":25,"nodeType":"329","endLine":129,"endColumn":66},{"ruleId":"336","severity":1,"message":"337","line":146,"column":25,"nodeType":"329","endLine":146,"endColumn":61},{"ruleId":"304","severity":1,"message":"377","line":100,"column":21,"nodeType":"306","messageId":"307","endLine":100,"endColumn":31},{"ruleId":"338","severity":1,"message":"378","line":139,"column":8,"nodeType":"368","endLine":139,"endColumn":10,"suggestions":"380"},{"ruleId":"343","severity":1,"message":"358","line":124,"column":25,"nodeType":"329","endLine":124,"endColumn":28},{"ruleId":"343","severity":1,"message":"358","line":127,"column":25,"nodeType":"329","endLine":127,"endColumn":28},{"ruleId":"343","severity":1,"message":"358","line":130,"column":25,"nodeType":"329","endLine":130,"endColumn":28},"no-unused-vars","'rootReducers' is defined but never used.","Identifier","unusedVar","'tReducers' is defined but never used.","'createStore' is defined but never used.","no-native-reassign",["381"],"no-negated-in-lhs",["382"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'setdeleteState' is assigned a value but never used.","'Info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'add_data' is assigned a value but never used.","'id' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Navbar_member must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'useState' is defined but never used.","'Button' is defined but never used.","'Collapse' is defined but never used.","'withRouter' is defined but never used.","'ReactFileReader' is defined but never used.","'bot_id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Imported JSX component Delete_pop must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Connect_bot must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Redirect' is defined but never used.","'Container' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Link' is defined but never used.","'history' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs","'$imagePreview' is assigned a value but never used.","Imported JSX component Navbar_real must be in PascalCase or SCREAMING_SNAKE_CASE","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'Provider' is defined but never used.","'visibleColumns' is assigned a value but never used.","'selectedRowIds' is assigned a value but never used.","'showWord' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'openWord' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'botID'. Either include it or remove the dependency array.","ArrayExpression",["383"],"'resetData' is assigned a value but never used.","'rand' is defined but never used.","'deleteData' is assigned a value but never used.","'newState' is assigned a value but never used.","'setnewState' is assigned a value but never used.","'x' is assigned a value but never used.",["384"],"'setWebhook' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.props.bot_id'. Either include it or remove the dependency array.",["385"],["386"],"no-global-assign","no-unsafe-negation",{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},{"desc":"390","fix":"391"},{"desc":"390","fix":"392"},"Update the dependencies array to be: [botID]",{"range":"393","text":"394"},{"range":"395","text":"394"},"Update the dependencies array to be: [props.props.bot_id]",{"range":"396","text":"397"},{"range":"398","text":"397"},[11620,11622],"[botID]",[1792,1794],[3472,3474],"[props.props.bot_id]",[3782,3784]]