[{"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\App.js":"2","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Reducers\\rootReducers.js":"4","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Reducers\\tReducers.js":"5","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Reducers\\store.js":"6","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Private.jsx":"7","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\closeRoute.jsx":"8","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\auth.js":"9","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Register.js":"10","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Login.js":"11","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Home.js":"12","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Mapping_create.js":"13","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Learned.js":"14","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Group.js":"15","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Train.js":"16","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Mapping.js":"17","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Profile_edit.js":"18","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Bot_list.js":"19","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Edit_bot.js":"20","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Create_bot.js":"21","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Inventory.js":"22","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Connect_bot.js":"23","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Customer_infomation.js":"24","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\History.js":"25","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Add_item.js":"26","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Product_detail.js":"27","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Navbar\\real_nav.js":"28","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Reducers\\aReducers.js":"29","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\AddTable\\AddWord.js":"30","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Chat.js":"31","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Navbar\\navbar_member.js":"32","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\Table.js":"33","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\delete_modal.js":"34","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablecon.js":"35","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablemap.js":"36","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablecustomer.js":"37","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Delete_pop.js":"38","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Botlist\\button_nav.js":"39","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Landing\\cardList.js":"40","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Landing\\Mainpage.js":"41","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Landing\\endpage.js":"42","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Footer\\footer.js":"43","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Form\\facebookform.js":"44","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Form\\lineform.js":"45","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Inventory\\Inven_list.js":"46","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Chat\\Chatbody.js":"47","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Chat\\chatlist.js":"48","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Chat\\Chatlist.js":"49","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Mapping_load.js":"50","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Delete_table.js":"51"},{"size":820,"mtime":1611665623533,"results":"52","hashOfConfig":"53"},{"size":4134,"mtime":1618002486661,"results":"54","hashOfConfig":"53"},{"size":375,"mtime":1608902681971,"results":"55","hashOfConfig":"53"},{"size":235,"mtime":1611665623528,"results":"56","hashOfConfig":"53"},{"size":278,"mtime":1611665623530,"results":"57","hashOfConfig":"53"},{"size":827,"mtime":1611665623528,"results":"58","hashOfConfig":"53"},{"size":482,"mtime":1610913725017,"results":"59","hashOfConfig":"53"},{"size":476,"mtime":1610913725017,"results":"60","hashOfConfig":"53"},{"size":526,"mtime":1610549233514,"results":"61","hashOfConfig":"53"},{"size":12956,"mtime":1613143280839,"results":"62","hashOfConfig":"53"},{"size":6796,"mtime":1613575409736,"results":"63","hashOfConfig":"53"},{"size":794,"mtime":1611675984583,"results":"64","hashOfConfig":"53"},{"size":8409,"mtime":1618002485148,"results":"65","hashOfConfig":"53"},{"size":3752,"mtime":1618002485364,"results":"66","hashOfConfig":"53"},{"size":2151,"mtime":1618002485664,"results":"67","hashOfConfig":"53"},{"size":3977,"mtime":1618002484992,"results":"68","hashOfConfig":"53"},{"size":1553,"mtime":1615628719054,"results":"69","hashOfConfig":"53"},{"size":10768,"mtime":1614614026657,"results":"70","hashOfConfig":"53"},{"size":6847,"mtime":1618002483980,"results":"71","hashOfConfig":"53"},{"size":9660,"mtime":1614614026656,"results":"72","hashOfConfig":"53"},{"size":10483,"mtime":1614628442779,"results":"73","hashOfConfig":"53"},{"size":2937,"mtime":1618002485423,"results":"74","hashOfConfig":"53"},{"size":5708,"mtime":1618002485755,"results":"75","hashOfConfig":"53"},{"size":1564,"mtime":1617377925555,"results":"76","hashOfConfig":"53"},{"size":1531,"mtime":1618002485501,"results":"77","hashOfConfig":"53"},{"size":11184,"mtime":1614618727618,"results":"78","hashOfConfig":"53"},{"size":6844,"mtime":1617993451656,"results":"79","hashOfConfig":"53"},{"size":4580,"mtime":1618002486261,"results":"80","hashOfConfig":"53"},{"size":237,"mtime":1614614026648,"results":"81","hashOfConfig":"53"},{"size":4793,"mtime":1618002483978,"results":"82","hashOfConfig":"53"},{"size":8863,"mtime":1617988114379,"results":"83","hashOfConfig":"53"},{"size":20023,"mtime":1618002486334,"results":"84","hashOfConfig":"53"},{"size":13823,"mtime":1618002486147,"results":"85","hashOfConfig":"53"},{"size":2580,"mtime":1612545981148,"results":"86","hashOfConfig":"53"},{"size":13545,"mtime":1618002486049,"results":"87","hashOfConfig":"53"},{"size":14166,"mtime":1618002485929,"results":"88","hashOfConfig":"53"},{"size":13350,"mtime":1617995510640,"results":"89","hashOfConfig":"53"},{"size":3968,"mtime":1618002486524,"results":"90","hashOfConfig":"53"},{"size":576,"mtime":1610910157990,"results":"91","hashOfConfig":"53"},{"size":7803,"mtime":1614588117241,"results":"92","hashOfConfig":"53"},{"size":2529,"mtime":1613575409571,"results":"93","hashOfConfig":"53"},{"size":2478,"mtime":1613575409574,"results":"94","hashOfConfig":"53"},{"size":4362,"mtime":1611235235441,"results":"95","hashOfConfig":"53"},{"size":6596,"mtime":1613066734567,"results":"96","hashOfConfig":"53"},{"size":6437,"mtime":1613575409848,"results":"97","hashOfConfig":"53"},{"size":2889,"mtime":1616683832180,"results":"98","hashOfConfig":"53"},{"size":9057,"mtime":1618002486589,"results":"99","hashOfConfig":"53"},{"size":7514,"mtime":1617887613002,"results":"100","hashOfConfig":"53"},{"size":7708,"mtime":1617888640915,"results":"101","hashOfConfig":"53"},{"size":8792,"mtime":1618002483982,"results":"102","hashOfConfig":"53"},{"size":4872,"mtime":1618002483968,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},"1afkjwo",{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"107"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"107"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"107"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"107"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"107"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"107"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"107"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"107"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"107"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"107"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"107"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"107"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"107"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"107"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"107"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"107"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"107"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"107"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"107"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"107"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"107"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"107"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"107"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"107"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"107"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"107"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"107"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"107"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\index.js",["239","240","241"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport rootReducers from './Reducers/rootReducers'\r\nimport tReducers from './Reducers/tReducers'\r\nimport { Provider} from 'react-redux'\r\nimport {createStore} from 'redux'\r\nimport store from \"./Reducers/store\"\r\n// const store = createStore(rootReducers)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["242","243"],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\App.js",["244","245","246"],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Reducers\\rootReducers.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Reducers\\tReducers.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Reducers\\store.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Private.jsx",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\closeRoute.jsx",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\auth.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Register.js",["247"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Redirect} from 'react-router-dom';\r\nimport FlashMessage from 'react-flash-message'\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    background: url(${process.env.PUBLIC_URL +'/images/b.png'}) ;\r\n    filter: gray;\r\n    background-size: 40%;\r\n    background-repeat: repeat;\r\n    position: cover;\r\n  }\r\n\r\n  .card-regis {\r\n    margin-top: 8%;\r\n    margin-bottom: 10%;\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-regis .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-regis .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .form-regis input {\r\n    border-radius: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .form-regis input {\r\n    border-radius: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .form-regis .btn {\r\n    margin-left: 10%;\r\n    border-radius: 1rem;\r\n    letter-spacing: 0.1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    text-align: center;\r\n    /* align-item: center; */\r\n  }\r\n\r\n  .btn-regis .btn {\r\n    text-align: center;\r\n    /* align-item: center; */\r\n  }\r\n\r\n  @mixin transition($property: all, $duration: 0.5s, $ease: cubic-bezier(0.65,-0.25,0.25, 1.95)) {\r\n    transition: $property $duration $ease;\r\n  }\r\n  \r\n  .btn-regis button {\r\n    text-align: center;\r\n    /* align-item: center; */\r\n    position: relative;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: 0;\r\n    vertical-align: middle;\r\n    text-decoration: none;\r\n    &.btn-inregis {\r\n      @include transition(all, 0.5s, cubic-bezier(0.65,-0.25,0.25,1.95));\r\n      font-weight: 900;\r\n      color: $black;\r\n      padding: 1rem 1rem;\r\n      background: $white;\r\n      text-transform: uppercase;\r\n      &:hover, &:focus, &:active {\r\n        letter-spacing: 0.4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n    // label {\r\n    //     font-weight: \r\n    // }\r\n\r\n  .title_part {\r\n      margin-top: 4rem;\r\n    }\r\n\r\n  .title_part  p{\r\n    font-weight: bold;\r\n    margin-top:5%;\r\n  }\r\n\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n  }\r\n\r\n  input-icon{\r\n    display: flex;\r\n    width: 100%;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .form-check{\r\n    margin-top: 10%;\r\n    margin-bottom: 3%;\r\n  }\r\n  \r\n  .error {\r\n    background-color: white;\r\n    color: red;\r\n  }\r\n`;\r\n\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      email: null,\r\n      username: null,\r\n      password : null,\r\n      confirm_password : null,\r\n      firstname : null,\r\n      lastname : null,\r\n      birthday : null,\r\n      shop_name : null,\r\n      shop_type : null,\r\n      shop_address : null,\r\n      redirect : false,\r\n      message : '',\r\n      showMessageUsername: false,\r\n      showMessagePassword: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  scrollToTop() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"auto\"\r\n    });\r\n  }\r\n\r\n  handleChange (evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(this.state.password !== this.state.confirm_password){\r\n      this.setState({message:'your password and confirm was not match'})\r\n      this.setState({showMessagePassword: true})\r\n      this.scrollToTop()\r\n  }\r\n  else{\r\n    const profile = {\r\n        email: this.state.email,\r\n        username: this.state.username,\r\n        password : this.state.password,\r\n        firstname : this.state.firstname,\r\n        lastname : this.state.lastname,\r\n        birthday : this.state.birthday,\r\n        shop_name : this.state.shop_name,\r\n        shop_type : this.state.shop_type,\r\n        shop_address : this.state.shop_address\r\n      }\r\n      fetch('/profile/signup', {\r\n      method : 'POST',\r\n      headers : {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    }).then((res)=>res.json()).then(data=>{\r\n      console.log(data)\r\n      if(data.message){\r\n        this.setState({redirect:true})\r\n      }\r\n      else if(data.error){\r\n        this.setState({message:data.error})\r\n        this.setState({showMessageUsername: true})\r\n        this.scrollToTop()\r\n      }\r\n    }).then(this.setState({showMessageUsername: false})).then(this.setState({showMessagePassword: false}))\r\n  }\r\n}\r\nflash = (e) =>{\r\n  if (this.state.flash == true){\r\n    return(\r\n      <div>\r\n        {e}\r\n      </div>)\r\n  }\r\n}\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n      if (redirect) {\r\n        return <Redirect to={\"/login\"} />\r\n      }\r\n      else {\r\n        return(\r\n          <Styles>\r\n\r\n                <div className=\"container\">\r\n                      <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                        <div className=\"card card-regis\">\r\n                          <div className=\"card-body\">\r\n                            <h5 className=\"card-title text-center\">Register</h5>\r\n                            <form className=\"form-regis\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"title_part\">\r\n                                  <p className=\"col\">Account infomation</p>\r\n                                  <div className=\"line\"></div>\r\n                            </div>\r\n                                <div className=\"my-3\">\r\n                                  <label for=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                                  <input type=\"email\" className=\"form-control \" id=\"inputemail\" name='email' required value={this.state.email} onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                  <label for=\"exampleInputEmail1\" className=\"form-label\">Username</label>\r\n                                  <input type=\"text\" className=\"form-control\" id=\"inputusername\" name='username' minLength={5} maxLength={16} required value={this.state.username} onChange={this.handleChange}/>\r\n                                  { this.state.showMessageUsername &&  \r\n                                        <div className=\"container\">\r\n                                            <FlashMessage duration={4000}>\r\n                                              <div className=\"error\">\r\n                                                <strong>Error : {this.state.message}</strong>\r\n                                              </div>  \r\n                                            </FlashMessage>\r\n                                        </div>\r\n                                  }\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col \">\r\n                                    <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"inputpassword\" name='password' required  minLength={6} value={this.state.password} onChange={this.handleChange} /> \r\n                                  </div>\r\n                                  <div className=\"col\">\r\n                                    <label for=\"exampleInputPassword1\" className=\"form-label\">Comfirm Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"confirmpassword\" name='confirm_password' minLength={6} value={this.state.confirm_password} onChange={this.handleChange} />  \r\n                                  </div>\r\n                                  { this.state.showMessagePassword &&  \r\n                                      <div className=\"container\">\r\n                                          <FlashMessage duration={4000}>\r\n                                            <div className=\"error\">\r\n                                              <strong>Error : {this.state.message}</strong>\r\n                                            </div>  \r\n                                          </FlashMessage>\r\n                                      </div>\r\n                                }\r\n                                </div>\r\n                                <div className=\"title_part\">\r\n                                  <p className=\"col\">Personal infomation</p>\r\n                                  <div className=\"line\"></div>\r\n                                </div>\r\n                                  <div className=\"row my-3\">\r\n                                      <div className=\"col\">\r\n                                          <label for=\"inputFirstname\" className=\"form-label\">Firstname</label>\r\n                                          <input type=\"text\" className=\"form-control\" id=\"inputfirstname\" required  name='firstname' value={this.state.firstname} onChange={this.handleChange}/>\r\n                                      </div>\r\n                                      <div className=\"col\">\r\n                                      <label for=\"inputLastname\" className=\"form-label\">Last name</label>\r\n                                          <input type=\"text\" className=\"form-control\" id=\"inputlastname\" required name='lastname' value={this.state.lastname} onChange={this.handleChange}/>\r\n                                      </div>\r\n                                      <div className=\"col\">\r\n                                        <label for=\"exampleInputEmail1\" className=\"form-label\">Birthday</label>\r\n                                        <input type=\"date\" className=\"form-control\" id=\"inputdate\" required name='birthday' value={this.state.birthday} onChange={this.handleChange} />\r\n                                       </div> \r\n                                  </div>\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col my-3\">\r\n                                      <label for=\"exampleInputEmail1\" className=\"form-label\">Shop name</label>\r\n                                      <input type=\"text\" className=\"form-control\" id=\"inputshopname\" required value={this.state.shop_name} name='shop_name' onChange={this.handleChange} />\r\n                                    </div>\r\n                                    <div className=\"col my-3\">\r\n                                      <label for=\"exampleInputEmail1\" className=\"form-label\">Type of sale</label>\r\n                                      <input type=\"text\" className=\"form-control\" id=\"inputtypeofsale\" value={this.state.shop_type} name='shop_type' onChange={this.handleChange} />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"my-3\">\r\n                                    <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Shop Address</label>\r\n                                    <textarea className=\"form-control\" id=\"inputshopaddress\" rows=\"2\" placeholder=\"หากไม่มีให้เว้นว่างเอาไว้\" name='shop_address' value={this.state.shop_address} onChange={this.handleChange}></textarea>\r\n                                  </div>\r\n                                <div class=\"form-check\">\r\n                                  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"chaeckvalidate\" required/>\r\n                                  <label className=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                    ยินยอมตามข้อกำหนด\r\n                                    <a  href=\"/Login\"> ข้อกำหนดการใช้บริการ </a>\r\n                                    ตามที่ระบุไว้ \r\n                                  </label>\r\n                                </div>                                \r\n                                <div className=\"btn-regis\">\r\n                                    <button className=\"btn btn-primary text-uppercase btn-inregis\" type=\"submit\" >register</button>\r\n                                </div>\r\n                                <hr className=\"my-4\"/>\r\n                                <div align=\"center\">\r\n                                  <span> Already have an account ? </span>\r\n                                  <a  href=\"/Login\" >Log in</a> \r\n                                </div>\r\n                            </form>\r\n                            \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                  </div>\r\n          </Styles>\r\n          \r\n      );\r\n      }\r\n   \r\n  }\r\n}\r\n\r\nexport default Register;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Login.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Home.js",["248","249","250"],"import React,{ useState } from 'react';\r\nimport {Button, Collapse } from 'react-bootstrap';\r\nimport { CardList } from '../Components/Landing/cardList';\r\nimport { Mainpage } from '../Components/Landing/Mainpage';\r\nimport { Endpage }  from '../Components/Landing/endpage';\r\n\r\nimport Footer from '../Components/Footer/footer';\r\n\r\nfunction Home(){\r\n    return(\r\n        \r\n        <div className=\"page-container\"> \r\n                <div className=\"conatainer\">\r\n                    <Mainpage />\r\n                    <CardList/>\r\n                    <Endpage/>\r\n                    {/* <img src={'/images/profile/cats.jpg'}></img>\r\n                    <img src={'/images/logo.png'}></img> */}\r\n                </div>\r\n            <Footer />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Mapping_create.js",["251","252","253","254","255","256","257","258","259","260","261","262","263"],"import React, { useEffect, useState,Fragment, useCallback } from 'react';\r\n// import Table from '../Components/Table/Tablemap';\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\nimport ReactFlow, { \r\n    addEdge,\r\n    MiniMap,\r\n    Controls,\r\n    Background,\r\n    getBezierPath, getMarkerEnd,\r\n    ReactFlowProvider,\r\n    removeElements,\r\n    } from 'react-flow-renderer';\r\n\r\n\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Styles = styled.div` \r\n.mapping-page {\r\n    display: flex;\r\n    min-height: 92vh;\r\n}\r\n.container {\r\n    margin-bottom: 2%;\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n}\r\n.save__controls {\r\n  z-index: 10;\r\n  position: absolute;\r\n}\r\n` \r\n// make delete button and drop down change node type\r\nconst flowKey = 'example-flow';\r\nconst getNodeId = () => `randomnode_${+new Date()}`;\r\nconst initialElements = [\r\n  { id: '1', type:'input', data: { label: 'Node 1' }, position: { x: 400, y: 100 } },\r\n  // { id: '2', data: { label: 'Node 2' }, position: { x: 200, y: 200 } },\r\n  // { id: 'e1-2', source: '1', target: '2' },\r\n];\r\n\r\n\r\nfunction Mapping_create(props){\r\n  const style = {\r\n    background: 'white',\r\n    width: '100%',\r\n    height: 300,\r\n  };\r\n  const [rfInstance, setRfInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n  const [nodeName, setNodeName] = useState('Node 1');\r\n  const [selectNode, setselectNode] = useState(\"1\");\r\n  const onElementsRemove = (elementsToRemove) => setElements((els) => removeElements(elementsToRemove, els));\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  // const onElementClick = (elementsToClick) => {\r\n  //   console.log(elementsToClick)\r\n  // }\r\n\r\n\r\n  const getIndex = (value, arr, prop) => {\r\n    for(var i = 0; i < arr.length; i++) {\r\n        if(arr[i][prop] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1; //to handle the case where the value doesn't exist\r\n}\r\n\r\n  const onSelectionChange = (ClickElements) => {\r\n    console.log(ClickElements)\r\n    if(ClickElements != null){\r\n      // console.log(ClickElements)\r\n      setselectNode(ClickElements[0].id)\r\n      const index = getIndex(ClickElements[0].id, elements, 'id');\r\n      // console.log(index)\r\n      setNodeName(elements[index].data.label)\r\n      // console.log(elements)\r\n\r\n    //  const selectData = (ClickElements) => elements.id == ClickElements ;\r\n    //  console.log(ClickElements.findIndex(selectData)) \r\n      // setNodeName(elements[ClickElements[0].id].data.label)\r\n      // console.log(elements)\r\n    }\r\n   \r\n    // \r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setElements((els) =>\r\n      els.map((el) => {\r\n        if (el.id === selectNode) {\r\n  \r\n          el.data = {\r\n            ...el.data,\r\n            label: nodeName,\r\n            \r\n          };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  }, [nodeName, setElements]);\r\n\r\n  const onSave = () => {\r\n    fetch(\"/mapping/\"+props.match.params.bot_id+\"/save\", {\r\n      method : \"POST\",\r\n      headers : {\"Access-Control-Allow-Origin\": \"*\",'Content-Type':'application/json'},\r\n      body: JSON.stringify(initialElements)})\r\n      \r\n\r\n      \r\n  }\r\n\r\n  \r\n\r\n  \r\n  console.log(selectNode)\r\n\r\n  const onAdd = () => {\r\n    console.log(selectNode)\r\n    const newNode = {\r\n      id: getNodeId(),\r\n      data: { label: ' New node' },\r\n      position: {\r\n        x: 250,\r\n        y: 250,\r\n      },\r\n    };\r\n    const params = {\r\n      source: selectNode,\r\n      // sourceHandle: null,\r\n      target: newNode.id,\r\n      label: 'From '+selectNode,\r\n      // targetHandle: null\r\n      }\r\n    \r\n   \r\n    setElements((els) => els.concat(newNode))\r\n    onConnect(params)\r\n   \r\n  };\r\n\r\n\r\n  const onDelete = () => {\r\n    console.log(\"Click\"+selectNode)\r\n    const newList = elements.filter((elements) => elements.id !== selectNode);\r\n    const delTarget = newList.filter((elements) => elements.target !== selectNode);\r\n    const delSource = delTarget.filter((elements) => elements.source !== selectNode); // เพิ่ม case ลบเส้น คือ if target == id or source = id\r\n    console.log(delSource)\r\n    setElements(delSource);\r\n}\r\n\r\n  // const onElementsRemove =  useCallback((ClickElements) => {\r\n  //   const els = elements\r\n  //   if(ClickElements != null){\r\n  //     // console.log(ClickElements)\r\n  //     setselectNode(ClickElements[0].id)\r\n  //     const index = getIndex(ClickElements[0].id, elements, 'id');\r\n  //   }\r\n  //   else{\r\n  //     console.log(\"User doesn't click any thing\")\r\n  //   }\r\n  //   const newNode = {\r\n  //     id: getNodeId(),\r\n  //     data: { label: 'Added node' },\r\n  //     position: {\r\n  //       x: Math.random() * window.innerWidth - 10,\r\n  //       y: Math.random() * window.innerHeight,\r\n  //     },\r\n  //   };\r\n  //   setElements((els) => els.concat(newNode));\r\n   \r\n  // }, [setElements]);\r\n\r\n\r\n  console.log(elements)\r\n    return(\r\n        <Styles>\r\n        <div className=\"mapping-page\">\r\n            <Navbar_member botID = {props.match.params.bot_id} path={\"mapping\"} />\r\n            <div className=\"container\">\r\n                <div className=\"container-top d-flex bd-highlight\">\r\n                    <h2 className='p-2 flex-grow-1 bd-highlight'>Mapping</h2>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"updatenode__controls\">\r\n        <label>EDIT:</label>\r\n        <input\r\n          value={nodeName}\r\n          onChange={(evt) => setNodeName(evt.target.value)}\r\n        />\r\n        {/* <select id = \"NodeType\" onchange = \"#\" >  \r\n          <option disabled> ---Choose Node type--- </option>  \r\n          <option> root node </option>  \r\n          <option> leave node </option>  \r\n          <option> middle node </option>  \r\n          \r\n        </select>   */}\r\n\r\n        \r\n          \r\n         \r\n        \r\n        \r\n        </div>\r\n                <ReactFlowProvider>\r\n      <ReactFlow\r\n        elements={elements}\r\n        onElementsRemove={onElementsRemove}\r\n        \r\n        // onClick={(e) => setNodeName(e.target.nodeName)}\r\n        // onElementClick = {onSelectionChange}\r\n        onConnect={onConnect}\r\n        onLoad={setRfInstance}\r\n        onSelectionChange={onSelectionChange}     \r\n        >\r\n\r\n        <div className=\"save__controls\">\r\n          <button onClick={onSave}>save</button>\r\n          {/* <button onClick={onRestore}>restore</button> */}\r\n          <button onClick={onAdd}>add node</button>\r\n          <button onClick={onDelete}>delete</button>\r\n        </div>\r\n\r\n        \r\n      </ReactFlow>\r\n    </ReactFlowProvider>\r\n\r\n           \r\n                \r\n                \r\n                    \r\n            </div>\r\n\r\n        </div>\r\n        </Styles>        \r\n        \r\n    );\r\n}\r\n\r\nexport default Mapping_create;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Learned.js",["264","265","266","267","268","269","270"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from '../Components/Table/Table';\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div` \r\n.learned-page {\r\n    display: flex;\r\n    min-height: 92vh;\r\n}\r\n.container {\r\n    margin-bottom: 2%;\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n}\r\n.tained-title{\r\n    padding: 4px;\r\n    width: 100% ;\r\n    background-color: white;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n.showtable-learn{\r\n    min-height: 70vh;\r\n    margin-top: 1%;\r\n    background-color: white;\r\n    padding: 1%;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.25rem;\r\n    /* border: 1px solid #ececec; */\r\n}\r\n`\r\n// const mapStateToProps = (state) =>{\r\n//     return {\r\n//         ichange : state\r\n//     }\r\n// }\r\nfunction Learned(props){\r\n    const [deleteState,setdeleteState] = useState([]);\r\n    const  [Info,setInfo] = useState([]);\r\n    const delete_trained =(data)=>{\r\n        var newdata = []\r\n        var i = 0\r\n\r\n        // var a = []\r\n        for (i = 0; i < data.length; i++){\r\n            newdata.push(data[i].original)\r\n        }\r\n        // console.log(data)\r\n        console.log(newdata)\r\n        // console.log(data[0].original.ReplyWord)\r\n        // const newdata = new FormData();\r\n        // newdata.append('id', data);\r\n        // newdata.append('gender' ,this.gender.value);\r\n        // newdata.append('age' ,this.age.value);\r\n\r\n        if (data[0]){\r\n            fetch('/train_bot/delete/'+data[0].original.id, {\r\n                method : 'POST',\r\n                headers : {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Content-Type':'application/json'\r\n                    },\r\n                    body : JSON.stringify(newdata),\r\n                });\r\n                window.location.reload(\"bot/\"+deleteState.bot_id+'/trained');\r\n        }\r\n     \r\n      \r\n        \r\n    }\r\n    const add_data = (data) =>{\r\n        deleteState.push(data)\r\n        console.log(deleteState)\r\n    }\r\n    const id = (data) =>{\r\n        console.log(id.botID)\r\n    }\r\n\r\n \r\n    \r\n\r\n      \r\n    return(\r\n        <Styles>\r\n        <div className=\"learned-page\">\r\n            <Navbar_member botID = {props.match.params.bot_id} path={\"trained\"}  />\r\n            <div className=\"container\">\r\n              \r\n                <div className=\"container-top d-flex bd-highlight\">                   \r\n                    <div className=\"tained-title\"> \r\n                        <h2 className=' p-2 flex-grow-1 bd-highlight'>Trained</h2>\r\n                    </div>\r\n                    {/* <div className=\"p-2 bd-highlight\">\r\n                        <button className=\"btn btn-danger\" type=\"button\" onClick = {() => delete_trained(props.match.params.bot_id) } >Delete</button>\r\n                    </div> */}\r\n                    {/* <div className=\"p-2 bd-highlight\">\r\n                        <Link to={'/bot/'+props.match.params.bot_id+'/training'}>\r\n                            <button className=\"btn btn-success\" type=\"button\">Training</button>\r\n                        </Link>\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"showtable-learn\">\r\n                    <Table botID={props.match.params.bot_id} delete_trained={delete_trained}  />\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            </div>\r\n                \r\n        </Styles>\r\n    );\r\n\r\n}\r\n\r\nexport default Learned;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Group.js",["271"],"import React from 'react';\r\nimport Table from '../Components/Table/Table';\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div` \r\n.group-page {\r\n    display: flex;\r\n    min-height: 92vh;\r\n}\r\n.container {\r\n    margin-bottom: 2%;\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n}\r\n.group-title{\r\n    padding: 4px;\r\n    width: 100% ;\r\n    background-color: white;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n.showtablegroup{\r\n    min-height: 70vh;\r\n    margin-top: 1%;\r\n    background-color: white;\r\n    padding: 1%;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.25rem;\r\n    /* border: 1px solid #ececec; */\r\n}\r\n\r\n.delete-group button{\r\n    border-radius: 1rem;\r\n    padding: 7px 15px;\r\n    font-size: 15px;\r\n    border-radius: 25px;\r\n    /* border: 1px solid #0078ff; */\r\n    transition: 0.5s;\r\n}\r\n` \r\n\r\nfunction Group(props){\r\n    return(\r\n        <Styles>\r\n        <div className=\"group-page\">\r\n            <Navbar_member botID = {props.match.params.bot_id} path={\"group\"} />\r\n            <div className=\"container\">\r\n                <div className=\"group-title d-flex bd-highlight\">\r\n                    <h2 className=' p-2 flex-grow-1 bd-highlight'>Group</h2>\r\n                    <div className=\"delete-group p-2 bd-highlight\"><button className=\"btn btn-danger\" type=\"button\">Delete</button></div>\r\n                </div>\r\n                <div className=\"showtablegroup\">\r\n                    <Table />\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n       </Styles>         \r\n        \r\n    );\r\n}\r\n\r\nexport default Group;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Train.js",["272","273","274","275","276","277"],"import React, { useState, useEffect } from \"react\";\r\nimport Navbar_member from \"../Components/Navbar/navbar_member\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteModal from \"../Components/delete_modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Tablecon from \"../Components/Table/Tablecon\";\r\n\r\nconst Styles = styled.div`\r\n  .train-page {\r\n    display: flex;\r\n    min-height: 92vh;\r\n  }\r\n  \r\n  .container {\r\n    margin-bottom: 2%;\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n  }\r\n  \r\n  .training-title{\r\n    /* font-family: 'Public Sans', sans-serif;    */\r\n    padding: 4px;\r\n    width: 100% ;\r\n    background-color: white;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n    padding: 0 1%;\r\n  }\r\n\r\n\r\n  .showtablecon{\r\n    min-height: 70vh;\r\n    margin-top: 1%;\r\n    background-color: white;\r\n    padding: 5px;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.25rem;\r\n\r\n  }\r\n`;\r\n\r\nfunction Train(props) {\r\n  let history = useHistory();\r\n  const [deleteState, setdeleteState] = useState([]);\r\n  const delete_trained =(data)=>{\r\n    var newdata = []\r\n    var i = 0\r\n\r\n    // var a = []\r\n    for (i = 0; i < data.length; i++){\r\n        newdata.push(data[i].original)\r\n    }\r\n    // console.log(data)\r\n    console.log(newdata)\r\n    // console.log(data[0].original.ReplyWord)\r\n    // const newdata = new FormData();\r\n    // newdata.append('id', data);\r\n    // newdata.append('gender' ,this.gender.value);\r\n    // newdata.append('age' ,this.age.value);\r\n\r\n    if (data[0]){\r\n        fetch('/train_bot/delete/training/'+data[0].original.id, {\r\n            method : 'POST',\r\n            headers : {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-Type':'application/json'\r\n                },\r\n                body : JSON.stringify(newdata),\r\n            });\r\n            console.log(data)\r\n            window.location.reload(\"bot/\"+deleteState.bot_id+'/trained');\r\n    }    \r\n}\r\n  const add_data = (data) => {\r\n    deleteState.push(data);\r\n  };\r\n\r\n  return (\r\n    <Styles>\r\n      <div className=\"train-page\">\r\n        <Navbar_member botID={props.match.params.bot_id} path={\"training\"} />\r\n        <div className=\"container\">\r\n          <div className=\"container-top d-flex bd-highlight\">\r\n            <div className=\"training-title\">\r\n              <h2 className=\"p-2 flex-grow-1 bd-highlight\">Trainning</h2> \r\n            </div>\r\n\r\n            {/* <div className=\"p-2 bd-highlight\">\r\n              <button className=\"btn btn-danger\" type=\"button\">\r\n                            Delete\r\n                        </button>\r\n              <DeleteModal\r\n                className=\"button_delete_table\"\r\n                dataType={\"training\"}\r\n                dataID={props.match.params.bot_id}\r\n                delete_trained={delete_trained}\r\n                add_data={add_data}\r\n              />\r\n            </div> */}\r\n            {/* <div className=\"p-2 bd-highlight\">\r\n              <Link to={'/bot/'+props.match.params.bot_id+'/trained'}>\r\n                            <button className=\"btn btn-success\" type=\"button\">Trained</button>\r\n                        </Link>\r\n            </div> */}\r\n          </div>\r\n          <div className=\"showtablecon\">\r\n            <Tablecon\r\n              botID={props.match.params.bot_id}\r\n              delete_trained={delete_trained}\r\n              add_data={add_data}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Train;\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Mapping.js",["278","279","280","281","282","283"],"import React, { useEffect, useState,Fragment, useCallback } from 'react';\r\nimport Tablemap from '../Components/Table/Tablemap';\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\n\r\n\r\n\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Styles = styled.div` \r\n.mapping-page {\r\n    display: flex;\r\n    min-height: 92vh;\r\n}\r\n.container {\r\n    margin-bottom: 2%;\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n}\r\n.mapping-title {\r\n    padding: 4px;\r\n    width: 100% ;\r\n    background-color: white;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n.showtablemap{\r\n    min-height: 70vh;\r\n    margin-top: 1%;\r\n    background-color: white;\r\n    padding: 1%;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.25rem;\r\n    /* border: 1px solid #ececec; */\r\n}\r\n` \r\n\r\nfunction Mapping(props){\r\n  \r\n    return(\r\n        <Styles>\r\n        \r\n        <div className=\"mapping-page\">\r\n            <Navbar_member botID = {props.match.params.bot_id} path={\"mapping\"} />\r\n            <div className=\"container\">\r\n                <div className=\"mapping-title\">\r\n                    <h2 className='p-2 flex-grow-1 bd-highlight'>Mapping</h2>\r\n                </div>\r\n                <div className=\"showtablemap\">\r\n                    <Tablemap \r\n                        botID={props.match.params.bot_id}\r\n                    />  \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        </Styles>        \r\n        \r\n    );\r\n}\r\n\r\nexport default Mapping;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Profile_edit.js",["284","285","286","287","288","289","290"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    // background: url(${process.env.PUBLIC_URL +'/images/b.png'}) ;\r\n    filter: gray;\r\n    background-size: 40%;\r\n    background-repeat: repeat;\r\n    position: cover;\r\n  }\r\n\r\n  .card-regis {\r\n    margin-top: 8%;\r\n    margin-bottom: 10%;\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-regis .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-regis .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .form-regis input {\r\n    border-radius: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .form-regis input {\r\n    border-radius: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .form-regis .btn {\r\n    margin-left: 10%;\r\n    border-radius: 1rem;\r\n    letter-spacing: 0.1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    text-align: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .btn-regis .btn {\r\n    text-align: center;\r\n    align-items: center;\r\n  }\r\n\r\n  @mixin transition($property: all, $duration: 0.5s, $ease: cubic-bezier(0.65,-0.25,0.25, 1.95)) {\r\n    transition: $property $duration $ease;\r\n  }\r\n  \r\n  .btn-regis button {\r\n    text-align: center;\r\n    align-items: center;\r\n    position: relative;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: 0;\r\n    vertical-align: middle;\r\n    text-decoration: none;\r\n    &.btn-inregis {\r\n      @include transition(all, 0.5s, cubic-bezier(0.65,-0.25,0.25,1.95));\r\n      font-weight: 900;\r\n      color: $black;\r\n      padding: 1rem 1rem;\r\n      background: $white;\r\n      text-transform: uppercase;\r\n      &:hover, &:focus, &:active {\r\n        letter-spacing: 0.4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n    // label {\r\n    //     font-weight: \r\n    // }\r\n\r\n  .title_part {\r\n      margin-top: 4rem;\r\n    }\r\n\r\n  .title_part  p{\r\n    font-weight: bold;\r\n    margin-top:5%;\r\n  }\r\n\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n  }\r\n\r\n  input-icon{\r\n    display: flex;\r\n    width: 100%;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .form-check{\r\n    margin-top: 10%;\r\n    margin-bottom: 3%;\r\n  }\r\n  \r\n`;\r\n\r\n\r\nclass Profile_edit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      email: '',\r\n      username: '',\r\n      password : '',\r\n      confirm_password : '',\r\n      firstname : '',\r\n      lastname : '',\r\n      birthday : '',\r\n      shop_name : '',\r\n      shop_type : '',\r\n      shop_address : ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n\r\n  handleChange (evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(this.state.password !== this.state.confirm_password){\r\n      console.log('errors');\r\n  }\r\n  else{\r\n    const profile = {\r\n        email: this.state.email,\r\n        username: this.state.username,\r\n        password : this.state.password,\r\n        firstname : this.state.firstname,\r\n        lastname : this.state.lastname,\r\n        birthday : this.state.birthday,\r\n        shop_name : this.state.shop_name,\r\n        shop_type : this.state.shop_type,\r\n        shop_address : this.state.shop_address\r\n      }\r\n      fetch('/profile/'+localStorage.getItem('user_id')+'/edit', {\r\n      method : 'POST',\r\n      headers : {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    })\r\n  \r\n    window.location.replace(\"/login\")\r\n          }\r\n\r\n  }\r\ncomponentDidMount ()  {\r\n  fetch('/profile/'+localStorage.getItem('user_id')+'/edit').then((response) => {\r\n      response.json().then((data) => {\r\n        this.setState({ username: data[0].username });\r\n        this.setState({ firstname: data[0].ft_name });\r\n        this.setState({ lastname: data[0].la_name });\r\n        this.setState({ shop_name: data[0].shop_name });\r\n        this.setState({ shop_type: data[0].type_shop });\r\n        this.setState({ shop_address: data[0].address });\r\n        this.setState({ birthday: data[0].birthday });\r\n        this.setState({ email: data[0].email });\r\n        console.log(data)\r\n      });\r\n      \r\n    });\r\n  \r\n      }\r\n    \r\n\r\n  render() {\r\n    return(\r\n        <Styles>\r\n              <div className=\"container\">\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                      <div className=\"card card-regis\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title text-center\">Edit Profile</h5>\r\n                          <form className=\"form-regis\">\r\n                          <div className=\"title_part\">\r\n                                <p className=\"col\">Account infomation</p>\r\n                                <div className=\"line\"></div>\r\n                          </div>\r\n                              <div className=\"my-3\">\r\n                              <label for=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                              <input type=\"email\" className=\"form-control \" value = {this.state.email} id=\"inputemail\" name='email' required value={this.state.email} onChange={this.handleChange} />\r\n                              </div>\r\n                              <div className=\"my-3\">\r\n                                <label for=\"exampleInputEmail1\" className=\"form-label\">Username</label>\r\n                                <input type=\"text\" className=\"form-control\" value = {this.state.username} id=\"inputusername\" name='username' disabled value={this.state.username} onChange={this.handleChange}/>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                {/* <div className=\"col \">\r\n                                  <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                                  <input type=\"password\" className=\"form-control\"  id=\"inputpassword\" name='password'  value={this.state.password} onChange={this.handleChange} /> \r\n                                </div>\r\n                                <div className=\"col\">\r\n                                  <label for=\"exampleInputPassword1\" className=\"form-label\">Comfirm Password</label>\r\n                                  <input type=\"password\" className=\"form-control\" id=\"confirmpassword\" name='confirm_password' value={this.state.confirm_password} onChange={this.handleChange} />  \r\n                                </div> */}\r\n                              </div>\r\n                              <div className=\"title_part\">\r\n                                <p className=\"col\">Personal infomation</p>\r\n                                <div className=\"line\"></div>\r\n                              </div>\r\n                                <div className=\"row my-3\">\r\n                                    <div className=\"col\">\r\n                                        <label for=\"inputFirstname\" className=\"form-label\">Firstname</label>\r\n                                        <input type=\"text\" className=\"form-control\" value = {this.state.firstname} id=\"inputfirstname\"  name='firstname' value={this.state.firstname} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                    <label for=\"inputLastname\" className=\"form-label\">Last name</label>\r\n                                        <input type=\"text\" className=\"form-control\" value = {this.state.lastname} id=\"inputlastname\"  name='lastname' value={this.state.lastname} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                      <label for=\"exampleInputEmail1\" className=\"form-label\">Birthday</label>\r\n                                      <input type=\"date\" className=\"form-control\" id=\"inputdate\" value = {this.state.birthday} name='birthday' value={this.state.birthday} onChange={this.handleChange} />\r\n                                     </div> \r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col my-3\">\r\n                                    <label for=\"exampleInputEmail1\" className=\"form-label\">Shop name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputshopname\" value={this.state.shop_name} name='shop_name' onChange={this.handleChange} />\r\n                                  </div>\r\n                                  <div className=\"col my-3\">\r\n                                    <label for=\"exampleInputEmail1\" className=\"form-label\">Type of sale</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputtypeofsale\" value={this.state.shop_type} name='shop_type' onChange={this.handleChange} />\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                  <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Shop Address</label>\r\n                                  <textarea className=\"form-control\" id=\"inputshopaddress\" value = {this.state.shop_address} rows=\"2\" placeholder=\"หากไม่มีให้เว้นว่างเอาไว้\" name='shop_address' value={this.state.shop_address} onChange={this.handleChange}></textarea>\r\n                                </div>\r\n                                {/* <hr className=\"my-4\"/>                            */}\r\n                              <div className=\"btn-regis mt-5\">\r\n                                  <button className=\"btn btn-primary text-uppercase btn-inregis\" type=\"submit\" onClick={this.handleSubmit} >Submit</button>\r\n                              </div>\r\n                              {/* <hr className=\"my-4\"/>\r\n                              <div align=\"center\">\r\n                                <span> Already have an account ? </span>\r\n                                <a  href=\"/Login\" >Log in</a> \r\n                              </div> */}\r\n                          </form>\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n        </Styles>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile_edit;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Bot_list.js",["291","292","293","294","295","296","297","298"],"import React, {useState, useEffect, useRef } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport '../Components/Botlist/Bot_list.css';\r\nimport { useDetectOutsideClick } from \"../Components/Botlist/button_nav\";\r\n// import DeleteModal from '../Components/delete_modal'\r\nimport Delete_pop from \"../Components/Delete_pop\";\r\n// import Facebookform from \"../Components/Form/facebookform\";\r\nimport Connect_bot from \"../Page/Connect_bot\";\r\n\r\n\r\nexport default function Bot_list(props) {\r\n    const [botlist,setBotlist] = useState([]);\r\n    \r\n    const delete_bot =(id)=>{\r\n        fetch('/bot/delete/'+id, {\r\n        method : 'POST',\r\n        headers : {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Content-Type':'application/json'\r\n            },\r\n        });\r\n        const newList = botlist.filter((bot) => bot._id.$oid !== id);\r\n        \r\n        setBotlist(newList);\r\n    }\r\n\r\n    const [showDelete_pop, setShowDelete_pop] = useState(false);\r\n    const [showBotId, setShowBotId] = useState();\r\n    const openDelete_pop = (a) => {\r\n    setShowBotId(a)\r\n    setShowDelete_pop(prev => !prev);\r\n    }\r\n\r\n    const [showForm, setShowForm] = useState(false);\r\n    const openForm = (b) => {\r\n    setShowBotId(b)\r\n    setShowForm(prev => !prev);\r\n    }\r\n  \r\n    useEffect(async () => {\r\n        fetch('/profile/'+localStorage.getItem('user_id')).then(res => res.json().then(data => setBotlist(data)))\r\n        console.log(localStorage.getItem(\"access_token\") )\r\n    },[])\r\n\r\n \r\n    const card = botlist.map((bot) => \r\n  \r\n        <Dropdown botData={bot} deleteBot={delete_bot} openDelete_pop={openDelete_pop} openForm={openForm}/>\r\n    );\r\n\r\n    return(\r\n        \r\n                <div className=\"botlist-page\">\r\n                    <div className=\"popup-del-connect\">\r\n                        <Delete_pop showDelete_pop={showDelete_pop} setShowDelete_pop = {setShowDelete_pop} Delete_bot ={delete_bot} bot={showBotId}></Delete_pop>\r\n                        <Connect_bot showForm={showForm} setShowForm={setShowForm} botID={showBotId} ></Connect_bot>\r\n                    </div>\r\n\r\n                    {/* <Navbar_member /> */}\r\n                          <div class=\"container col-xl-9 col-lg-9 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"botlist-body\">\r\n                                        <Link className='link' to={'/bot/'+localStorage.getItem('user_id')+'/create_bot'}>\r\n                                        <div className=\"card-plus group\">\r\n                                            <div>\r\n                                                <p>Add new Bot</p>\r\n                                            </div>    \r\n                                                <div className=\"icon-plus\">\r\n                                                    <i class=\"fas fa-plus\"></i>\r\n                                                </div>\r\n                                        </div>\r\n                                        </Link>\r\n                                        {/* <div class=\"card-box\"> */}\r\n                                            {card}\r\n                                           \r\n                                        {/* </div> */}\r\n\r\n                                    </div> \r\n                                    <div className=\"popup-del-connect\">\r\n                                        <Delete_pop className=\"pop-del\" showDelete_pop={showDelete_pop} setShowDelete_pop = {setShowDelete_pop} Delete_bot ={delete_bot} bot={showBotId}></Delete_pop>\r\n                                        <Connect_bot className=\"pop-con-mm\" showForm={showForm} setShowForm={setShowForm} botID={showBotId} ></Connect_bot>\r\n                                    </div>\r\n\r\n\r\n                        </div>\r\n                </div>    \r\n               \r\n        \r\n    );\r\n}\r\n\r\nfunction Dropdown({botData, deleteBot, openDelete_pop, openForm}){\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\r\n    const onClick = () => {setIsActive(prev => !prev)\r\n    // const [showIdbot, setshowIdbot] = useState(botData._id.$oid);\r\n    // console.log(isActive);\r\n    };\r\n\r\n    // const forceUpdate = useForceUpdate();\r\n    // console.log(botData)\r\n    \r\n    // const [showConnect, setShowConnect] = useState(false);\r\n    // const openConnect = () => {\r\n    //     setShowConnect(prev => !prev);\r\n    //   }\r\n    const OnDelete = () => {\r\n    openDelete_pop(botData._id.$oid)\r\n    onClick()\r\n    }\r\n\r\n    // const [showForm, setShowForm] = useState(false);\r\n    // const [showIdbot, setshowIdbot] = useState(botData._id.$oid);\r\n    const OnopenForm = () => {\r\n    openForm(botData._id.$oid)\r\n    onClick()\r\n    }\r\n    \r\n\r\n    return(\r\n    <div>\r\n    <div class=\"card-box\">\r\n        <Link to={'/bot/'+botData._id.$oid+'/training' } >\r\n            <img src={'/images/bot/bot_pic/'+botData.Img} class=\"bot-img\"/>\r\n        </Link>\r\n        <div class=\"info-bot\">\r\n            <Link className=\"link\" to={'/bot/'+botData._id.$oid+'/training'}>\r\n                <p class=\"Bot-name\">{botData.bot_name}</p>\r\n            </Link>\r\n            <div class=\"divider\"></div>\r\n        </div>\r\n        \r\n        <div className=\"connect\">\r\n        {botData.access_token ? <div className=\"connect-area line\">\r\n                <i class=\"fab fa-line\"></i>\r\n            </div> : <div className=\"connect-area lineblack\">\r\n                 <i class=\"fab fa-line\"></i>\r\n            </div>}\r\n\r\n            {botData.page_facebook_access_token ? <div className=\"connect-area facebook\">\r\n                <i class=\"fab fa-facebook-square\"></i>\r\n            </div>\r\n             : <div className=\"connect-area facebookblack\">\r\n                <i class=\"fab fa-facebook-square\"></i>\r\n            </div>\r\n         }\r\n            \r\n        </div>\r\n        <div className=\"menu-continer\">\r\n            <div onClick={onClick} className=\"menu-trigger\">\r\n                <i class=\"fas fa-ellipsis-v\"></i>\r\n            </div>\r\n            <div\r\n                ref={dropdownRef}\r\n                className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n                >\r\n                <ul>\r\n                    <li> \r\n                        <a href={'/bot/'+botData._id.$oid+'/edit_bot'}><i class=\"fas fa-pen\"></i> edit</a>\r\n                    </li>\r\n                    <li>\r\n                        <a onClick={OnopenForm}><i class=\"fas fa-link\"></i> Connect </a>\r\n                    {/* <a href={'/bot/'+botData._id.$oid+'/connect'} ><i class=\"fas fa-link\"></i> Connect</a> */}\r\n                    {/* <Facebookform showForm={showForm} setShowForm={setShowForm} showIdbot={showIdbot}></Facebookform> */}\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\" onClick={OnDelete}>\r\n                        <i class=\"fas fa-trash\"></i> Delete</a>\r\n                    </li>\r\n                </ul>\r\n               \r\n            </div>\r\n        </div> \r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// function useForceUpdate(){\r\n//     const [value, setValue] = useState(0); // integer state\r\n//     return () => setValue(value => value + 1); // update the state to force render\r\n// }","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Edit_bot.js",["299","300","301","302"],"  \r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {withRouter, Redirect} from 'react-router-dom'\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    margin-top: 2%;\r\n  }\r\n  .card-bot{\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-bot .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-bot .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .title_part p{\r\n      font-weight: bold;\r\n      margin-top: 9%;\r\n  }\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n    margin-bottom: 5%;\r\n  }\r\n  .form-bot .btn {\r\n    border-radius: 1rem;\r\n    letter-spacing: .1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    align-items: center;\r\n    /* background-color: #; */\r\n  }\r\n  .btn-createbot{\r\n      margin-top: 3rem;\r\n      text-align : center;\r\n  }\r\n  .form-bot input {\r\n    border-radius: 0.5rem;\r\n  }\r\n  .form-bot select{\r\n    border-radius: 0.5rem;\r\n  }\r\n  .row-2{\r\n    margin-bottom: 2rem;\r\n    margin-top: 1rem;\r\n  }\r\n  input[type=file]::-webkit-file-upload-button {\r\n    border: 2px;\r\n    padding: 0.5rem ;\r\n    border-radius: 0.75rem;\r\n    background-color: #fca311;\r\n    transition: 1s;\r\n    color: white;\r\n    width: 40%;\r\n    \r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    max-width: 100%;\r\n  }\r\n  .showimage {\r\n    margin-bottom: 1%;\r\n    text-align: center;\r\n  }\r\n  .showimage img{\r\n    border: 1px solid #ddd;\r\n    border-radius: 50%;\r\n    width: 80%;\r\n    text-align: center;\r\n  }\r\n  \r\n  .vertical-line {\r\n    border-left: 1px solid black;\r\n  }\r\n  .btn-facebook {\r\n    background-color: #0078ff;\r\n  }\r\n  .btn-line {\r\n    background-color: #34a853 ;\r\n  }\r\n`;\r\n\r\nclass Edit_bot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bot_name: '',\r\n      gender: '',\r\n      age: '',\r\n      bot_id:'',\r\n      imageURL: '',\r\n      Image: '',\r\n    };\r\n    this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n \r\n  handleChange (evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n    console.log(this.state)\r\n  }\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    console.log(\"File = \"+JSON.stringify(file))\r\n    if (!file){\r\n      return\r\n    }\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n        });      \r\n    }\r\n    reader.readAsDataURL(file)\r\n  }\r\n  handleUploadImage(ev) {\r\n    ev.preventDefault();\r\n    \r\n\r\n    const data = new FormData();\r\n    data.append('file', this.uploadInput.files[0]);\r\n    data.append('bot_name',this.bot_name.value);\r\n    data.append('gender' ,this.gender.value);\r\n    data.append('age' ,this.age.value);\r\n    data.append('creator' , localStorage.getItem('user_id'))\r\n    data.append('Image' , this.state.Image)\r\n    fetch('/bot/'+this.props.match.params.bot_id+'/edit', {\r\n      method: 'POST',\r\n      // headers : {\r\n      //   \"Access-Control-Allow-Origin\": \"*\",\r\n      //   //'Content-Type':'application/json'\r\n      // },\r\n      //body : JSON.stringify(form),\r\n      body: data,\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        this.setState({ imageURL: `/${body.file}` });\r\n        this.setState({ bot_id : data.id})\r\n        this.setState({ redirect: true }) \r\n      });\r\n    });\r\n  }\r\n     componentDidMount ()  {\r\n    fetch('/bot/'+this.props.match.params.bot_id+'/edit').then((response) => {\r\n        response.json().then((data) => {\r\n          this.setState({ bot_name: data[0].bot_name });\r\n          this.setState({ gender : data[0].gender});\r\n          this.setState({ age: data[0].age }) ;\r\n          this.setState({ Image: data[0].Img }); \r\n        });\r\n        \r\n      });\r\n        \r\n        }\r\n      \r\n    render() {\r\n    const { redirect,bot_id } = this.state;\r\n    if (redirect) {\r\n      return <Redirect to={\"/bot_list/\"+ localStorage.getItem('user_id')} />\r\n    }\r\n    else {\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        \r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      }\r\n      return(\r\n        <Styles>\r\n          \r\n              <div className=\"container\">\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                      <div className=\"card card-bot\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title text-center\">Create Bot form</h5>\r\n                          <form className=\"form-bot\" onSubmit={this.handleUploadImage}>\r\n                                <div className=\"title_part\">\r\n                                        <p className=\"col\">Bot infomation</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                        <div className=\"group col-lg-6\">\r\n                                          <div className=\"showimage col-lg-8\">\r\n                                          { imagePreviewUrl ?   $imagePreview :  <img src={'/images/bot/bot_pic/'+this.state.Image}/> }            \r\n                                          </div>\r\n                                          <div className=\"mt-3\">                                           \r\n                                              <label for=\"uploadimage\">Upload Proflie</label>\r\n                                              <input  ref={(ref) => { this.uploadInput = ref; }} onChange={(e)=>this._handleImageChange(e)} type=\"file\"  />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div className=\" group col-lg-6\">\r\n                                            <div className=\"\">\r\n                                              <label  className=\"form-label\">Bot Name</label>\r\n                                              <input type=\"text\"  name=\"bot_name\" value = {this.state.bot_name}  ref={(ref) => { this.bot_name = ref; }} onChange={this.handleChange} className=\"form-control\" id=\"inputbotname\"/>\r\n                                            </div>\r\n                                            <div class=\"mt-3\">\r\n                                              <label for=\"inputgender\" class=\"form-label\">Gender</label>\r\n                                              <select id=\"inputgender\" name=\"gender\" value = {this.state.gender}  ref={(ref) => { this.gender = ref; }} onChange={this.handleChange} class=\"form-select\">\r\n                                                  <option selected>Choose...</option>\r\n                                                  <option>Male </option>\r\n                                                  <option>Female</option>\r\n                                              </select>\r\n                                            </div>\r\n                                            <div className=\"mt-3\">\r\n                                                <label for=\"inputFirstname\" className=\"form-label\">Age</label>\r\n                                                <input type=\"integer\" name=\"age\" className=\"form-control\" id=\"inputfirstname\" value = {this.state.age}   ref={(ref) => { this.age = ref; }} onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                                <div className=\"row row-2\">\r\n                                        \r\n                                </div>\r\n                                {/* <div className=\"title_part\">\r\n                                        <p className=\"col \">Connect platform</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"connect_platform\">\r\n                                  <div className=\"row col-lg-12\">\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\">facebook</button>\r\n                                      </div>\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\">line</button>\r\n                                      </div>\r\n                                  </div>\r\n                                </div> */}\r\n\r\n                            {/* {this.renderSwitch(this.state.platform)} */}\r\n                            {/* <Lineform />                                 */}\r\n\r\n                              <div className=\"btn-createbot\">\r\n                                  <button className=\"btn btn-success text-uppercase\" onClick={this.handleUploadImage} type=\"submit\">Create ChatBot</button>\r\n                              </div>\r\n\r\n\r\n                          </form>\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n        </Styles>\r\n      )\r\n    }\r\n}\r\n}\r\n\r\nexport default Edit_bot;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Create_bot.js",["303","304","305","306","307"],"  \r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {withRouter, Redirect} from 'react-router-dom'\r\nimport ReactFileReader from 'react-file-reader';\r\nimport Facebookform  from '../Components/Form/facebookform';\r\nimport Lineform  from '../Components/Form/lineform';\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    margin-top: 2%;\r\n  }\r\n\r\n  .card-bot{\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-bot .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-bot .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .title_part p{\r\n      font-weight: bold;\r\n      margin-top: 9%;\r\n  }\r\n  .title_part  .line{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: #fca311;\r\n    width: 200px;\r\n    margin-bottom: 5%;\r\n  }\r\n  .form-bot .btn {\r\n    border-radius: 1rem;\r\n    letter-spacing: .1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    align-items: center;\r\n    /* background-color: #; */\r\n  }\r\n  .btn-createbot{\r\n      margin-top: 3rem;\r\n      text-align : center;\r\n  }\r\n  .form-bot input {\r\n    border-radius: 0.5rem;\r\n  }\r\n  .form-bot select{\r\n    border-radius: 0.5rem;\r\n  }\r\n  .row-2{\r\n    margin-bottom: 2rem;\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  input[type=file]::-webkit-file-upload-button {\r\n    border: 2px;\r\n    padding: 0.5rem ;\r\n    border-radius: 0.75rem;\r\n    background-color: #fca311;\r\n    transition: 1s;\r\n    color: white;\r\n    width: 40%;\r\n    \r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    max-width: 100%;\r\n  }\r\n  .showimage {\r\n    margin-bottom: 1%;\r\n    text-align: center;\r\n  }\r\n  .showimage img{\r\n    border: 1px solid #ddd;\r\n    border-radius: 50%;\r\n    height: 150px;\r\n    width: 150px;\r\n    text-align: center;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .vertical-line {\r\n    border-left: 1px solid black;\r\n  }\r\n  .btn-facebook {\r\n    background-color: #0078ff;\r\n  }\r\n  .btn-line {\r\n    background-color: #34a853 ;\r\n  }\r\n\r\n  .upload-img input{\r\n    cursor: pointer;\r\n  }\r\n\r\n  .upload-img label{\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n\r\nclass Create_bot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bot_name: null,\r\n      gender: null,\r\n      age: null,\r\n      platform: 'line',\r\n      redirect: false,\r\n      bot_id:'',\r\n      imageURL: '',\r\n      file:''\r\n    };\r\n    \r\n    this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    this.handlelineChange = this.handlelineChange.bind(this);\r\n    this.handlefacebookChange = this.handlefacebookChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  renderSwitch(param) {\r\n    switch(param) {\r\n      case 'facebook':\r\n        return <Facebookform />\r\n      default:\r\n        return <Lineform />\r\n    }\r\n  }\r\n  \r\n  handlelineChange (evt) {\r\n    evt.preventDefault() ;\r\n    this.setState({ platform: \"line\" });\r\n    console.log(this.state.platform)\r\n  }\r\n  handlefacebookChange (evt) {\r\n    evt.preventDefault() ;\r\n    this.setState({ platform: \"facebook\" });\r\n    console.log(this.state.platform)\r\n  }\r\n  handleChange (evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n    console.log(this.state)\r\n  }\r\n  handleFile = (e) => {\r\n  const content = e.target.result;\r\n  console.log('file content',  content)\r\n  // You can set content in state and show it in render.\r\n}\r\n// _handleSubmit(e) {\r\n//   e.preventDefault();\r\n//   // TODO: do something with -> this.state.file\r\n//   console.log('handle uploading-', this.state.file);\r\n// }\r\n\r\n_handleImageChange(e) {\r\n  e.preventDefault();\r\n\r\n  let reader = new FileReader();\r\n  let file = e.target.files[0];\r\n  if (!file){\r\n    this.setState({\r\n      imagePreviewUrl: \"\"\r\n    });\r\n    return\r\n  }\r\n\r\n  reader.onloadend = () => {\r\n    this.setState({\r\n      file: file,\r\n      imagePreviewUrl: reader.result\r\n    });\r\n  }\r\n\r\n  reader.readAsDataURL(file)\r\n}\r\n  handleUploadImage(ev) {\r\n    ev.preventDefault();\r\n\r\n    const data = new FormData();\r\n    data.append('file', this.uploadInput.files[0]);\r\n    data.append('bot_name',this.bot_name.value);\r\n    data.append('gender' ,this.gender.value);\r\n    data.append('age' ,this.age.value);\r\n    data.append('creator' , localStorage.getItem('user_id'))\r\n\r\n    fetch('/bot/create', {\r\n      method: 'POST',\r\n      // headers : {\r\n      //   \"Access-Control-Allow-Origin\": \"*\",\r\n      //   //'Content-Type':'application/json'\r\n      // },\r\n      //body : JSON.stringify(form),\r\n      body: data,\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        this.setState({ imageURL: `/${body.file}` });\r\n        this.setState({ bot_id : data.id})\r\n        this.setState({ redirect: true }) \r\n      });\r\n    });\r\n  }\r\n  // componentDidMount(){\r\n  //   fetch('/bot/'+user_id)\r\n  // }\r\n\r\n  render() {\r\n    const { redirect,bot_id } = this.state;\r\n    if (redirect) {\r\n      return <Redirect to={\"/bot_list/\"+ localStorage.getItem('user_id')} />\r\n    }\r\n    else {\r\n        let {imagePreviewUrl} = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n          $imagePreview = (<img src={imagePreviewUrl} />);\r\n        } \r\n        return(\r\n        <Styles>\r\n          \r\n              <div className=\"container\">\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                      <div className=\"card card-bot\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title text-center\">Create Bot form</h5>\r\n                          <form className=\"form-bot\" onSubmit={this.handleUploadImage}>\r\n                                <div className=\"title_part\">\r\n                                        <p className=\"col\">Bot infomation</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                        <div className=\"group col-lg-6\">\r\n                                          <div className=\"showimage col-lg-8\">\r\n                                         { imagePreviewUrl ?   $imagePreview :<img src={'/images/bot/bot_pic/Avatar.jpg'}/>}\r\n                                              \r\n                                          </div>\r\n                                          <div className=\"mt-3 upload-img\">                                           \r\n                                              <label for=\"uploadimage\">Upload Proflie</label>\r\n                                              <input ref={(ref) => { this.uploadInput = ref; }} onChange={(e)=>this._handleImageChange(e)} type=\"file\" />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div className=\" group col-lg-6\">\r\n                                            <div className=\"\">\r\n                                              <label  className=\"form-label\">Bot Name</label>\r\n                                              <input type=\"text\"  name=\"bot_name\" required  ref={(ref) => { this.bot_name = ref; }} onChange={this.handleChange} className=\"form-control\" id=\"inputbotname\"/>\r\n                                            </div>\r\n                                            <div class=\"mt-3\">\r\n                                              <label for=\"inputgender\" class=\"form-label\">Gender</label>\r\n                                              <select id=\"inputgender\" name=\"gender\" required  ref={(ref) => { this.gender = ref; }} onChange={this.handleChange} class=\"form-select\">\r\n                                                  <option disabled selected>Select your option</option>\r\n                                                  <option>Male </option>\r\n                                                  <option>Female</option>\r\n                                              </select>\r\n                                            </div>\r\n                                            <div className=\"mt-3\">\r\n                                                <label for=\"inputFirstname\" className=\"form-label\">Age</label>\r\n                                                <input type=\"integer\" name=\"age\" required className=\"form-control\" id=\"inputfirstname\"  ref={(ref) => { this.age = ref; }} onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                                <div className=\"row row-2\">\r\n                                        \r\n                                </div>\r\n                                {/* <div className=\"title_part\">\r\n                                        <p className=\"col \">Connect platform</p>\r\n                                        <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"connect_platform\">\r\n                                  <div className=\"row col-lg-12\">\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\">facebook</button>\r\n                                      </div>\r\n                                      <div className=\"col-lg-6\">\r\n                                          <button className=\"btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\">line</button>\r\n                                      </div>\r\n                                  </div>\r\n                                </div> */}\r\n\r\n                            {/* {this.renderSwitch(this.state.platform)} */}\r\n                            {/* <Lineform />                                 */}\r\n\r\n                              <div className=\"btn-createbot\">\r\n                                  <button className=\"btn btn-success text-uppercase\" onClick={this.handleUploadImage} type=\"submit\">Create ChatBot</button>\r\n                              </div>\r\n\r\n\r\n                          </form>\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n        </Styles>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Create_bot;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Inventory.js",["308","309","310","311"],"import React, {useState, useEffect, useRef } from \"react\";\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\nimport styled from 'styled-components';\r\nimport Invenlist from '../Components/Inventory/Inven_list';import { Link } from \"react-router-dom\";\r\n\r\nconst Styles = styled.div` \r\n.inventory-page {\r\n    display: flex;\r\n    min-height:92vh;\r\n}\r\n.container {\r\n    margin-bottom: 2%;\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n  }\r\n\r\n  .inven-title{\r\n    padding: 4px;\r\n    width: 100% ;\r\n    background-color: white;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.inventory-body {\r\n    min-height: 70vh;\r\n    margin-top: 1%;\r\n    background-color: white;\r\n    padding: 1%;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.25rem;\r\n    /* border: 1px solid #ececec; */\r\n}\r\n\r\n.inven-showlist{\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n}\r\n\r\n@media (min-width: 500px) {\r\n    .inven-showlist { \r\n        grid-template-columns: repeat(2, 1fr); \r\n        }\r\n}\r\n\r\n@media (min-width: 920px) {\r\n    .inven-showlist { \r\n        grid-template-columns: repeat(3, 1fr); \r\n        }\r\n}\r\n\r\n  @media (min-width: 1200px) {\r\n    .inven-showlist { \r\n        grid-template-columns: repeat(4, 1fr); \r\n    }\r\n  }\r\n\r\n.create-inven{\r\n    padding: 7px 20px;\r\n    margin-bottom: 1%;\r\n    font-size: 12px;\r\n    border-radius: 25px;\r\n    border: 1px solid #0078ff;\r\n    transition: 0.5s;\r\n    background-color: #0078ff;\r\n    color: #fff;\r\n}\r\n\r\n` \r\n\r\nfunction Inventory(props){\r\n    const [inventory,setinventory] = useState([]);\r\n    useEffect(async () => {\r\n        fetch('/inventory/bot/'+props.match.params.bot_id).then(res => res.json().then(data => setinventory(data)))\r\n    },[])\r\n    console.log(inventory)\r\n    const card = inventory.map((inventory) => \r\n        <Invenlist props={inventory}/>\r\n    );\r\n\r\n    return(\r\n        <Styles>\r\n            <div className=\"inventory-page\" >\r\n               <Navbar_member botID = {props.match.params.bot_id} path={\"inventory\"} />\r\n               <div className=\"container\">\r\n                   <div className=\"inven-title\">\r\n                       <h2 className=\"p-2 flex-grow-1 bd-highlight\">Inventories</h2>\r\n                   </div> \r\n                    <div className=\"inventory-body\">        \r\n                        <Link to={\"/bot/:bot_id/add_item\"}>\r\n                            <button className=\"create-inven btn btn-success\" type=\"button\">Create</button>\r\n                        </Link>\r\n                        \r\n                        <div className=\"inven-showlist\">\r\n                            {card}\r\n                        </div>\r\n                    \r\n                    </div> \r\n                </div> \r\n            </div>\r\n            \r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default Inventory;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Connect_bot.js",["312","313","314"],"import React, { useRef, useEffect, useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Facebookform from '../Components/Form/facebookform';\r\nimport Lineform from '../Components/Form/lineform';\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    margin-top: 2%;\r\n  }\r\n \r\n  .con-line{\r\n    margin-left: 50px;\r\n  }\r\n\r\n  .connect_platform button{\r\n    padding: 7px 5px;\r\n    border-radius: 40px;\r\n  }\r\n  \r\n  .model-popup {\r\n    /* position: relative;\r\n    left: 50px;\r\n    right: 150px;\r\n    top: -250px;\r\n    z-index :1000;\r\n    background-color: black; */\r\n    /* background-color:black; */\r\n    /* width: 100%;\r\n    height: 100%; */\r\n  }  \r\n`;\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: blue;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background : rgba(0, 0, 0, 0.2);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  background-color: white;\r\n  padding: 3rem 3rem;\r\n  border-radius: 0.5rem;\r\n  /* width: 400px; */\r\n  /* height: 550px; */\r\n  /* z-index: 1000; */\r\n  /* position: absolute; */\r\n  /* top: calc(100% - 450px); // half of width */\r\n  /* right: calc(100% - 800px); // half of height */\r\n\r\n  /* box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2); */\r\n  /* border-radius: 10px; */\r\n  /* background: #f4f4f4; */\r\n  /* grid-template-columns: 1fr 1fr; */\r\n  /* display: grid; */\r\n  /* top: 50%;\r\n  left: 50%; */\r\n  /* transform: translate(0%, -180%); */\r\n  /* @media (max-width: 960px) {\r\n      background: red;\r\n    } */\r\n`;\r\n\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  width: 25px;\r\n  height: 25px;\r\n  padding: 0;\r\n  z-index: 10;\r\n  \r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* margin-top: 20%; */\r\n`;\r\n\r\n\r\nexport function Connect_bot({ setShowForm, showForm, botID }) {\r\n  const [platform, setplatform] = useState(\"facebook\")\r\n  const renderSwitch = (platform, bot_id) => {\r\n    switch (platform) {\r\n      case 'facebook':\r\n        return <Facebookform props={bot_id} />\r\n      default:\r\n        return <Lineform props={bot_id} />\r\n    }\r\n  }\r\n\r\n//   const popupCenter = ({url, title, w, h}) => {\r\n//     // Fixes dual-screen position                             Most browsers      Firefox\r\n//     const dualScreenLeft = window.screenLeft !==  undefined ? window.screenLeft : window.screenX;\r\n//     const dualScreenTop = window.screenTop !==  undefined   ? window.screenTop  : window.screenY;\r\n\r\n//     const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\r\n//     const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\r\n\r\n//     const systemZoom = width / window.screen.availWidth;\r\n//     const left = (width - w) / 2 / systemZoom + dualScreenLeft\r\n//     const top = (height - h) / 2 / systemZoom + dualScreenTop\r\n//     const newWindow = window.open(url, title, \r\n//       `\r\n//       scrollbars=yes,\r\n//       width=${w / systemZoom}, \r\n//       height=${h / systemZoom}, \r\n//       top=${top}, \r\n//       left=${left}\r\n//       `\r\n//     )\r\n\r\n//     // if (window.focus) newWindow.focus();\r\n// }\r\n\r\n  const modalRef = useRef();\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250\r\n    },\r\n    opacity: showForm ? 1 : 0,\r\n    transform: showForm ? `translateY(0%)` : `translateY(-100%)`\r\n  });\r\n\r\n  const closeModal = e => {\r\n    if (modalRef.current === e.target) {\r\n      setShowForm(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showForm) {\r\n        setShowForm(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowForm, showForm]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  return (\r\n    <Styles>\r\n      <div className=\"model-popup\">\r\n        {showForm ? (\r\n          <Background onClick={closeModal} ref={modalRef}>\r\n            <animated.div style={animation}>\r\n              {/* <Container> */}\r\n                <ModalWrapper showForm={showForm}>\r\n                  <ModalContent>\r\n                    <div>\r\n                      <button className=\"con-facebook btn btn-primary text-uppercase\" onClick={() => setplatform(\"facebook\")} type=\"\"><i class=\"icon-facebook fab fa-facebook fa-2x\"></i></button>\r\n                      <button className=\"con-line btn btn-success btn-line text-uppercase\" onClick={() => setplatform(\"line\")} type=\"\"><i class=\"icon-line fab fa-line fa-2x\"></i></button>\r\n                    </div>\r\n                    {renderSwitch(platform, botID)}\r\n                  </ModalContent>\r\n                  <CloseModalButton\r\n                    aria-label=\"Close modal\"\r\n                    onClick={() => setShowForm(prev => !prev)}\r\n                  />\r\n                </ModalWrapper>\r\n              {/* </Container> */}\r\n            </animated.div>\r\n          </Background>\r\n          \r\n        ) : null}\r\n      </div>\r\n\r\n    </Styles>\r\n  )\r\n}\r\n\r\n{/* <div className=\"container\">\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n                        <div className=\"card card-bot\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"title_part\">\r\n                                    <p className=\"col \">Connect platform</p>\r\n                                    <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"connect_platform\">\r\n                                  <button className=\"con-facebook btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\"><i class=\"icon-facebook fab fa-facebook fa-2x\"></i></button>\r\n                                  <button className=\"con-line btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\"><i class=\"icon-line fab fa-line fa-2x\"></i></button>\r\n                                </div>\r\n                                {this.renderSwitch(this.state.platform)}\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div> */}\r\n\r\n\r\n// class Connect_bot extends React.Component {\r\n//   constructor(props, showForm, setShowForm, showIdbot) {\r\n//     super(props);\r\n//     console.log(props.showForm)\r\n//     this.state = {\r\n//       platform: 'facebook',\r\n//       redirect: false,\r\n//       bot_id: ''\r\n//     };\r\n//     this.handlelineChange = this.handlelineChange.bind(this);\r\n//     this.handlefacebookChange = this.handlefacebookChange.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//     this.modalRef = React.createRef();\r\n//     this.keyPress = this.keyPress(this);\r\n\r\n//   }\r\n\r\n//   renderSwitch(param) {\r\n//     switch (param) {\r\n//       case 'facebook':\r\n//         return <Facebookform props={this.props.match.params} />\r\n//       default:\r\n//         return <Lineform props={this.props.match.params} />\r\n//     }\r\n//   }\r\n\r\n//   handlelineChange(evt) {\r\n//     evt.preventDefault();\r\n//     this.setState({ platform: \"line\" });\r\n//   }\r\n//   handlefacebookChange(evt) {\r\n//     evt.preventDefault();\r\n//     this.setState({ platform: \"facebook\" });\r\n//     console.log(this.state.platform)\r\n//   }\r\n//   handleChange(evt) {\r\n//     this.setState({ [evt.target.name]: evt.target.value });\r\n//     console.log(this.state)\r\n//   }\r\n\r\n//   handleSubmit = (evt) => {\r\n//     evt.preventDefault();\r\n//     // const form = {\r\n//     // }\r\n//     // fetch('/bot/create',{\r\n//     //   method : 'POST',\r\n//     //   headers : {\r\n//     //     \"Access-Control-Allow-Origin\": \"*\",\r\n//     //     'Content-Type':'application/json'\r\n//     //   },\r\n//     //   body : JSON.stringify(form)\r\n//     // }).then( res => res.json()).\r\n//     // then(data => {\r\n//     //   this.setState({ bot_id : data.id})\r\n//     //   this.setState({ redirect: true }) \r\n//     // }\r\n//     // );\r\n//     // .then(data =>\r\n//     // this.props.history.push('/bot/connect_platform'+ data.bot_id +'/line') \r\n//     // )\r\n\r\n//   }\r\n//   // \"/profile/\"+localStorage.getItem('user_id')\r\n\r\n//   render() {\r\n//     console.log(this.showForm)\r\n//     // const modalRef = useRef();\r\n//     const closeModal = e => {\r\n//       if (this.modalRef.current === e.target) {\r\n//         this.setShowForm(false);\r\n//       }\r\n//     };\r\n\r\n//     this.keyPress(\r\n//       e => {\r\n//         if (e.key === 'Escape' && this.showForm) {\r\n//           this.setShowForm(false);\r\n//           console.log('I pressed');\r\n//         }\r\n//       },\r\n//       [this.setShowForm, this.showForm]\r\n//     );\r\n\r\n//     this.componentDidMount(\r\n//       () => {\r\n//         document.addEventListener('keydown', this.keyPress);\r\n//         return () => document.removeEventListener('keydown', this.keyPress);\r\n//       },\r\n//       [this.keyPress]\r\n//     );\r\n\r\n\r\n//     const { redirect, bot_id } = this.state;\r\n//     if (redirect) {\r\n//       return <Redirect to={\"/bot/\" + bot_id + \"/connect\"} />\r\n//     }\r\n//     else {\r\n//       return (\r\n//         <Styles>\r\n//           <div>\r\n//             {this.showForm ? (\r\n//               <Background onClick={closeModal} ref={this.modalRef}>\r\n//                 {/* <animated.div style={animation}> */}\r\n//                 <Container>\r\n//                   <ModalWrapper showForm={this.showForm}>\r\n//                     <ModalContent>\r\n//                       facebook form\r\n//                 </ModalContent>\r\n//                     <CloseModalButton\r\n//                       aria-label=\"Close modal\"\r\n//                       onClick={() => this.setShowForm(prev => !prev)}\r\n//                     />\r\n//                   </ModalWrapper>\r\n//                 </Container>\r\n//                 {/* </animated.div> */}\r\n//               </Background>\r\n//             ) : null}\r\n//           </div>\r\n//           {/* <div className=\"container\">\r\n//                     <div className=\"col-sm-10 col-md-9 col-lg-6 mx-auto\">\r\n//                         <div className=\"card card-bot\">\r\n//                             <div className=\"card-body\">\r\n//                                 <div className=\"title_part\">\r\n//                                     <p className=\"col \">Connect platform</p>\r\n//                                     <div className=\"line\"></div>\r\n//                                 </div>\r\n//                                 <div className=\"connect_platform\">\r\n//                                   <button className=\"con-facebook btn btn-primary text-uppercase\" onClick={this.handlefacebookChange} type=\"\"><i class=\"icon-facebook fab fa-facebook fa-2x\"></i></button>\r\n//                                   <button className=\"con-line btn btn-success btn-line text-uppercase\" onClick={this.handlelineChange} type=\"\"><i class=\"icon-line fab fa-line fa-2x\"></i></button>\r\n//                                 </div>\r\n//                                 {this.renderSwitch(this.state.platform)}\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>   \r\n//                 </div> */}\r\n//         </Styles>\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default withRouter(Connect_bot);         ","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Customer_infomation.js",["315"],"import React from 'react'\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\nimport styled from 'styled-components';\r\nimport Tablecustomer from '../Components/Table/Tablecustomer';\r\n// import Customer_chat from '../Components/Chat/Customer_chat';\r\nconst Styles = styled.div` \r\n.customer-page {\r\n    display: flex;\r\n    min-height: 92vh;\r\n}\r\n.container {\r\n    margin-bottom: 2%;\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n}\r\n.customer-title{\r\n    padding: 4px;\r\n    width: 100% ;\r\n    background-color: white;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n.show-customer{\r\n    min-height: 70vh;\r\n    margin-top: 1%;\r\n    background-color: white;\r\n    padding: 1%;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.25rem;\r\n    /* border: 1px solid #ececec; */\r\n}\r\n` \r\nfunction Customer_infomation(props){\r\n    return(\r\n        <Styles>\r\n            <div className=\"customer-page\">\r\n               <Navbar_member botID = {props.match.params.bot_id} path={\"customer_infomation\"} />\r\n               <div className=\"container\">\r\n                   <div className=\"customer-title\">\r\n                        <h2 className='p-2 flex-grow-1 bd-highlight'>Customer Infomation</h2>\r\n                    </div>\r\n                    \r\n                    <div className=\"show-customer\">\r\n                        <Tablecustomer botID = {props.match.params.bot_id}/>\r\n                    </div>\r\n               </div> \r\n            </div>\r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default Customer_infomation;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\History.js",["316"],"import React from 'react'\r\nimport Navbar_member from '../Components/Navbar/navbar_member';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div` \r\n.history-page {\r\n    display: flex;\r\n    min-height: 92vh;\r\n}\r\n.container {\r\n    margin-bottom: 2%;\r\n    margin-top: 2%;\r\n    overflow:hidden;\r\n}\r\n.title-history{\r\n    padding: 4px;\r\n    width: 100% ;\r\n    background-color: white;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n.show-history{\r\n    min-height: 70vh;\r\n    margin-top: 1%;\r\n    background-color: white;\r\n    padding: 1%;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.25rem;\r\n    /* border: 1px solid #ececec; */\r\n}\r\n` \r\nfunction History(props){\r\n    return(\r\n        <Styles>\r\n            <div className=\"history-page\">\r\n                <Navbar_member botID = {props.match.params.bot_id} path={\"history\"} />\r\n                <div className=\"container\">\r\n                    <div className=\"title-history\">\r\n                        <h2 className='p-2 flex-grow-1 bd-highlight'>History</h2> \r\n                    </div>\r\n                    <div className=\"show-history\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default History;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Add_item.js",["317","318","319","320","321"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\n// import { Multiselect } from 'multiselect-react-dropdown';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Multiselect } from 'react-widgets' \r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    font-family: 'Public Sans', sans-serif;\r\n    margin-top: 2%;\r\n  }\r\n  .card-bot{\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .card-bot .card-title {\r\n    margin-bottom: 2rem;\r\n    font-size: 2rem;\r\n    text-transform : uppercase;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .card-bot .card-body {\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .title_addinv p{\r\n      font-weight: bold;\r\n      margin-top: 5%;\r\n  }\r\n\r\n  .line-inv{\r\n    border: 10;\r\n    height: 4px;\r\n    background-color: black;\r\n    width: 200px;\r\n    margin-bottom: 3%;\r\n  }\r\n\r\n  .form-additem input{\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .form-additem .btn {\r\n    border-radius: 1rem;\r\n    letter-spacing: .1rem;\r\n    font-weight: bold;\r\n    padding: 0.75rem;\r\n    transition: all 0.2s;\r\n    width: 80%;\r\n    align-items: center;\r\n    /* background-color: #; */\r\n  }\r\n  .btn-submitinv{\r\n      margin-top: 3rem;\r\n      text-align : center;\r\n  }\r\n  .form-mt-2 input {\r\n    border-radius: 0.5rem;\r\n  }\r\n  .form-mt-2 select{\r\n    border-radius: 0.5rem;\r\n  }\r\n  .row-2{\r\n    margin-bottom: 2rem;\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  input[type=file]::-webkit-file-upload-button {\r\n    /* border: 2px;\r\n    padding: 0.5rem ;\r\n    border-radius: 0.75rem;\r\n    background-color: #fca311;\r\n    transition: 1s;\r\n    color: white;\r\n    width: 40%;\r\n    margin-top: 30%; */\r\n    margin-top: 10%;\r\n    margin-left: -1%;\r\n    justify-content:center;\r\n    position: absolute;\r\n    padding: 10px 20px;\r\n    background-color: #fca311;\r\n    border: none;\r\n    border-radius: 0.75rem;\r\n    color: white;\r\n    transition: 100ms ease-out;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    max-width: 80%;\r\n    margin-top: 5%;\r\n  }\r\n\r\n  .showimg-newinv{\r\n    text-align: center;\r\n    display: grid;\r\n    /* grid-template-columns: repeat(3, 1fr); */\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-column-gap: 10px;\r\n    margin-bottom: 1%;\r\n  }\r\n\r\n  .showimg-newinv img{\r\n    border: 1px solid #ddd;\r\n    border-radius: 0.75rem;\r\n    height: 150px;\r\n    width: 150px;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  /* .showimg-newinv img:hover{\r\n    z-index: 2;\r\n    width:100%\r\n    -webkit-transition: all 200ms ease-in;\r\n    -webkit-transform: scale(1.5);\r\n    -ms-transition: all 200ms ease-in;\r\n    -ms-transform: scale(1.5);   \r\n    -moz-transition: all 200ms ease-in;\r\n    -moz-transform: scale(1.5);\r\n    transition: all 200ms ease-in;\r\n    transform: scale(1.2);\r\n  } */\r\n\r\n  .upload-newinv{\r\n    /* display:flex; */\r\n    \r\n    background-color: #feecd1;\r\n    border: 2px dashed #fca311;\r\n    border-radius : 0.75rem;\r\n    text-align:center;\r\n    width: 150px;\r\n    height: 150px;\r\n    \r\n  }\r\n\r\n`;\r\nlet file = {}\r\nexport default class Add_item extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      item_name: '',\r\n      type: '',\r\n      amount: '',\r\n      bot_id: '',\r\n      imageURL: '',\r\n      Image: '',\r\n      des: '',\r\n      imagesPreviewUrl: [],\r\n      options: [\"d1\",\"2\"],\r\n      value: [],\r\n      price: '',\r\n    };\r\n    this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    // this.Onend = this.Onend.bind(this);\r\n    this.handleCreate = this.handleCreate.bind(this);\r\n   \r\n  }\r\n  \r\n  handleCreate(name) {\r\n    let { options, value } = this.state;\r\n\r\n\r\n \r\n    this.setState({\r\n      value: [...value, name],  // select new option\r\n      options: [...options, name] // add new option to our dataset\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n    console.log(this.state)\r\n  }\r\n\r\n\r\n\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.value)\r\n    console.log(this.state)\r\n    let i\r\n    for (i = 0; i < e.target.files.length; i++) {\r\n      let reader = new FileReader();\r\n      file[i] = this.uploadInput.files[i]\r\n      if (!file) {\r\n        return\r\n      }\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file: file[i],\r\n          imagesPreviewUrl: [...this.state.imagesPreviewUrl, reader.result]\r\n        });\r\n      }\r\n      console.log(reader.result)\r\n      reader.readAsDataURL(file[i])\r\n\r\n    }\r\n\r\n\r\n  }\r\n  handleUploadImage(ev) {\r\n    ev.preventDefault();\r\n\r\n\r\n    var i\r\n    const data = new FormData();\r\n    var file = []\r\n    for (i = 0; i < this.uploadInput.files.length; i++) {\r\n      \r\n      // file.push(this.uploadInput.files[i])\r\n      \r\n      data.append('file' + [i], this.uploadInput.files[i]);\r\n    }\r\n\r\n    console.log(file)\r\n    // data.append('file', file);\r\n    data.append('item_name', this.item_name.value);\r\n    data.append('type', JSON.stringify(this.state.value));\r\n    data.append('amount', this.amount.value);\r\n    data.append('creator', localStorage.getItem('user_id'))\r\n    data.append('Image', this.state.Image)\r\n    data.append('des', this.des.value);\r\n    data.append('price', this.price.value);\r\n    fetch('/bot/' + this.props.match.params.bot_id + '/additem', {\r\n      method: 'POST',\r\n      // headers : {\r\n      //   \"Access-Control-Allow-Origin\": \"*\",\r\n      //   'Content-Type':'application/json'\r\n      // },\r\n      // body : JSON.stringify(json5),\r\n      body : data\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        this.setState({ imageURL: `/${body.file}` });\r\n        this.setState({ bot_id: data.id })\r\n        this.setState({ redirect: true })\r\n      });\r\n    });\r\n\r\n  }\r\n    componentDidMount ()  {\r\n     var a = []\r\n     var unique = []\r\n      fetch('/bot/'+this.props.match.params.bot_id+'/getitem').then((response) => {\r\n      response.json().then((data) => {console.log(data) \r\n        var i = 0\r\n        for(i = 0 ;i<data.length;i++){\r\n          a.push(...data[i].type)\r\n          unique = [...new Set(a)];\r\n      }\r\n      this.setState ({ options : unique})\r\n    });\r\n    });\r\n\r\n      }\r\n\r\n  render() {\r\n    const { redirect, bot_id } = this.state;\r\n    if (redirect) {\r\n      return <Redirect to={\"/bot_list/\" + localStorage.getItem('user_id')} />\r\n    }\r\n    else {\r\n      let { imagePreviewUrl } = this.state;\r\n      \r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      }\r\n      return (\r\n        <Styles>\r\n          <div className=\"container\">\r\n            <div className=\"col-sm-10 col-md-9 col-lg-7 mx-auto\">\r\n              <div className=\"card card-bot\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title text-center mt-3 mb-4\">Create New Item</h5>\r\n                  <form className=\"form-additem\" onSubmit={this.handleUploadImage}>\r\n                   <div className=\"title_addinv\">\r\n                          <p className=\"col\">Upload image</p>\r\n                          <div className=\"line-inv\"></div>\r\n                    </div> \r\n                    <div className=\"showimg-newinv form-row d-flex justify-content-between\">\r\n                          <div className=\"col showimg-newinv\">\r\n                            <div className=\"col upload-newinv\">\r\n                                <input ref={(ref) => { this.uploadInput = ref; }} onChange={(e) => this._handleImageChange(e)} type=\"file\" multiple />\r\n                            </div>\r\n                              {this.state.imagesPreviewUrl.map((imagesPreviewUrl) => {\r\n                                return <img key={imagesPreviewUrl} alt='previewImg' src={imagesPreviewUrl} />\r\n                              })}\r\n                          </div>  \r\n                    </div>  \r\n                    \r\n                          \r\n                          <div className=\"title_addinv\">\r\n                            <p className=\"col\">Item descriptions</p>\r\n                            <div className=\"line-inv\"></div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                              <div className=\"col\">\r\n                                <label className=\"form-label\">Item name</label>\r\n                                <input type=\"text\" name=\"item_name\" value={this.state.item_name} ref={(ref) => { this.item_name = ref; }} onChange={this.handleChange} className=\"form-control\"required />\r\n                              </div>                        \r\n                              <div className=\"col\">\r\n                                <label className=\"form-label\">Price</label>\r\n                                <input type=\"text\" name=\"price\" value={this.state.price} ref={(ref) => { this.price = ref; }} onChange={this.handleChange} className=\"form-control\"required />\r\n                              </div>\r\n                          </div>\r\n                          {/* <div class=\"mt-3\"  onKeyDown ={((e) => this.Onend(e))}> */}\r\n                          <div className=\"row\">\r\n                            <div class=\"col mt-2\"  >\r\n                              <label for=\"inputtype\" class=\"form-label\" required>Type</label>\r\n                              <Multiselect\r\n                                data={this.state.options}\r\n                                value={this.state.value}\r\n                                allowCreate=\"onFilter\"\r\n                                onCreate={name => this.handleCreate(name)}\r\n                                onChange={value => this.setState({ value })}\r\n                                textField=\"name\"\r\n                              />\r\n                              \r\n                            </div>\r\n                            <div className=\"col mt-2\">\r\n                              <label for=\"inputAmout\" className=\"form-label\" required>Amount</label>\r\n                              <input type=\"integer\" name=\"amount\" className=\"form-control\" id=\"inputfirstname\" value={this.state.amount} ref={(ref) => { this.amount = ref; }} onChange={this.handleChange} />\r\n                            </div>\r\n                         </div> \r\n                          <div className=\"mt-2\">\r\n                            <label for=\"inputDesciption\" className=\"form-label\">Desciption</label>\r\n                            <textarea type=\"integer\" name=\"des\" className=\"form-control\" id=\"inputfirstname\" rows=\"4\" value={this.state.des} ref={(ref) => { this.des = ref; }} onChange={this.handleChange}> </textarea>\r\n                          </div>\r\n                    \r\n                    <hr className=\"mt-5\"></hr>\r\n                    <div className=\"btn-submitinv\">\r\n                      <button className=\"btn btn-success text-uppercase\" onClick={this.handleUploadImage} type=\"submit\">Submit</button>\r\n                    </div>\r\n                  </form>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </Styles>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Product_detail.js",["322","323","324","325"],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Navbar\\real_nav.js",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343"],"import './real_nav.css';\r\nimport { ReactComponent as CaretIcon } from './icons/caret.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport {isLoggedIn, deleteTokens} from '../auth';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n\r\nfunction Nav(){\r\n  if(isLoggedIn()){\r\n    return Loged_in_nav(localStorage.getItem('username'));\r\n  }\r\n  else{\r\n    return Normal_nav();\r\n  }\r\n\r\n  \r\n}\r\n\r\nfunction Normal_nav(){\r\n  return(\r\n    <Navbar_real>\r\n      <Link to=\"#\">\r\n          <div className=\"btn-signup btn-nav\">\r\n              <a className=\"btn\" role=\"button\">Home</a>\r\n          </div>\r\n      </Link>\r\n      <Link to=\"#\">\r\n          <div className=\"btn-signup btn-nav\">\r\n              <a className=\"btn\" role=\"button\">ABOUT</a>\r\n          </div>\r\n      </Link>\r\n      <Link to=\"/register\">\r\n          <div className=\"btn-signup btn-nav\">\r\n              <a className=\"btn\" role=\"button\">Register</a>\r\n          </div>\r\n      </Link>\r\n            <Link to=\"/login\">\r\n          <div className=\"btn-login btn-nav\">\r\n              <a className=\"btn\" role=\"button\">Log in</a>\r\n          </div>\r\n      </Link>\r\n      </Navbar_real>\r\n    )\r\n}\r\n\r\nfunction Loged_in_nav(props) {\r\n  const [main, setMain] = useState(window.location.hash)\r\n  \r\n  return (\r\n    <Navbar_real>\r\n<<<<<<< HEAD\r\n        <div className= {\"show-user \" + (main == \"#main\" ? \"click-show-user\" :\"\")}>\r\n            <a className=\"click\" href={\"/bot_list/\"+ localStorage.getItem('user_id')+\"#main\"}><i class=\"fas fa-user-circle\"></i>{props}</a>\r\n=======\r\n        <div className=\"show-user\" >  \r\n          <a href={\"/bot_list/\"+ localStorage.getItem('user_id')} name=\"validate_user\"><i class=\"fas fa-user\"></i>{props}</a>\r\n>>>>>>> 3736762ecdedf3a05a6616afeb320baa700a545f\r\n        </div>\r\n      \r\n      <NavItem icon={<CaretIcon />}>\r\n        <DropdownMenu></DropdownMenu>\r\n      </NavItem>\r\n    </Navbar_real>\r\n    \r\n  );\r\n}\r\n\r\nfunction Navbar_real(props) {\r\n  return (\r\n    <nav className=\"navbar-real\">\r\n      <a href=\"/\">\r\n          <img href=\"/\" src=\"/images/logo2.PNG\" className=\"nav_brand\"/>\r\n      </a>    \r\n          <ul className=\"navbar-nav-real\">{props.children}</ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction NavItem(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    \r\n    <li className=\"nav-item-real\">\r\n      <a href=\"#\" className=\"icon-button-real\" onClick={() => setOpen(!open)}>\r\n        {props.icon}\r\n      </a>\r\n\r\n      {open && props.children}\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\nfunction DropdownMenu() {\r\n  const [activeMenu, setActiveMenu] = useState('main');\r\n  const [username, setUsername] = useState(localStorage.getItem('user_id'));\r\n  const dropdownRef = useRef(null);\r\n\r\n  function DropdownItem(props) {\r\n    return (\r\n      <a href=\"#\" className=\"menu-item-real\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\r\n        <span className=\"icon-button-real\">{props.leftIcon}</span>\r\n        {props.children}\r\n        <span className=\"icon-right-real\">{props.rightIcon}</span>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"dropdown-real\"  ref={dropdownRef}>\r\n      <CSSTransition\r\n      in={activeMenu === 'main'}\r\n      timeout={500}\r\n      classNames=\"menu-primary\"\r\n      unmountOnExit\r\n      >\r\n        <div className=\"menu-real\">\r\n\r\n           <a onClick={() => {\r\n            window.location.replace(\"/profile/\"+ localStorage.getItem('user_id')+\"/edit\")\r\n          }}>\r\n            <DropdownItem \r\n              leftIcon= {<i class=\"fas fa-user\"></i>}>\r\n                Edit Profile\r\n            </DropdownItem>\r\n          </a>\r\n\r\n          <a onClick={() => {\r\n            window.location.replace(\"/bot_list/\"+ localStorage.getItem('user_id'))\r\n          }}>\r\n            <DropdownItem \r\n              leftIcon= {<i class=\"fas fa-robot\"></i>}>\r\n                Manage Bot\r\n            </DropdownItem>\r\n          </a>\r\n\r\n          <a onClick={() => {\r\n            window.location.replace('/manual')\r\n          }}>\r\n            <DropdownItem \r\n              leftIcon= {<i class=\"fas fa-book-open\"></i>}>        \r\n              Manual\r\n            </DropdownItem>\r\n          </a>\r\n          <a onClick={() => {\r\n            deleteTokens();\r\n            window.location.replace(\"/\")\r\n          }}>\r\n            <DropdownItem \r\n              leftIcon= {<i className=\"fas fa-sign-out-alt signout-icon\" >\r\n                </i>}>\r\n                SIGN OUT\r\n            </DropdownItem>\r\n          </a>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Reducers\\aReducers.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\AddTable\\AddWord.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Chat.js",["344","345","346","347","348","349","350","351","352"],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Navbar\\navbar_member.js",["353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {createStore} from 'redux'\r\nimport tReducers from '../../Reducers/tReducers'\r\nimport {connect} from 'react-redux'\r\nimport { Provider,useSelector,useDispatch} from 'react-redux';\r\n// const store = createStore(tReducers,+  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nconst Styles = styled.div` \r\n  .navbar-c {\r\n    position: relative;\r\n    background-color: #000000;\r\n    transition: width 600ms ease;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    \r\n  }\r\n  \r\n  .navbar-nav-c {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n  \r\n  .nav-item-c {\r\n    width: 100%;\r\n  }\r\n\r\n  .nav-link-c {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 3.25rem;\r\n    color: yellow;\r\n    text-decoration: none;\r\n    filter: grayscale(100%) opacity(0.7);\r\n    transition: 200ms;;\r\n  }\r\n  \r\n  .nav-link-c:hover {\r\n    filter: grayscale(0%) opacity(1);\r\n  }\r\n  \r\n  .nav-link-c i {\r\n    font-size: 18px;\r\n    /* min-width: rem; */\r\n    margin: 0 1rem;\r\n  }\r\n  \r\n  .fa-primary {\r\n    color: #000000;\r\n  }\r\n\r\n  .fa-secondary {\r\n    color: #fca311;\r\n  }\r\n  \r\n  .fa-primary,\r\n  .fa-secondary {\r\n    transition: 200ms;\r\n  }\r\n\r\n  \r\n\r\n  @media only screen and (min-width: 600px) {\r\n    .navbar-c {\r\n      top: 0;\r\n<<<<<<< HEAD\r\n      width:  4rem;\r\n=======\r\n      width:  5rem;\r\n>>>>>>> 3736762ecdedf3a05a6616afeb320baa700a545f\r\n      height: 100%;\r\n    }\r\n    /* .navbar2 {\r\n      top: 0;\r\n      width: 5rem;\r\n      height: 100%;\r\n    } */\r\n  }\r\n\r\n  //////////////////////////////////////////\r\n  .navbar2 {\r\n    position: relative;\r\n    background-color: #000000;\r\n    transition: width 600ms ease;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    /* margin-right : 2rem; */\r\n  }\r\n  \r\n  .navbar-nav2 {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    /* margin-right : 2rem; */\r\n  }\r\n  \r\n  .nav-item2 {\r\n    width: 100%;\r\n  }\r\n  \r\n  .nav-link2 {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 3.25rem;\r\n    color: yellow;\r\n    text-decoration: none;\r\n    filter: grayscale(100%) opacity(0.7);\r\n    transition: 200ms;\r\n  }\r\n  \r\n  .nav-link2:hover {\r\n    filter: grayscale(0%) opacity(1);\r\n    color: white;\r\n  }\r\n  \r\n  \r\n  .nav-link2 i {\r\n    font-size: 18px;\r\n    /* font-weight */\r\n    min-width: 2rem;\r\n    margin: 0 1rem;\r\n  }\r\n  \r\n  \r\n  /* Large screens */\r\n  /* @media only screen and (min-width: 600px) {\r\n    .navbar2 {\r\n      top: 0;\r\n      width: 14rem;\r\n      height: 100%;\r\n    }\r\n  \r\n  } */\r\n  \r\n  .navbar2 span{\r\n    font-weight: bold;\r\n    // margin-left: 15%;\r\n  }\r\n\r\n  .btn-nav{\r\n    margin-top:16px;\r\n    display: flex;\r\n    align-items: center;\r\n    /* color: #fca311; */\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n  }\r\n\r\n  .btn-nav-open i {\r\n    width: 4rem;\r\n    transform: rotate(0deg);\r\n    transition: 500ms;\r\n  }\r\n\r\n  .btn-nav-close {\r\n    color: #fca311;\r\n    text-align: right;\r\n    margin-right: 1.5rem;\r\n    width: 11.5rem;\r\n  }\r\n\r\n  .btn-nav-open i{\r\n    transform:  rotateY(0deg);\r\n    transition: 300ms;\r\n  } \r\n\r\n  .btn-nav-open i:hover {\r\n    transform:  rotateY(150deg);\r\n    /* transition: 500ms; */\r\n  }\r\n\r\n  .btn-nav-close i{\r\n    transform:  rotateY(0deg);\r\n    transition: 300ms;\r\n  }\r\n\r\n  .btn-nav-close i:hover{\r\n    transform:  rotateY(150deg);\r\n    /* transition: 500ms; */\r\n  }\r\n  \r\n.nav-check {\r\n  display: flex;\r\n    align-items: center;\r\n    height: 3.25rem;\r\n    text-decoration: none;\r\n    /* color: #fca311; */\r\n    transition: 200ms;\r\n    border-left: 4px solid #fafafa;\r\n    border-radius: 5%;\r\n    background-color : #242424;\r\n  }\r\n  \r\n.nav-check i {\r\n    color: #fca311;\r\n    /* filter: grayscale(100%) opacity(0.7); */\r\n    font-size: 18px;\r\n    /* font-weight */\r\n    padding: 10%;\r\n    min-width: 2rem;\r\n    margin: 0 0.5rem;\r\n    /* backdrop-filter: blur(10px); */\r\n  }\r\n\r\n  .nav-check-open {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 3.25rem;\r\n    text-decoration: none;\r\n    transition: 200ms;\r\n    background-color : #242424;\r\n    border-radius: 5%;\r\n    border-left: 4px solid #fafafa;\r\n    /* backdrop-filter: opacity(30%); */\r\n    /* backdrop-filter: blur(10px); */\r\n\r\n  }\r\n\r\n  .nav-check-open i {\r\n    font-size: 18px;\r\n    /* font-weight */\r\n    min-width: 2rem;\r\n    margin: 0 1rem;\r\n  }\r\n\r\n  .nav-check-open span {\r\n    color: white;\r\n    /* filter: grayscale(100%) opacity(0.7); */\r\n\r\n  }\r\n\r\n`;\r\n\r\nfunction Navbar_member({ botID, customer_id, path  }) {\r\n  const stetus = useSelector(state => state.tr)\r\n  const [change, setchange] = useState(stetus);\r\n \r\n  // setchange(ichange)\r\n  const dispatch = useDispatch()\r\n  // const stetus = useSelector(state => state.auth)\r\n  const Change = (e) => {\r\n  \r\n    if (change == true) {\r\n      setchange(false);\r\n    } else if (change == false){\r\n      setchange(true);\r\n    }\r\n \r\n \r\n  };\r\n  // const testChange = (e) => {\r\n  //   e.preventDefault();\r\n  // }\r\n  const onSubmit = () =>{\r\n    \r\n    dispatch({\r\n      type : \"testcase\",\r\n      change : change\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Styles>\r\n      {change ? (\r\n        <nav className=\"navbar-c\">\r\n          <ul className=\"navbar-nav-c\">\r\n            <li className=\"btn-nav\">\r\n              <Link onClick={Change} className=\"btn-nav-open\" > \r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"fas fa-angle-double-right\"></i> \r\n                      </div>\r\n                  </div>\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            { path==\"training\" ? ( \r\n              <Link to={\"/bot/\" + botID + \"/training\"} onClick={onSubmit} class=\"nav-check\">\r\n                  <div className=\"fa-group\">\r\n                    <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-robot\"></i>\r\n                    </div>\r\n                  </div>\r\n              </Link> ) : (\r\n                <Link to={\"/bot/\" + botID + \"/training\"} onClick={onSubmit} class=\"nav-link-c\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"far fa-robot\"></i>\r\n                  </div>\r\n                </div>\r\n            </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            { path==\"trained\" ? ( \r\n              <Link to={\"/bot/\" + botID + \"/trained\"}  onClick={onSubmit} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-graduation-cap\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/trained\"}  onClick={onSubmit} class=\"nav-link-c\">\r\n                  <div className=\"fa-group\">\r\n                       <div className=\"fa-secondary\">\r\n                          <i className=\"far fa-graduation-cap\"></i>\r\n                        </div>\r\n                  </div>\r\n              </Link>\r\n              ) \r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            { path==\"group\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/group\"} onClick={onSubmit} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-object-group\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/group\"} onClick={onSubmit} class=\"nav-link-c\">\r\n                    <div className=\"fa-group\">\r\n                        <div className=\"fa-secondary\">\r\n                            <i className=\"far fa-object-group\"></i>\r\n                        </div>\r\n                    </div>\r\n              </Link>\r\n              ) \r\n            }\r\n            </li>\r\n\r\n         \r\n            <li className=\"nav-item-c\">\r\n            { path==\"mapping\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/mapping\"} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-project-diagram\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/mapping\"} class=\"nav-link-c\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"far fa-project-diagram\"></i>\r\n                      </div>\r\n                  </div>\r\n                </Link>\r\n              )\r\n            }\r\n            </li>\r\n            \r\n            \r\n            <li className=\"nav-item-c\">\r\n            { path==\"history\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/history\"} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-history\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/history\"} class=\"nav-link-c\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"far fa-history\"></i>\r\n                      </div>\r\n                  </div>\r\n                </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n\r\n            <li className=\"nav-item-c\">\r\n            { path==\"inventory\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/inventory\"} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-box-open\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/inventory\"} class=\"nav-link-c\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                        <i className=\"far fa-box-open\"></i>\r\n                      </div>\r\n                  </div>\r\n                </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            { path==\"customer_infomation\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/customer_infomation\"} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-address-book\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/customer_infomation\"} class=\"nav-link-c\">\r\n               <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"far fa-address-book\"></i>\r\n                  </div>\r\n                </div>\r\n                </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item-c\">\r\n            { path==\"chat\" ? (\r\n              <Link to={\"/chat/\" + botID + \"/live_chat/main\"} class=\"nav-check\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                  <i class=\"fas fa-comments-alt\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link> ) : (\r\n              <Link to={\"/chat/\" + botID + \"/live_chat/main\"} class=\"nav-link-c\">\r\n               <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"far fa-comments-alt\"></i>\r\n                  </div>\r\n                </div>\r\n                </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n\r\n      ) : (\r\n\r\n        <nav className=\"navbar2\">\r\n          <ul className=\"navbar-nav2\">\r\n            <li className=\"btn-nav\">\r\n              \r\n              <Link onClick={Change} className=\"btn-nav-close\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-angle-double-left\"></i>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"training\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/training\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-robot\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Training bot</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/training\"} onClick={onSubmit} class=\"nav-link2\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"far fa-robot\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span className=\"link-text\">Training bot</span>\r\n              </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            \r\n            <li className=\"nav-item2\">\r\n            { path==\"trained\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/trained\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-graduation-cap\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Trained</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/trained\"}  onClick={onSubmit} class=\"nav-link2\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"far fa-graduation-cap\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span className=\"link-text\">Trained</span>\r\n              </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"group\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/group\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-object-group\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Group</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/group\"} onClick={onSubmit} class=\"nav-link2\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"far fa-object-group\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Group</span>\r\n              </Link> \r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"mapping\" ? (  \r\n              <Link to={\"/bot/\" + botID + \"/mapping\"} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-project-diagram\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Mapping</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/mapping\"} class=\"nav-link2\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"far fa-project-diagram\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Mapping</span>\r\n              </Link>  \r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"history\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/history\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-history\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">History</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/history\"} onClick={onSubmit} class=\"nav-link2\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"far fa-history\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span className=\"link-text\">History</span>\r\n              </Link>\r\n              )\r\n            }  \r\n            </li>\r\n            \r\n            <li className=\"nav-item2\">\r\n            { path==\"inventory\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/inventory\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-box-open\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Inventory</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/inventory\"} onClick={onSubmit} class=\"nav-link2\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                      <i className=\"far fa-box-open\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span className=\"link-text\">Inventory</span>\r\n              </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"customer_infomation\" ? (\r\n              <Link to={\"/bot/\" + botID + \"/customer_infomation\"} onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i className=\"fas fa-address-book\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Customer <br></br> infomation</span>\r\n              </Link> ) : (\r\n              <Link to={\"/bot/\" + botID + \"/customer_infomation\"} onClick={onSubmit} class=\"nav-link2\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                          <i className=\"far fa-address-book\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span className=\"link-text\">Customer <br></br> infomation</span>\r\n              </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n            { path==\"chat\" ? (\r\n              <Link to={\"/chat/\" + botID + \"/live_chat/main\" } onClick={onSubmit} class=\"nav-check-open\">\r\n                <div className=\"fa-group\">\r\n                  <div className=\"fa-secondary\">\r\n                    <i class=\"fas fa-comments-alt\"></i>\r\n                  </div>\r\n                </div>\r\n                <span className=\"link-text\">Chat</span>\r\n              </Link> ) : (\r\n              <Link to={\"/chat/\" + botID + \"/live_chat/main\"} onClick={onSubmit} class=\"nav-link2\">\r\n                  <div className=\"fa-group\">\r\n                      <div className=\"fa-secondary\">\r\n                      <i class=\"far fa-comments-alt\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span className=\"link-text\">Chat</span>\r\n              </Link>\r\n              )\r\n            }\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n      )}\r\n\r\n\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default connect()(Navbar_member);\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\Table.js",["374","375","376","377","378","379","380","381","382","383"],"import React, { useState, useEffect, useHistory } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination, useRowSelect } from 'react-table'\r\nimport { matchSorter } from 'match-sorter'\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AddWord } from \"./AddTable/AddWord\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nconst Styles = styled.div`\r\n  table {\r\n    /* font-family: 'Roboto',sans-serif; */\r\n    margin: 10px 0;\r\n    font-size: 1em;\r\n    text-align: center;\r\n    border: 1px solid #efeff5; \r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    th{\r\n      margin: 0;\r\n      /* padding: 12px 15px; */\r\n      border: 1px solid #efeff5;\r\n      background-color: #393939;\r\n      color: white;\r\n    }\r\n    td {\r\n      font-family: 'Public Sans', sans-serif;\r\n      margin: 0;\r\n      padding: 12px 15px;\r\n      border: 1px solid #efeff5;\r\n      font-size: 16px;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n      input {\r\n        font-size: 0.9rem;\r\n        padding: 0;\r\n        margin: 0;\r\n        border: 0;\r\n      }\r\n    }\r\n  .trained-Word{\r\n    background-color: transparent;\r\n    border-radius: 25px;\r\n    padding-left:15px;\r\n  }\r\n}\r\n.table tbody tr:nth-of-type(even){\r\n        background-color: #fafafc;\r\n    }\r\n.button-trained-word .buttondeleteWord{\r\n    padding: 7px 20px !important;\r\n    font-size: 12px !important;\r\n    border-radius: 25px !important;\r\n    border: 1px solid #CD5C5C ;\r\n    transition: 0.5s;\r\n    background-color: #CD5C5C;\r\n    color: #fff ;\r\n    margin-left: 1%;\r\n  }\r\n  .button-trained-word .buttondeleteWord:hover{\r\n    color: #000;\r\n  }\r\n  .buttonaddWord{\r\n  padding: 7px 15px;\r\n  font-size: 12px;\r\n  border-radius: 25px;\r\n  border: 1px solid #0078ff;\r\n  transition: 0.5s;\r\n  background-color: #0078ff;\r\n  color: #fff;\r\n}\r\n.buttonaddWord:hover{\r\n  color: #000;\r\n}\r\n.pagination{\r\n  justify-content:space-between;\r\n  width:100%;\r\n  margin-bottom: 0;\r\n}\r\n.parginate-text{\r\n  display:inline;\r\n  padding-top: 7px;\r\n  margin-right: 1%;\r\n  margin-left: 1%;\r\n}\r\n\r\n.parginate-arrow{\r\n  text-align:right;\r\n}\r\n\r\n.pagination button{\r\n  border-radius: 15px;\r\n  width: 35px;\r\n  height: 35px;\r\n  background-color: transparent;\r\n  margin-left: 0.5%;\r\n  border: none;\r\n}\r\n.pagination button:hover{\r\n  border-radius: 30px;\r\n  background-color: #fca311;\r\n  color: #000;\r\n}\r\n.searchBox{\r\n  width: 190px;\r\n  height: 30px;\r\n  border-radius: 1rem;\r\n  border: .5px solid #A9A9A9;\r\n}\r\ninput::placeholder{\r\n  padding-left:15px;\r\n}\r\n.button-trained-word .SearchBar{\r\n  position:relative;\r\n  float: right;\r\n}\r\n.select-pagesize {\r\n  padding: 0 1%;\r\n}\r\n`;\r\n\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\n\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n\r\n  const count = preGlobalFilteredRows.length\r\n\r\n  const [value, setValue] = React.useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n\r\n  return (\r\n    <span>\r\n      Search:{' '}\r\n      <input\r\n        className=\"searchBox\"\r\n        value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={` ${count} records...`}\r\n        style={{\r\n          fontSize: '0.8rem',\r\n          // marginLeft: '1rem'\r\n        }}\r\n      />\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n\r\n  }\r\n\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value)\r\n    console.log(\"test\")\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n\r\n\r\n  return <input className=\"trained-Word\" value={value} onChange={onChange} onBlur={onBlur} />\r\n}\r\n\r\nconst defaultColumn = {\r\n  Cell: EditableCell\r\n}\r\n\r\n\r\nfunction TableShow({ columns, data, updateMyData, skipPageReset, delete_trained ,botID }) {\r\n  const Ondelete = (e) => {\r\n    delete_trained(e)\r\n  }\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n              .toLowerCase()\r\n              .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumnFilter = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n  const [showWord, setShowWord] = useState(false);\r\n  // let history = useHistory();\r\n  const openWord = () => {\r\n    setShowWord(prev => !prev);\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    selectedFlatRows,\r\n    state: { pageIndex, pageSize, selectedRowIds },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      defaultColumnFilter, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      autoResetPage: !skipPageReset,\r\n\r\n      updateMyData,\r\n\r\n    },\r\n\r\n    useFilters, // useFilters!\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n\r\n    hooks => {\r\n      hooks.visibleColumns.push(columns => [\r\n\r\n        {\r\n          id: 'selection',\r\n          Header: ({ getToggleAllPageRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\r\n\r\n            </div>\r\n          ),\r\n\r\n          Cell: ({ row }) => (\r\n\r\n            <div >\r\n\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n\r\n\r\n            </div>\r\n          ),\r\n\r\n        },\r\n        ...columns,\r\n\r\n      ])\r\n    }\r\n\r\n  )\r\n\r\n  const handleClick =()=> {\r\n    // history.push('/bot/'+botID+'/trained')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"button-trained-word\">\r\n          <Button className='buttonaddWord' onClick={openWord}>Add Word</Button>\r\n          <button className=\"buttondeleteWord\" variant=\"danger\" onClick={() => Ondelete(selectedFlatRows)}>Delete</button>\r\n          <div className='SearchBar'>\r\n          <GlobalFilter\r\n            preGlobalFilteredRows={preGlobalFilteredRows}\r\n            globalFilter={state.globalFilter}\r\n            setGlobalFilter={setGlobalFilter}\r\n        />\r\n        </div>\r\n          <AddWord showWord={showWord} setShowWord={setShowWord} botID = {botID}/>\r\n        </div>\r\n\r\n        \r\n        \r\n        \r\n        <table {...getTableProps()} className=\"table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render('Header')}\r\n\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n\r\n            ))}\r\n            {/* <tr>\r\n              <th\r\n                colSpan={visibleColumns.length}\r\n                style={{\r\n                  textAlign: 'right',\r\n                }}\r\n              >\r\n              </th>\r\n            </tr> */}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"pagination\">\r\n        <div className=\"parginate-tex col\">\r\n              <span >\r\n                Page{' '}\r\n                <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n                </strong>{' '}\r\n              </span>\r\n              <span>\r\n                {' '}\r\n              </span>{' '}\r\n              <select className=\"select-pagesize\"\r\n                value={pageSize}\r\n                onChange={e => {\r\n                  setPageSize(Number(e.target.value))\r\n                }}\r\n              >\r\n                {[10, 25, 50].map(pageSize => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    Show {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n          </div>\r\n          <div className=\"parginate-arrow col\">\r\n                <button  onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                  {<i class=\"fad fa-chevron-double-left\"></i>}\r\n                </button>{' '}\r\n                <button  onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                  {<i class=\"fad fa-chevron-left\"></i>}\r\n                </button>{' '}\r\n                <button  onClick={() => nextPage()} disabled={!canNextPage}>\r\n                  {<i class=\"fas fa-chevron-right\"></i>}\r\n                </button>{' '}\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                  {<i class=\"fas fa-chevron-double-right\"></i>}\r\n                </button>{' '}\r\n          </div>\r\n\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Table({ botID, delete_trained, add_data }) {\r\n  const [TableState, setTableState] = useState([]);\r\n\r\n\r\n\r\n  const [showWord, setShowWord] = useState(false);\r\n\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Word',\r\n        accessor: 'Word', // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: 'ReplyWord',\r\n        accessor: 'ReplyWord',\r\n        filter: 'fuzzyText',\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const [originalData] = React.useState(TableState)\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  const updateMyData = (rowIndex, columnId, value) => {\r\n    setTableState(old =>\r\n      old.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          const editData = {\r\n            \"value\": value,\r\n            \"type\": columnId,\r\n            \"data\": row\r\n          }\r\n          if (row.Word != value && row.ReplyWord != value) {\r\n            fetch('/train_bot/edit/trained/', {\r\n              method: 'POST',\r\n              headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(editData)\r\n            })\r\n          }\r\n          return {\r\n            ...old[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      })\r\n    )\r\n  }\r\n\r\n  const openWord = () => {\r\n    setShowWord(prev => !prev);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSkipPageReset(false)\r\n    fetch('/train_bot/' + botID + '/trained')\r\n      .then(res => res.json().then(data => {\r\n        setTableState(\r\n          data.map(d => {\r\n\r\n            return {\r\n              select: false,\r\n              id: d._id.$oid,\r\n              Word: d.question,\r\n              ReplyWord: d.answer\r\n            };\r\n          })\r\n        );\r\n      }))\r\n\r\n  }\r\n\r\n    , []);\r\n\r\n\r\n  const resetData = () => setTableState(originalData)\r\n\r\n  return (\r\n\r\n\r\n    <Styles>\r\n      <TableShow\r\n        columns={columns}\r\n        data={TableState}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n        delete_trained={delete_trained}\r\n        botID={botID}\r\n      />\r\n\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Table;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\delete_modal.js",["384","385","386","387","388"],"import React,{ useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n  function rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n  }\r\n\r\n  function getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\nexport default function DeleteModal({dataID,delete_trained,add_data, dataType}){\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    \r\n    const deleteData = (ID, dataType) => {\r\n        fetch('/'+dataType+'/'+ID+'/delete')\r\n    }\r\n    \r\n    \r\n\r\n    const button = (dataType) =>{\r\n        if(dataType == 'bot'){\r\n            return (\r\n                <a href=\"#\" onClick={handleOpen} ><i class=\"fas fa-trash\"></i> Delete</a>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <button className=\"btn btn-danger\" onClick={handleOpen} type=\"button\">\r\n                    Delete\r\n                </button>\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    function onKeyDown(event) {\r\n      if (event.key === 'Enter' ) {\r\n        delete_trained(dataID)\r\n      }\r\n    }\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            Do you want to delete this data?\r\n            <div>\r\n                <button className=\"btn btn-success\" onKeyDown={onKeyDown} onClick={()=>delete_trained(dataID)} type=\"button\">\r\n                    Yes\r\n                </button>\r\n                <button className=\"btn btn-danger\" onClick={handleClose} type=\"button\">\r\n                    No\r\n                </button>\r\n            </div>\r\n        </div>\r\n      );\r\n    return (\r\n        <>\r\n            {button(dataType)}\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n           {body} \r\n          </Modal>\r\n        </>\r\n    );\r\n}","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablecon.js",["389","390","391","392","393","394","395","396","397"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination, useRowSelect } from 'react-table'\r\nimport { matchSorter } from 'match-sorter'\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AddWord } from \"./AddTable/AddWord\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n  table {\r\n    font-family: 'Roboto',sans-serif;\r\n    margin: 10px 0;\r\n    font-size: 1em;\r\n    text-align: center;\r\n    border: 1px solid #efeff5;\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th {\r\n      margin: 0;\r\n      /* padding: 12px 15px; */\r\n      border: 1px solid #efeff5;\r\n      background-color: #393939;\r\n      color: white;\r\n    }\r\n    td {\r\n      font-family: 'Public Sans', sans-serif;\r\n      margin: 0;\r\n      padding: 12px 15px;\r\n      border: 1px solid #efeff5;\r\n      font-size: 16px;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n\r\n      input {\r\n        font-size: 0.9rem;\r\n        padding: 0;\r\n        margin: 0;\r\n        border: 0;\r\n        /* text-align: center; */\r\n      }\r\n    }\r\n\r\n  .trained-Word{\r\n    background-color: transparent;\r\n    border-radius: 25px;\r\n    padding-left:15px;\r\n  }\r\n\r\n}\r\n\r\n.table tbody tr:nth-of-type(even){\r\n        background-color: #fafafc;\r\n    }\r\n\r\n.button-trained-word .buttondeleteWord{\r\n    padding: 7px 20px !important;\r\n    font-size: 12px !important;\r\n    border-radius: 25px !important;\r\n    border: 1px solid #CD5C5C ;\r\n    transition: 0.5s;\r\n    background-color: #CD5C5C;\r\n    color: #fff ;\r\n    margin-left: 1%;\r\n  }\r\n\r\n\r\n  .button-trained-word .buttondeleteWord:hover{\r\n    color: #000;\r\n  }\r\n\r\n  .buttonaddWord{\r\n  padding: 7px 15px;\r\n  font-size: 12px;\r\n  border-radius: 25px;\r\n  border: 1px solid #0078ff;\r\n  transition: 0.5s;\r\n  background-color: #0078ff;\r\n  color: #fff;\r\n}\r\n\r\n.buttonaddWord:hover{\r\n  color: #000;\r\n}\r\n\r\n.pagination{\r\n  justify-content:space-between;\r\n  width:100%;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.pagination .parginate-text{\r\n  display:inline;\r\n  padding-top: 7px;\r\n  margin-right: 1%;\r\n  margin-left: 1%;\r\n}\r\n\r\n.parginate-arrow{\r\n  text-align:right;\r\n}\r\n\r\n.parginate-arrow  button{\r\n  border-radius: 15px;\r\n  width: 35px;\r\n  height: 35px;\r\n  background-color: transparent;\r\n  margin-left: 0.5%;\r\n  border: none;\r\n}\r\n\r\n.parginate-arrow  button:hover{\r\n  border-radius: 30px;\r\n  background-color: #fca311;\r\n  color: #000;\r\n}\r\n\r\n\r\n.searchBox{\r\n  width: 190px;\r\n  height: 30px;\r\n  border-radius: 1rem;\r\n  border: 0.5px solid #A9A9A9;\r\n\r\n}\r\n\r\ninput::placeholder{\r\n  padding-left:15px;\r\n\r\n}\r\n\r\n.button-trained-word .SearchBar{\r\n  float: right;\r\n}\r\n\r\n.select-pagesize {\r\n  padding: 0 1%;\r\n}\r\n`;\r\n\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\n\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n\r\n  const count = preGlobalFilteredRows.length\r\n\r\n  const [value, setValue] = React.useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n\r\n  return (\r\n    <span>\r\n      Search:{' '}\r\n      <input\r\n        className=\"searchBox\"\r\n        value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={` ${count} records...`}\r\n        style={{\r\n          fontSize: '0.8rem',\r\n          // marginLeft: '1rem'\r\n        }}\r\n      />\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n\r\n  }\r\n\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value)\r\n    console.log(\"test\")\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n\r\n\r\n  return <input className=\"trained-Word\" value={value} onChange={onChange} onBlur={onBlur} />\r\n}\r\n\r\nconst defaultColumn = {\r\n  Cell: EditableCell\r\n}\r\n\r\n\r\nfunction TableShow({ columns, data, updateMyData, skipPageReset, delete_trained, botID }) {\r\n  \r\n  const Ondelete = (e) => {\r\n    delete_trained(e)\r\n    \r\n  }\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n              .toLowerCase()\r\n              .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumnFilter = React.useMemo(\r\n    () => ({\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n  const [showWord, setShowWord] = useState(false);\r\n  const openWord = () => {\r\n    setShowWord(prev => !prev);\r\n  }\r\n  \r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    selectedFlatRows,\r\n    state: { pageIndex, pageSize, selectedRowIds },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      defaultColumnFilter, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      autoResetPage: !skipPageReset,\r\n\r\n      updateMyData,\r\n\r\n    },\r\n\r\n    useFilters, // useFilters!\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n\r\n    hooks => {\r\n      hooks.visibleColumns.push(columns => [\r\n\r\n        {\r\n          id: 'selection',\r\n          Header: ({ getToggleAllPageRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\r\n\r\n            </div>\r\n          ),\r\n\r\n          Cell: ({ row }) => (\r\n\r\n            <div >\r\n\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n\r\n\r\n            </div>\r\n          ),\r\n\r\n        },\r\n        ...columns,\r\n\r\n      ])\r\n    }\r\n\r\n  )\r\n  console.log(selectedFlatRows)\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"button-trained-word\">\r\n          <Button className='buttonaddWord' onClick={openWord}>Add Word</Button>\r\n          <button className=\"buttondeleteWord\" variant=\"danger\" onClick={() => Ondelete(selectedFlatRows)}>Delete</button>\r\n          <div className='SearchBar'>\r\n            <GlobalFilter\r\n              preGlobalFilteredRows={preGlobalFilteredRows}\r\n              globalFilter={state.globalFilter}\r\n              setGlobalFilter={setGlobalFilter}\r\n            />\r\n          </div>\r\n          <AddWord showWord={showWord} setShowWord={setShowWord} botID={botID} />\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <table {...getTableProps()} className=\"table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render('Header')}\r\n\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n\r\n            ))}\r\n            {/* <tr>\r\n              <th\r\n                colSpan={visibleColumns.length}\r\n                style={{\r\n                  textAlign: 'right',\r\n                }}\r\n              >\r\n\r\n              </th>\r\n            </tr> */}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination row\">\r\n          <div className=\"parginate-tex col\">\r\n              <span >\r\n                Page{' '}\r\n                <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n                </strong>{' '}\r\n              </span>\r\n              <span>\r\n                {' '}\r\n              </span>{' '}\r\n              <select className=\"select-pagesize\"\r\n                value={pageSize}\r\n                onChange={e => {\r\n                  setPageSize(Number(e.target.value))\r\n                }}\r\n              >\r\n                {[10, 25, 50].map(pageSize => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    Show {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n          </div>\r\n          <div className=\"parginate-arrow col\">\r\n                <button  onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                  {<i class=\"fad fa-chevron-double-left\"></i>}\r\n                </button>{' '}\r\n                <button  onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                  {<i class=\"fad fa-chevron-left\"></i>}\r\n                </button>{' '}\r\n                <button  onClick={() => nextPage()} disabled={!canNextPage}>\r\n                  {<i class=\"fas fa-chevron-right\"></i>}\r\n                </button>{' '}\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                  {<i class=\"fas fa-chevron-double-right\"></i>}\r\n                </button>{' '}\r\n          </div>\r\n\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Tablecon({ botID, delete_trained, add_data }) {\r\n  const [TableconState, setTableconState] = useState([]);\r\n\r\n                                                          \r\n\r\n  const [showWord, setShowWord] = useState(false);\r\n\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Word',\r\n        accessor: 'Word', // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: 'ReplyWord',\r\n        accessor: 'ReplyWord',\r\n        filter: 'fuzzyText',\r\n      },\r\n      {\r\n        Header: 'Confidence',\r\n        accessor: 'Confidence',\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const [originalData] = React.useState(TableconState)\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  const updateMyData = (rowIndex, columnId, value) => {\r\n    setTableconState(old =>\r\n      old.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          const editData = {\r\n            \"value\": value,\r\n            \"type\": columnId,\r\n            \"data\": row\r\n          }\r\n          if (row.Word != value && row.ReplyWord != value) {\r\n            fetch('/train_bot/edit/trained/', {\r\n              method: 'POST',\r\n              headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(editData)\r\n            })\r\n          }\r\n          return {\r\n            ...old[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      })\r\n    )\r\n  }\r\n\r\n  const openWord = () => {\r\n    setShowWord(prev => !prev);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('/train_bot/' + botID + '/training')\r\n      .then(res => res.json().then(data => {\r\n        setTableconState(\r\n          data.map(d => {\r\n            return {\r\n              select: false,\r\n              id: d._id.$oid,\r\n              Word: d.question,\r\n              ReplyWord: d.answer,\r\n              Confidence: d.confident\r\n            };\r\n          })\r\n          \r\n\r\n        );\r\n\r\n      }))\r\n\r\n  }, []);\r\n\r\n\r\n  const resetData = () => setTableconState(originalData)\r\n  console.log(TableconState)\r\n  return (\r\n    <Styles>\r\n      <TableShow\r\n        columns={columns}\r\n        data={TableconState}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n        delete_trained={delete_trained}\r\n        botID={botID}\r\n      />\r\n\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Tablecon;\r\n\r\n\r\n// useEffect(() => {\r\n//   fetch('/train_bot/'+botID+'/training')\r\n//   .then(res => res.json().then(data => {\r\n//     setTableconState(\r\n//       data.map(d => {\r\n//         console.log(d)\r\n//         return {\r\n//           select: false,\r\n//           id: d._id.$oid,\r\n//           Word: d.question,\r\n//           ReplyWord: d.answer,\r\n//           Confidence : d.confident\r\n//         };\r\n//       })\r\n\r\n\r\n//     );\r\n\r\n//   }))\r\n\r\n// }, []);\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablemap.js",["398","399","400","401","402","403","404","405","406","407","408"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination, useRowSelect } from 'react-table'\r\nimport { matchSorter } from 'match-sorter'\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n  table {\r\n    font-family: 'Roboto',sans-serif;\r\n    margin: 10px 0;\r\n    font-size: 1em;\r\n    text-align: center;\r\n    border: 1px solid #efeff5;\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th{\r\n      margin: 0;\r\n      /* padding: 12px 15px; */\r\n      border: 1px solid #efeff5;\r\n      background-color: #393939;\r\n      color: white;\r\n    }\r\n    td {\r\n      font-family: 'Public Sans', sans-serif;\r\n      margin: 0;\r\n      padding: 12px 15px;\r\n      border: 1px solid #efeff5;\r\n      font-size: 16px;\r\n      \r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n\r\n      input {\r\n        font-size: 0.9rem;\r\n        padding: 0;\r\n        margin: 0;\r\n        border: 0;\r\n      }\r\n    }\r\n\r\n  .trained-Word{\r\n    background-color: transparent;\r\n    border-radius: 25px;\r\n    padding-left:15px;\r\n  }\r\n\r\n}\r\n\r\n.table tbody tr:nth-of-type(even){\r\n        background-color: #fafafc\r\n    }\r\n\r\n.button-trained-word .buttondeleteWord{\r\n    padding: 7px 20px !important;\r\n    font-size: 12px !important;\r\n    border-radius: 25px !important;\r\n    border: 1px solid #CD5C5C ;\r\n    transition: 0.5s;\r\n    background-color: #CD5C5C;\r\n    color: #fff ;\r\n    margin-left: 1%;\r\n  }\r\n\r\n\r\n  .button-trained-word .buttondeleteWord:hover{\r\n    color: #000;\r\n  }\r\n\r\n  .buttonaddMapping{\r\n  padding: 7px 15px;\r\n  font-size: 12px;\r\n  border-radius: 25px;\r\n  border: 1px solid #0078ff;\r\n  transition: 0.5s;\r\n  background-color: #0078ff;\r\n  color: #fff;\r\n}\r\n\r\n.buttonaddMapping:hover{\r\n  color: #000;\r\n}\r\n\r\n.pagination{\r\n  justify-content:space-between;\r\n  width:100%;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.parginate-text{\r\n  display:inline;\r\n  padding-top: 7px;\r\n  margin-right: 1%;\r\n  margin-left: 1%;\r\n}\r\n\r\n.parginate-arrow{\r\n  text-align:right;\r\n}\r\n.pagination button{\r\n  border-radius: 15px;\r\n  width: 35px;\r\n  height: 35px;\r\n  background-color: transparent;\r\n  margin-left: 0.5%;\r\n  border: none;\r\n}\r\n\r\n.pagination button:hover{\r\n  border-radius: 30px;\r\n  background-color: #fca311;\r\n  color: #000;\r\n}\r\n\r\n.searchBox{\r\n  width: 190px;\r\n  height: 30px;\r\n  border-radius: 25px;\r\n  border: .5px solid #A9A9A9;\r\n\r\n}\r\n\r\ninput::placeholder{\r\n  padding-left:15px;\r\n\r\n}\r\n\r\n.button-trained-word .SearchBar{\r\n  position:relative;\r\n  float: right;\r\n}\r\n\r\n.select-pagesize {\r\n  padding: 0 1%;\r\n}\r\n  \r\n`;\r\n\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\n\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n\r\n  const count = preGlobalFilteredRows.length\r\n\r\n  const [value, setValue] = React.useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n\r\n  return (\r\n    <span>\r\n      Search:{' '}\r\n      <input\r\n        className=\"searchBox\"\r\n        value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={` ${count} records...`}\r\n        style={{\r\n          fontSize: '0.8rem',\r\n          // marginLeft: '1rem'\r\n        }}\r\n      />\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n\r\n  }\r\n\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value)\r\n    console.log(\"test\")\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n\r\n\r\n  return <input className=\"trained-Word\" value={value} onChange={onChange} onBlur={onBlur} />\r\n}\r\n\r\nconst defaultColumn = {\r\n  Cell: EditableCell\r\n}\r\n\r\n\r\nfunction TableShow({ columns, data, updateMyData, skipPageReset, delete_trained, botID }) {\r\n  \r\n  const Ondelete = (e) => {\r\n    delete_trained(e)\r\n    \r\n  }\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n              .toLowerCase()\r\n              .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumnFilter = React.useMemo(\r\n    () => ({\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n  const [showWord, setShowWord] = useState(false);\r\n  const openWord = () => {\r\n    setShowWord(prev => !prev);\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    selectedFlatRows,\r\n    state: { pageIndex, pageSize, selectedRowIds },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      defaultColumnFilter, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      autoResetPage: !skipPageReset,\r\n\r\n      updateMyData,\r\n\r\n    },\r\n\r\n    useFilters, // useFilters!\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n\r\n    hooks => {\r\n      hooks.visibleColumns.push(columns => [\r\n\r\n        {\r\n          id: 'selection',\r\n          Header: ({ getToggleAllPageRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\r\n\r\n            </div>\r\n          ),\r\n\r\n          Cell: ({ row }) => (\r\n\r\n            <div >\r\n\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n\r\n\r\n            </div>\r\n          ),\r\n\r\n        },\r\n        ...columns,\r\n\r\n      ])\r\n    }\r\n\r\n  )\r\n  console.log(selectedFlatRows)\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"button-trained-word\">\r\n          {console.log(botID)}\r\n          <Link to ={'/bot/'+botID+'/mapping/create'} ><Button className='buttonaddMapping' >Create Mapping</Button></Link>\r\n          <button className=\"buttondeleteWord\" variant=\"danger\" onClick={() => Ondelete(selectedFlatRows)}>Delete</button>\r\n          <div className='SearchBar'>\r\n            <GlobalFilter\r\n              preGlobalFilteredRows={preGlobalFilteredRows}\r\n              globalFilter={state.globalFilter}\r\n              setGlobalFilter={setGlobalFilter}\r\n            />\r\n          </div>\r\n         \r\n        </div>\r\n\r\n\r\n\r\n\r\n        <table {...getTableProps()} className=\"table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render('Header')}\r\n\r\n                  </th>\r\n                 \r\n                ))} <th>Link</th>\r\n              </tr>\r\n\r\n            ))}\r\n            {/* <tr>\r\n              <th\r\n                colSpan={visibleColumns.length}\r\n                style={{\r\n                  textAlign: 'right',\r\n                }}\r\n              >\r\n\r\n              </th>\r\n            </tr> */}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                   \r\n                  {row.cells.map(cell => {\r\n                    \r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')} </td>\r\n                    \r\n                    \r\n                  })}\r\n                 <td><Link to ={'/bot/'+botID+'/mapping/create'} ><i className=\"far fa-edit\" ></i></Link></td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"pagination\">\r\n        <div className=\"parginate-tex col\">\r\n              <span >\r\n                Page{' '}\r\n                <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n                </strong>{' '}\r\n              </span>\r\n              <span>\r\n                {' '}\r\n              </span>{' '}\r\n              <select className=\"select-pagesize\"\r\n                value={pageSize}\r\n                onChange={e => {\r\n                  setPageSize(Number(e.target.value))\r\n                }}\r\n              >\r\n                {[10, 25, 50].map(pageSize => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    Show {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n          </div>\r\n          <div className=\"parginate-arrow col\">\r\n                <button  onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                  {<i class=\"fad fa-chevron-double-left\"></i>}\r\n                </button>{' '}\r\n                <button  onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                  {<i class=\"fad fa-chevron-left\"></i>}\r\n                </button>{' '}\r\n                <button  onClick={() => nextPage()} disabled={!canNextPage}>\r\n                  {<i class=\"fas fa-chevron-right\"></i>}\r\n                </button>{' '}\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                  {<i class=\"fas fa-chevron-double-right\"></i>}\r\n                </button>{' '}\r\n          </div>\r\n\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Tablemap({ botID, delete_trained, add_data }) {\r\n  const [TablemapState, setTablemapState] = useState([]);\r\n\r\n  console.log(botID)                                               \r\n\r\n  const [showWord, setShowWord] = useState(false);\r\n\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Word',\r\n        accessor: 'Word', // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: 'ReplyWord',\r\n        accessor: 'ReplyWord',\r\n        filter: 'fuzzyText',\r\n      },\r\n      // {\r\n      //   Header: 'Link',\r\n      //   accessor: 'Link',\r\n      // },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const [originalData] = React.useState(TablemapState)\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  const updateMyData = (rowIndex, columnId, value) => {\r\n    setTablemapState(old =>\r\n      old.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          const editData = {\r\n            \"value\": value,\r\n            \"type\": columnId,\r\n            \"data\": row\r\n          }\r\n          if (row.Word != value && row.ReplyWord != value) {\r\n            fetch('/train_bot/edit/trained/', {\r\n              method: 'POST',\r\n              headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(editData)\r\n            })\r\n          }\r\n          return {\r\n            ...old[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      })\r\n    )\r\n  }\r\n\r\n  const openWord = () => {\r\n    setShowWord(prev => !prev);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('/train_bot/' + botID + '/training')\r\n      .then(res => res.json().then(data => {\r\n        setTablemapState(\r\n          data.map(d => {\r\n            return {\r\n              select: false,\r\n              id: d._id.$oid,\r\n              Word: d.question,\r\n              ReplyWord: d.answer,\r\n              // Link:  <i className=\"far fa-edit\" >sssssssssssssss</i>\r\n            };\r\n          })\r\n          \r\n\r\n        );\r\n\r\n      }))\r\n\r\n  }, []);\r\n\r\n\r\n  const resetData = () => setTablemapState(originalData)\r\n  \r\n  return (\r\n    <Styles>\r\n      <TableShow\r\n        columns={columns}\r\n        data={TablemapState}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n        delete_trained={delete_trained}\r\n        botID={botID}\r\n      />\r\n\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default Tablemap;\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Table\\Tablecustomer.js",["409","410","411","412","413","414","415","416","417","418","419","420","421","422"],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Delete_pop.js",["423"],"import React, { useRef, useEffect, useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { Container } from \"react-bootstrap\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ImageWarnning from \"./Images/warnning2.png\";\r\n\r\nconst Background = styled.div`\r\n  /* position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center; */\r\n  width: 100%;\r\n  height: 100%;\r\n  background: blue;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background :rgba(0, 0, 0, 0.2);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  /* width: 400px;\r\n  height: 250px;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  background: #fff;\r\n  color: #000;\r\n  display: grid;\r\n  z-index: 10;\r\n  border-radius: 10px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(90%, -140%);\r\n  margin-top: 250px; */\r\n  width: 500px;\r\n  background-color: white;\r\n  padding: 3rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 45px;\r\n  right: 20px;\r\n  width: 25px;\r\n  height: 25px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* line-height: 1.8; */\r\n\r\n.button-delete-bot{\r\n  text-align: center;\r\n}\r\n\r\n.button-delete-bot .cancle-delete-bot{\r\n  padding: 7px 20px;\r\n  font-size: 15px;\r\n  border-radius: 25px;\r\n  border: 1px solid #0078ff;\r\n  transition: 0.5s;\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  color: #0078ff;\r\n}\r\n\r\n.button-delete-bot .cancle-delete-bot:hover{\r\n  color:#fff;\r\n}\r\n\r\n.button-delete-bot .delete-bot{\r\n    padding: 7px 20px;\r\n    font-size: 15px;\r\n    border-radius: 25px;\r\n    border: 1px solid #CD5C5C;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #CD5C5C;\r\n    color: #fff;\r\n}\r\n.button-delete-bot .delete-bot:hover{\r\n  color: #000;\r\n}\r\n\r\nimg{\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 70%;\r\n}\r\n`;\r\n\r\nfunction Delete_pop({ showDelete_pop, setShowDelete_pop, Delete_bot, bot }) {\r\n\r\n  const ConfirmDelete = (bot) => {\r\n    Delete_bot(bot)\r\n    setShowDelete_pop(prev => !prev)\r\n  }\r\n  console.log(showDelete_pop);\r\n\r\n  const modalRef = useRef();\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250\r\n    },\r\n    opacity: showDelete_pop ? 1 : 0,\r\n    transform: showDelete_pop ? `translateY(0%)` : `translateY(-100%)`\r\n  });\r\n\r\n  const closeModal = e => {\r\n    if (modalRef.current === e.target) {\r\n      setShowDelete_pop(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showDelete_pop) {\r\n        setShowDelete_pop(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowDelete_pop, showDelete_pop]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {showDelete_pop ? (\r\n        <Background onClick={closeModal} ref={modalRef}>\r\n          <animated.div style={animation}>\r\n            <Container>\r\n              <ModalWrapper showDelete_pop={showDelete_pop}>\r\n                <ModalContent>\r\n                  <div>\r\n                    <img src={ImageWarnning} alt=\"warnning\" className=\"warnning_img\" />\r\n                  </div>\r\n                  you want to delete this bot?\r\n                <Container className=\"button-delete-bot\">\r\n                    <Button className=\"cancle-delete-bot\" onClick={() => setShowDelete_pop(prev => !prev)}>cancle</Button>\r\n                    <Button className=\"delete-bot\" onClick={() => { ConfirmDelete(bot)}}>delete</Button>\r\n                  </Container>\r\n                </ModalContent>\r\n                <CloseModalButton\r\n                  aria-label=\"Close modal\"\r\n                  onClick={() => setShowDelete_pop(prev => !prev)}\r\n                />\r\n              </ModalWrapper>\r\n            </Container>\r\n          </animated.div>\r\n        </Background>\r\n      ) : null}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Delete_pop;\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Botlist\\button_nav.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Landing\\cardList.js",["424","425","426"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Jumbotron as Jumbo } from 'react-bootstrap';\r\n// import PhoneG from './image/phone_group.png';\r\n\r\n\r\nconst Styles = styled.div`\r\n.jumbo {\r\n    align-items: center;\r\n    margin: 5% 0;\r\n}\r\n\r\n.container {\r\n    // background: url(${process.env.PUBLIC_URL +'/images/bg-home.png'}) no-repeat fixed bottom;\r\n    background-size: 100%;\r\n    margin-bottom: 20%;\r\n    margin-top: 45%;\r\n}\r\n\r\n.line {\r\n    height: 2px;\r\n    background-color: #D3D3D3;\r\n    width: 400px;\r\n    align-items: right;\r\n    margin-top: 1%;\r\n    margin-bottom: 1%;\r\n}\r\n\r\n.card {\r\n  width: 20rem;\r\n  height: 35rem;\r\n  margin-bottom: 5%;\r\n  border-radius: 10px;\r\n  border: 0 solid #fca311;\r\n  background: #fff;\r\n  padding: 3%;\r\n  box-shadow: 0 9px 15px rgba(0,0,0,.08), 0 9px 10px rgba(0,0,0,.05);\r\n  transition: .3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12);\r\n//   cursor: pointer;\r\n}\r\n\r\n// .card:hover{\r\n//   transform: scale(1.05);\r\n//   box-shadow: 0 10px 20px rgba(0,0,0,.12), 0 4px 8px rgba(0,0,0,.06);\r\n// }\r\n\r\nh1 {\r\n    font-size: 40px;\r\n    font-weight: 700;\r\n    margin-bottom: 40px;\r\n    font-family: 'Roboto', sans-serif;\r\n    text-align: center;\r\n  }\r\n\r\n.card h5 {\r\n    margin-top: 2%;\r\n    font-weight: bold;\r\n\r\n}\r\n\r\n.card p {\r\n    color: black;\r\n}\r\n\r\nul { \t\r\n    list-style: none; \t \t\r\n    font-size: 18px; \t\r\n    letter-spacing: 0.5px;\r\n    display: inline;\r\n    // padding: none;\r\n    // line-height: 50px; \r\n} \r\n\r\nli i {\r\n    margin-left: -30px;\r\n    color: #5BB30A;\r\n    margin-right: 5%;\r\n    display: inline;\r\n    margin-bottom: 5px;\r\n} \r\n\r\nli p {\r\n    display: inline;\r\n}\r\n\r\n.select {\r\n    margin-button: 15px;\r\n}\r\n\r\n.img-card img {\r\n    width: 80%;\r\n    text-align: center;\r\n    // background-color: black;\r\n    margin-bottom:10%;\r\n}\r\n\r\n.img-card {\r\n    margin-left: 20%;\r\n}\r\n\r\n.svg-bg {\r\n    position: absolute;\r\n    left: 0px;\r\n    right: 0px;\r\n    top:0px;\r\n    margin-top: 45%;\r\n    z-index:-1;\r\n}\r\n\r\n.svg-bg .wave1-svg {\r\n    position: relative;\r\n    left: 0px;\r\n    right: 0px;\r\n    top:0px;\r\n    margin-top: 10%;\r\n    z-index:-1;\r\n}\r\n\r\n.svg-bg .wave2-svg {\r\n    position: relative;\r\n    left: 0px;\r\n    right: 0px;\r\n    top:0px;\r\n    z-index:-1;\r\n}\r\n.svg-bg .rec-svg {\r\n    position: relative;\r\n    left: 0px;\r\n    right: 0px;\r\n    top:0px;\r\n    max-width: 100%;\r\n    z-index:-1;\r\n}\r\n\r\n`;\r\n\r\nexport const CardList = () => (\r\n    <Styles >\r\n        <div className=\"svg-bg\" >\r\n            <svg height=\"100%\" width=\"100%\"  className=\"wave1-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n  <path fill=\"#f6f6f6\" fill-opacity=\"1\" d=\"M0,128L48,154.7C96,181,192,235,288,229.3C384,224,480,160,576,133.3C672,107,768,117,864,128C960,139,1056,149,1152,154.7C1248,160,1344,160,1392,160L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path>\r\n</svg> \r\n<svg height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" className=\"rec-svg\" viewBox=\"0 0 1440 320\"><path fill=\"#f6f6f6\" fill-opacity=\"1\" d=\"M0,320L0,0L1440,0L1440,320L0,320L0,320Z\"></path></svg>\r\n<svg height=\"50%\" xmlns=\"http://www.w3.org/2000/svg\" className=\"rec-svg\" viewBox=\"0 0 1440 320\"><path fill=\"#f6f6f6\" fill-opacity=\"1\" d=\"M0,320L0,0L1440,0L1440,320L0,320L0,320Z\"></path></svg>\r\n{/* <svg height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" className=\"rec-svg\" viewBox=\"0 0 1440 320\"><path fill=\"#f6f6f6\" fill-opacity=\"1\" d=\"M0,320L0,0L1440,0L1440,320L0,320L0,320Z\"></path></svg> */}\r\n<svg height=\"100%\" width=\"100%\" className=\"wave2-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n  <path fill=\"#f6f6f6\" fill-opacity=\"1\" d=\"M0,128L48,154.7C96,181,192,235,288,229.3C384,224,480,160,576,133.3C672,107,768,117,864,128C960,139,1056,149,1152,154.7C1248,160,1344,160,1392,160L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"></path>\r\n</svg> \r\n        \r\n        \r\n        </div>\r\n{/* <svg height=\"100%\" width=\"100%\" id=\"bg-svg\" viewBox=\"0 0 1440 500\" xmlns=\"http://www.w3.org/2000/svg\" class=\"transition duration-300 ease-in-out delay-150\"><path d=\"M 0,500 C 0,500 0,166 0,166 C 116.57142857142858,188.10714285714286 233.14285714285717,210.21428571428572 349,202 C 464.85714285714283,193.78571428571428 580,155.25 705,149 C 830,142.75 964.8571428571429,168.7857142857143 1089,177 C 1213.142857142857,185.2142857142857 1326.5714285714284,175.60714285714283 1440,166 C 1440,166 1440,500 1440,500 Z\" stroke=\"none\" stroke-width=\"0\" fill=\"#0693e388\" class=\"transition-all duration-300 ease-in-out delay-150\"></path><path d=\"M 0,500 C 0,500 0,333 0,333 C 118.10714285714286,294.5 236.21428571428572,256 349,280 C 461.7857142857143,304 569.2500000000001,390.5 683,392 C 796.7499999999999,393.5 916.7857142857142,310 1044,286 C 1171.2142857142858,262 1305.607142857143,297.5 1440,333 C 1440,333 1440,500 1440,500 Z\" stroke=\"none\" stroke-width=\"0\" fill=\"#0693e3ff\" class=\"transition-all duration-300 ease-in-out delay-150\"></path></svg> */}\r\n       \r\n<Container className=\"container\"> \r\n\r\n        <div className=\"title\">\r\n            <h1>About Features</h1>\r\n        </div>\r\n        <Jumbo className=\"jumbo col-lg-12 row justify-content-around\">\r\n                <div className=\"card col-lg-6\">\r\n                    <div className=\"img-card\">\r\n                        <img src=\"./images/chat.svg\" />\r\n                    </div>\r\n                    <h5 className=\"card-title\">Bot Features\r\n                        <hr />\r\n                    </h5>\r\n                    <ul> \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check select\"></i><p>Can get ordering from customer</p></li>\r\n                        <div className=\"mt-3\"></div>\t\t\t\t\t\r\n                        <li><i class=\"fas fa-check select\"></i><p>Can understand and answer customer as what we teach</p></li>\r\n                        <div className=\"mt-3\"></div> \t\t\t\t\t\r\n                        <li> <i class=\"fas fa-check select\"></i><p>Can do dealing by itself</p></li>\r\n                        \t\t\t\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"card col-lg-6\">\r\n                    <div className=\"img-card\">\r\n                        <img src=\"./images/delivery-truck.svg\" />\r\n                    </div>\r\n                    <h5 className=\"card-title\">Parcel Features\r\n                        <hr />\r\n                    </h5>\r\n                    <ul> \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check\"></i><p>Can issue a cover sheet for the parcel</p></li>\r\n                        <div className=\"mt-4\"></div> \r\n                        <li><i class=\"fas fa-check\"></i><p>Can issue tracking number</p></li>\r\n                        <div className=\"mt-4\"></div>  \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check\"></i><p>Can keep the address</p></li> \t\t\t\t\t\r\n                         \t\t\t\t\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"card col-lg-6\">\r\n                    <div className=\"img-card\">\r\n                        <img src=\"./images/statistics.svg\"/>\r\n                    </div>\r\n                    <h5 className=\"card-title\">Visualization Feature\r\n                    <hr />\r\n                    </h5>\r\n                    <ul> \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check\"></i><p>Able to check sales on time</p></li>\r\n                        <div className=\"mt-4\"></div>  \t\t\t\t\t\r\n                        <li><i class=\"fas fa-check\"></i><p>Able to check product balances</p></li>\r\n\t\t\t\t\t\t\t\t\t\r\n                    </ul>\r\n                </div>\r\n            \r\n        </Jumbo>\r\n        </Container>\r\n    </Styles>\r\n)\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Landing\\Mainpage.js",["427","428","429"],"import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\n// import Telephone from './images/Telephone.png';\r\n\r\nconst Styles = styled.div`\r\n\r\n  \r\n  .home .jumbo {\r\n    align-items: center;\r\n    font-family: 'Public Sans', sans-serif;\r\n    \r\n      \r\n    \r\n    \r\n  }\r\n\r\n  .home .container {\r\n   \r\n    background-size: 100%;\r\n    margin-bottom: 15%;\r\n    position: relative;\r\n}\r\n\r\n  #main-page {\r\n    margin-top: 150px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  \r\n  #main-page .main-text {\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    line-height: 1.25;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 80px;\r\n    font-family: 'Roboto', sans-serif;\r\n    text-transform: uppercase;\r\n    color: #14213d;\r\n  }\r\n\r\n  .main-text p {\r\n    font-size: 18px;\r\n    color: #14213d;\r\n    line-height: 1.7;\r\n    width: 21rem;\r\n    margin-top: 15%;\r\n  }\r\n\r\n  .img-main .img-phone {\r\n    width: 40%;\r\n    position: absolute;\r\n    margin-left: 45%;\r\n    margin-top: 3%;\r\n  }\r\n\r\n   .img-bg {\r\n    top: 0px;\r\n    position: absolute;\r\n    z-index: -1;\r\n    right:0px;\r\n  }\r\n`;\r\n\r\n\r\nexport const Mainpage = () => (\r\n  <Styles>\r\n     \r\n            \r\n        \r\n    <div className=\"home\" >\r\n    \r\n    <div className=\"img-main\" >\r\n            <img className=\"img-phone\" src=\"./images/tel.png\" width=\"40%\" />\r\n\r\n          </div>\r\n          <img className=\"img-bg\" src=\"./images/page.png\" width=\"100%\" />\r\n    <Container className=\"container\">\r\n    <Jumbo fluid className=\"jumbo d-flex position-relative\">\r\n        <section id=\"main-page\">\r\n        \r\n          <div className=\"main-text\">\r\n            <h1>A1 Chatbot</h1>\r\n            <p>A1 chatbot is a web-application that can help manage online purchasing and selling. It also includes automated reply message, order management, and online shop system administration via bot which you can create by your own. </p>\r\n          </div>\r\n          \r\n          \r\n        </section>\r\n    </Jumbo>\r\n    </Container>\r\n    </div>\r\n  </Styles>\r\n) \r\n\r\n\r\n\r\n{/* <Container fluid className=\"jumbo d-flex position-relative\" >\r\n        <img src=\"./images/Telephone.png\" class=\"img-fluid\" width=\"50%\"/> \r\n        <h1>Welcome</h1>\r\n        <span>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</span>      \r\n        </Container> */}","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Landing\\endpage.js",["430"],"import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport {isLoggedIn} from '../auth'\r\n\r\n// import Telephone from './images/Telephone.png';\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    align-items: center;\r\n  }\r\n\r\n  .container {\r\n    // background: url(${process.env.PUBLIC_URL +'/images/Background.png'}) no-repeat fixed bottom;\r\n    background-size: 100%;\r\n    // margin-top: 10%;\r\n    margin-bottom: 20%;\r\n}\r\n\r\n  #main {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  \r\n  #main .main-text {\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    line-height: 1.25;\r\n    \r\n  }\r\n\r\n  h1 {\r\n   \r\n\r\n    font-size: 40px;\r\n    font-weight: 700;\r\n    margin-bottom: 5%;\r\n    margin-top: 16%;\r\n    font-family: 'Roboto',sans-serif;\r\n    color: #14213D;\r\n\r\n\r\n  }\r\n\r\n  span {\r\n    font-size: 17px;\r\n    color: #14213D;\r\n    margin-bottom: 15%;\r\n  }\r\n\r\n  .btn-regis button {\r\n\r\n    color: white;\r\n    font-weight: bold;\r\n    padding: 15px 90px;\r\n    border-radius: 30px;\r\n    background-color: #14213d;\r\n    border-style: none;\r\n    \r\n  }\r\n\r\n  .btn-regis button:hover {\r\n    color: black;\r\n    font-weight: bold;\r\n    padding: 15px 90px;\r\n    border-radius: 30px;\r\n    background-color: white;\r\n    // border: 2px solid #fca311;\r\n  }\r\n    \r\n\r\n`;\r\n\r\nfunction regisBot(props){\r\n  if(isLoggedIn()){\r\n    return(\r\n      <Link to={'/bot_list/'+localStorage.getItem('user_id')}>\r\n        <button className=\"\" >Manage Bot</button>\r\n      </Link>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <Link to = \"/register\">\r\n          <button class=\"btn btn-primary\" type=\"button\">Register for FREE! </button>\r\n      </Link>\r\n    )\r\n  }  \r\n} \r\n\r\nexport const Endpage = () => (\r\n  <Styles>\r\n    <Container className=\"container\">\r\n    <Jumbo fluid className=\"jumbo d-flex position-relative\">\r\n        <section id=\"main\">\r\n          <img src=\"./images/phone_group.png\" width=\"90%\"/>\r\n          <div className=\"main-text\">\r\n            <h1>Improve at every stage <br/> of your business growth</h1>\r\n            <span>No matter whether you’re a growing company <br/> ChatBot helps you communicate better with customers.</span>\r\n            <div class=\"d-grid gap-2 col-6 mx-auto mt-5 btn-regis\">\r\n              {regisBot()}\r\n            </div>\r\n          </div>\r\n          \r\n        </section>\r\n    </Jumbo>\r\n    </Container>\r\n  </Styles>\r\n) \r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Footer\\footer.js",[],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Form\\facebookform.js",["431","432"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport packageJson from '../../../package.json';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Styles = styled.div`\r\n.container {\r\n    margin-top: 2%;\r\n}\r\n\r\n.facebook-card {\r\n    height: 30rem;\r\n    width: 25rem;\r\n    /* padding: 4rem 3rem; */\r\n    border: 0;\r\n    border-radius: 1rem;\r\n    background-color: #fff;\r\n    color: white;\r\n    // box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\r\n    border: 3px solid #0078ff;\r\n}\r\n.facebook {\r\n    padding : 5%;\r\n}\r\n\r\n.facebook p{\r\n    font-weight: bold;\r\n    font-size: 23px;\r\n    color: black;\r\n}\r\n\r\n.copy-link p{\r\n    /* display: inline-block; */\r\n    font-size: 15px;\r\n    color: black;\r\n    float:left;\r\n    max-width: 95%;\r\n    overflow-x: auto;\r\n\r\n}\r\n\r\n.copy-link p::-webkit-scrollbar {\r\n  /* width: 5px; */\r\n  height: 6px;\r\n}\r\n\r\n.copy-link p::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 1px gray; \r\n  border-radius: 0.5rem;\r\n}\r\n.copy-link p::-webkit-scrollbar-thumb {\r\n  background: #dddddd; \r\n  border-radius: 0.5rem;\r\n}\r\n\r\n/* .copy-link p::-webkit-scrollbar-thumb:hover {\r\n  background: gray; \r\n} */\r\n\r\n.copy-link i{\r\n    color: #0078ff;\r\n}\r\n\r\n.copy-clipboard {\r\n    color: #34a853;\r\n    /* top: 195px;\r\n    right: 70px; */\r\n}\r\n\r\n.copy-link button{\r\n    /* display:inline-block; */\r\n    position: relative;\r\n    float : right;\r\n    background: white;\r\n    border-radius: 1rem;\r\n    border: 2px solid #0078ff;\r\n    /* margin-left: -3%;\r\n    margin-right: -8px; */\r\n    margin: 0 -5% 0 0;\r\n    /* text-align:center; */\r\n} \r\n\r\n.facebook .input-Box label{\r\n    font-size: 15px;\r\n    color: black;\r\n}\r\n\r\n.facebook .input-Box input{\r\n    box-shadow: none;\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 2px solid #d3d3d3;\r\n    outline: none;\r\n    /* margin-bottom: 30px; */\r\n    margin-top: 1px;\r\n    font-size: 16px;\r\n    padding: 5px 0;\r\n}\r\n\r\n#container-button{\r\n    text-align: center;\r\n    margin-top: 40%;\r\n}\r\n\r\n#container-button .submit{\r\n    padding: 5px 20px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #0078ff;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #0078ff;\r\n    color: #fff;\r\n}\r\n\r\n#container-button .submit:hover{\r\n    color: #000;\r\n}\r\n\r\n#container-button .cancle{\r\n    padding: 5px 30px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #CD5C5C;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #CD5C5C;\r\n    color: #fff;\r\n}\r\n\r\n#container-button .cancle:hover{\r\n    color: #000;\r\n}\r\n`;\r\n\r\nexport default function Facebookform(props) {\r\n    const [access_token, setAccess_token] = useState('');\r\n    const [verify_token, setVerify_token] = useState('');\r\n    const [webhook, setWebhook] = useState(packageJson.proxy+'bot/webhook/'+props.props.bot_id+'/facebook')\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const editData = {\r\n            'page_facebook_access_token':access_token, \r\n            'verify_token':verify_token,\r\n            'creator':localStorage.getItem('user_id'),\r\n            'platform':'facebook'\r\n        }\r\n        fetch('/bot/'+props.props.bot_id+'/connect', {\r\n            method: 'POST',\r\n            headers : {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(editData)\r\n        }).then(response => response.json().then(data => alert(data.message)))\r\n        // .then( res => res.json())\r\n        // .then(data=>{\r\n        //     localStorage.setItem('access_token', data.access_token);\r\n        //     localStorage.setItem('username', data.username);\r\n        //     localStorage.setItem('user_id', data.user_id);\r\n        //     if (localStorage.getItem(\"access_token\") !== null && localStorage.getItem(\"access_token\")!==\"undefined\") {\r\n        //       window.location.replace(\"/\")\r\n        //     }else{\r\n        //         alert(data.error);  \r\n        //   }\r\n        // }).catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('/bot/'+props.props.bot_id+'/connect').then(\r\n            response => response.json()\r\n          ).then(data =>{\r\n            setAccess_token(data.page_facebook_access_token);\r\n            setVerify_token(data.verify_token);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Styles>\r\n            <div className=\"container\">\r\n                 <div className=\"row my-3\">\r\n                    <div className=\"group facebook-card col-lg-12\">\r\n                        <form className=\"facebook\" onSubmit={ handleSubmit }>\r\n                            <div className=\"row\">\r\n                                <p className=\"col mb-4\">Connect to facebook</p>\r\n                                {/* <i className=\"col fab fa-facebook\"></i> */}\r\n                            </div>\r\n                            <div className=\"copy-link\">\r\n                                <p>{packageJson.proxy}bot/webhook/{props.props.bot_id}/facebook</p>\r\n                                <button type=\"button\" className=\"copy-clipboard\" onClick={() => {navigator.clipboard.writeText(webhook)}}><i className=\"fas fa-copy fa-xs copy-clipboard\"></i></button>\r\n                            </div>\r\n                            <div className=\"input-Box\">\r\n                            <div className=\"col-lg-12\">\r\n                                <label  className=\"form-label\">Page Facebook access token</label>\r\n                                <input type=\"text\" value={access_token} onChange={e => setAccess_token(e.target.value)} className=\"form-control\" id=\"inputpagefacebook\" />\r\n                            </div>\r\n                            <div className=\"col-lg-12 mt-3\">\r\n                                <label  className=\"form-label\">Verify token</label>\r\n                                <input type=\"text\" value={ verify_token } onChange={e => setVerify_token(e.target.value)} className=\"form-control\" id=\"inputverity\" />\r\n                            </div>\r\n                            </div>\r\n                            <div id=\"container-button\">\r\n                                <button className=\"cancle\" type='button' onClick={() => {history.goBack()}} >Back</button>\r\n                                <button className=\"submit\" type='submit'>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Styles>\r\n    )\r\n}","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Form\\lineform.js",["433","434"],"import React, { useState, useEffect }from 'react';\r\nimport styled from 'styled-components';\r\nimport packageJson from '../../../package.json';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Styles = styled.div`\r\n.container {\r\n    margin-top: 2%;\r\n}\r\n\r\n.line-card {\r\n    height: 30rem;\r\n    width: 25rem;\r\n    /* border: 0; */\r\n    border-radius: 1rem;\r\n    background-color: #fff;\r\n    color: black;\r\n    // box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\r\n    // border: 1px solid rgba(0,0,0,.1);\r\n    border: 3px solid #34a853;\r\n}\r\n\r\n.line {\r\n    padding : 5%;\r\n}\r\n\r\n.line p{\r\n    font-weight: bold;\r\n    font-size: 23px;\r\n    color: black;\r\n}\r\n\r\n\r\n\r\n.copy-link p{\r\n    font-size: 15px;\r\n    color: black;\r\n    float:left;\r\n    max-width: 95%;\r\n    overflow-x: auto;\r\n}\r\n\r\n.copy-link p::-webkit-scrollbar {\r\n  /* width: 5px; */\r\n  height: 6px;\r\n}\r\n\r\n.copy-link p::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 1px gray; \r\n  border-radius: 0.5rem;\r\n}\r\n.copy-link p::-webkit-scrollbar-thumb {\r\n  background: #dddddd; \r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.copy-link i{\r\n    color: #34a853;\r\n}\r\n\r\n.copy-clipboard {\r\n    color: #34a853;\r\n    /* position: absolute;\r\n    top: 275px;\r\n    right: 70px; */\r\n}\r\n\r\n.copy-link button{\r\n    position: relative;\r\n    float : right;\r\n    background: white;\r\n    border-radius: 1rem;\r\n    border: 2px solid #34a853;\r\n    margin: 0 -5% 0 0;\r\n}\r\n\r\n.line .input-Box label{\r\n    font-size: 15px;\r\n}\r\n\r\n.line .input-Box input{\r\n    box-shadow: none;\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 2px solid #d3d3d3;\r\n    outline: none;\r\n    /* margin-bottom: 30px; */\r\n    margin-top: 1px;\r\n    font-size: 16px;\r\n    padding: 5px 0;\r\n}\r\n\r\n.all-button{\r\n    display: inline;\r\n}\r\n\r\n#container-button{\r\n    text-align: center;\r\n}\r\n\r\n#container-button{\r\n    text-align: center;\r\n    margin-top: 15%;\r\n}\r\n\r\n#container-button .submit{\r\n    padding: 5px 20px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #34a853;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #34a853;\r\n    color: #fff;\r\n}\r\n\r\n#container-button .submit:hover{\r\n    color: #000;\r\n}\r\n\r\n#container-button .cancle{\r\n    padding: 5px 30px;\r\n    margin-top: 15px;\r\n    font-size: 19px;\r\n    border-radius: 25px;\r\n    border: 3px solid #CD5C5C;\r\n    transition: 0.5s;\r\n    margin: 10px;\r\n    background-color: #CD5C5C;\r\n    color: #fff;\r\n}\r\n\r\n#container-button .cancle:hover{\r\n    color: #000;\r\n}\r\n\r\n\r\n`;\r\n\r\nexport default function Lineform(props) {\r\n    console.log(props)\r\n    const [access_token, setAccess_token] = useState('');\r\n    const [channel_secret, setChannel_secret] = useState('');\r\n    const [basic_id, setBasic_id] = useState('');\r\n    const [webhook, setWebhook] = useState(packageJson.proxy+'bot/webhook/'+props.props.bot_id+'/line');\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const editData = {\r\n            'access_token':access_token, \r\n            'channel_secret':channel_secret, \r\n            'basic_id':basic_id,\r\n            'creator':localStorage.getItem('user_id'),\r\n            'platform': 'line'\r\n            }\r\n        fetch('/bot/'+props.props.bot_id+'/connect', {\r\n            method: 'POST',\r\n            headers : {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(editData)\r\n        }).then(response => response.json().then(data => alert(data.message)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('/bot/'+props.props.bot_id+'/connect').then(\r\n            response => response.json()\r\n          ).then(data =>{\r\n            setAccess_token(data.access_token);\r\n            setChannel_secret(data.channel_secret);\r\n            setBasic_id(data.basic_id);\r\n        })\r\n    }, []);\r\n\r\n    return(\r\n            <Styles>\r\n                <div className=\"container\">\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"group line-card col-lg-12\">\r\n                            <form className=\"line\" onSubmit={ handleSubmit }>\r\n                                <div className=\"row\">\r\n                                    <p className=\"col mb-4\">Connect to Line</p>\r\n                                </div>\r\n                                <div className=\"copy-link\">\r\n                                    <p>{packageJson.proxy}bot/webhook/{props.props.bot_id}/line</p>\r\n                                    <button type='button' className=\"copy-clipboard\" onClick={() => {navigator.clipboard.writeText(webhook)}}><i className=\"fas fa-copy fa-xs\"></i></button>\r\n                                </div>\r\n                                <div className=\"input-Box\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <label  className=\"form-label\">Channel secret</label>\r\n                                    <input type=\"text\" value={channel_secret} onChange={e => setChannel_secret(e.target.value)} className=\"form-control\" id=\"inputpagefacebook\"/>\r\n                                </div>\r\n                                <div className=\"col-lg-12 mt-3\">\r\n                                    <label  className=\"form-label\">Channel access token</label>\r\n                                    <input type=\"text\" value={access_token} onChange={e => setAccess_token(e.target.value)} className=\"form-control\" id=\"inputbotname\"/>\r\n                                </div>\r\n                                <div className=\"col-lg-12 mt-3\">\r\n                                    <label  className=\"form-label\">Basic ID</label>\r\n                                    <input type=\"text\" value={basic_id} onChange={e => setBasic_id(e.target.value)} className=\"form-control\" id=\"inputbotname\"/>\r\n                                </div>\r\n                                </div>\r\n                                <div id=\"container-button\">\r\n                                    <button className=\"cancle\" type='button' onClick={() => {history.goBack()}} >Back</button>\r\n                                    <button className=\"submit\" type='submit'>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>  \r\n                    </div>\r\n                \r\n                </div>\r\n                \r\n            </Styles>\r\n        )   \r\n}\r\n\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Inventory\\Inven_list.js",["435","436","437","438"],"import {Link} from \"react-router-dom\";\r\nimport React, {useState, useEffect, useRef } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n.inven-list {\r\n    /* background-color: aqua; */\r\n    width: auto;\r\n    font-family: 'Public Sans', sans-serif;\r\n}\r\n\r\n.inven-list button{\r\n    padding: 7px 15px;\r\n    margin-bottom: 5%;\r\n    font-size: 12px;\r\n    border-radius: 25px;\r\n    border: 1px solid #0078ff;\r\n    transition: 0.5s;\r\n    /* font-size: 12px;\r\n    margin-bottom: 1%;\r\n    background-color: rgb(29, 151, 29);\r\n    color: white;\r\n    padding: 5px 15px;\r\n    border-radius: 0.5rem;\r\n    border-style :none; */\r\n}\r\n\r\n.inven-list-body{\r\n    max-width: 100%;\r\n    text-decoration: none;\r\n    /* margin: 0 auto; */\r\n    display: grid;\r\n    /* grid-gap: 3px; */\r\n}\r\n\r\n.inven-list-body .inven-card{\r\n    text-decoration: none;\r\n    color: black;\r\n}\r\n\r\n\r\n\r\n.inven-card {\r\n    background-color: white;\r\n    height: 100px;\r\n    /* width: 300px; */\r\n    border: 1px solid #dbdbdb;\r\n    /* box-shadow: 0px 4.5px 14px rgba(0, 0, 0, 0.1); */\r\n    display: grid;\r\n    grid-template-columns: 40% 60%;\r\n    margin: 3%;\r\n}\r\n\r\n.inven-list img {\r\n    height: 80px;\r\n    width: 80px;\r\n    margin: 8%;\r\n    /* box-shadow: 0px 0px 0px 2px rgba(0, 0, 0, 0.06); */\r\n}\r\n\r\n.inven-info{\r\n    margin-top: 7%;\r\n    font-size: 13px;\r\n    margin-left: 1%;\r\n}\r\n\r\n.inven-info .product-name{\r\n    font-family: 'Roboto', sans-serif;\r\n    margin-bottom: 5%;\r\n    width: 150px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.inven-info .product-price{\r\n    max-width: 150px;\r\n    margin-bottom: 2px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.inven-info .product-onhand{\r\n    max-width: 150px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.inven-card img{\r\n    border: 1px solid #dbdbdb;\r\n    /* filter: grayscale(1); */\r\n    /* color: #dbdbdb; */\r\n    /* background-color: #dbdbdb; */\r\n} \r\n` \r\nexport default function Invenlist(props) {\r\n    console.log(props)\r\n    return(    \r\n        <Styles>\r\n                <div class=\"inven-list\">\r\n                    \r\n                    <div className=\"inven-list-body\">\r\n                        <Link to = {\"inventory/product_detail/ \"+props.props._id.$oid} className=\"inven-card\">\r\n                            <img className=\"img-inven\" src={'/images/bucket/'+props.props.img}/>\r\n                            <div className=\"inven-info\">\r\n                                <div className=\"product-name\">{props.props.item_name}</div>\r\n                                <div className=\"product-price\">Price(฿) : {props.props.price}</div>\r\n                                <div className=\"product-onhand\">Amount : {props.props.amount}</div>\r\n                            </div>    \r\n                        </Link>  \r\n                    </div>\r\n                </div>\r\n        </Styles>\r\n\r\n    );\r\n}\r\n\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Chat\\Chatbody.js",["439","440","441","442","443","444","445","446"],"import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client'\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../Chat/Chat.css';\r\n\r\n<<<<<<< HEAD\r\nlet endPoint = \"https://924d6deb0e9e.ngrok.io\";\r\n=======\r\nconst Styles = styled.div` \r\n/* .chat-page {\r\n    display: flex;\r\n    min-height: 90vh;\r\n} */\r\n.chat-body {\r\n    /* margin: 2%; */\r\n    width: 100%;\r\n    background-color: #fff;\r\n    /* overflow:hidden; */\r\n    /* background-color: white; */\r\n}\r\n\r\n.main__chatcontent {\r\nbackground-color: #fff;\r\n  flex-grow: 1;\r\n  padding: 20px 20px 40px 0 ;\r\n  max-width: 100%;\r\n  /* border-right: 1px solid #ebe7fb;\r\n  margin-right: 2%; */\r\n}\r\n\r\n.content__header {\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #ebe7fb;\r\n}\r\n\r\n/* .current-chatting-user {\r\n  display: flex;\r\n  align-items: center;\r\n} */\r\n\r\n/* .current-chatting-user p {\r\n  margin: 0;\r\n  font-weight: 600;\r\n} */\r\n\r\n.content__header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n/* \r\n.settings .btn-nobg {\r\n  color: #000;\r\n} */\r\n\r\n.content__body {\r\n  height: 60vh;\r\n  overflow: auto;\r\n}\r\n\r\n.chat__item {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n  margin-bottom: 15px;\r\n  transition: all 0.3s ease;\r\n  transform: scale(0);\r\n  transform-origin: right;\r\n  animation-name: showIn;\r\n  animation-duration: 0.2s; /* or: Xms */\r\n  animation-iteration-count: 1;\r\n  animation-direction: normal; /* or: normal */\r\n  animation-timing-function: cubic-bezier(\r\n    0.88,\r\n    0.19,\r\n    0.37,\r\n    1.11\r\n  ); /* or: ease, ease-in, ease-in-out, linear, cubic-bezier(x1, y1, x2, y2) */\r\n  animation-fill-mode: both; /* or: backwards, both, none */\r\n  animation-delay: 0.2s; /* or: Xms */\r\n}\r\n\r\n/* @keyframes showIn {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n} */\r\n\r\n.chat__item .avatar {\r\n  margin-right: 0px;\r\n  margin-left: 20px;\r\n  background: #fff;\r\n  padding: 1px;\r\n}\r\n\r\n.chat__item__content {\r\n  background-color: #4462ff;\r\n  color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px 10px 0 10px;\r\n  max-width: 50%;\r\n  min-width: 215px;\r\n}\r\n\r\n.chat__item__content .chat__meta {\r\n  justify-content: space-between;\r\n  display: flex;\r\n  margin-top: 10px;\r\n}\r\n\r\n.chat__item__content .chat__meta span {\r\n  font-size: 14px;\r\n  color: #8693d3;\r\n  user-select: none;\r\n}\r\n\r\n.chat__msg {\r\n  user-select: none;\r\n}\r\n\r\n.chat__item.other {\r\n  flex-direction: row-reverse;\r\n  transform-origin: left;\r\n}\r\n.chat__item.other .chat__item__content {\r\n  background-color: #fff;\r\n  color: #000;\r\n  border-radius: 10px 10px 10px 0;\r\n  max-width: 50%;\r\n}\r\n\r\n.chat__item.other .avatar {\r\n  margin-right: 20px;\r\n  margin-left: 0px;\r\n}\r\n\r\n.chat__item.other .chat__item__content .chat__meta span {\r\n  color: #d1d1d1;\r\n}\r\n\r\n.content__footer {\r\n  padding-top: 30px;\r\n}\r\n\r\n.sendNewMessage {\r\n  background-color: #ecefff;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.sendNewMessage button {\r\n  width: 36px;\r\n  height: 36px;\r\n  background-color: #ecefff;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  color: #4665ff;\r\n  padding: 0;\r\n  border-radius: 5px;\r\n  line-height: 36px;\r\n  transition: all 0.3s cubic-bezier(0.88, 0.19, 0.37, 1.11);\r\n}\r\n.sendNewMessage button:hover {\r\n  transform: scale(1.2);\r\n}\r\n.sendNewMessage button i {\r\n  display: block;\r\n}\r\n.sendNewMessage input {\r\n  flex-grow: 1;\r\n  padding: 0 15px;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n}\r\n#sendMsgBtn {\r\n  background-color: #3b5bfe;\r\n  color: #fff;\r\n}\r\n.user {\r\n  color: red;\r\n}\r\n\r\n.bot {\r\n  color:blue;\r\n}\r\n\r\n.head {\r\n  color:black;\r\n}\r\n` \r\nlet endPoint = \"http://localhost:200\";\r\n>>>>>>> 3736762ecdedf3a05a6616afeb320baa700a545f\r\n\r\nlet socket = io.connect(`${endPoint}`);\r\n \r\n\r\n\r\nfunction Chatbody({botID,customerID}){\r\n    const [messages,setMessages] = useState([]);\r\n    const [message,setMessage] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n  \r\n    useEffect(() =>{\r\n<<<<<<< HEAD\r\n        if(customerID !== \"main\"){\r\n            setMessages([])\r\n        \r\n        fetch('/bot/'+botID+'/customer/'+customerID).then(res=> res.json().then(data=>{\r\n                console.log(data.profile)\r\n                setUsername(data.profile.display_name)\r\n                data.message.forEach(ele=>{\r\n                   if (ele.sender_type == \"bot\"){\r\n                    setMessages(messages=> [...messages,<div><p className=\"head-name from-owner msg\">{ele.sender}</p><p className=\"msg owner-send\">{ele.message}</p></div>])\r\n                  } else if (ele.sender_type == \"lineUser\"){\r\n                    setMessages(messages=> [...messages,<div><p className=\"head-name from-cust msg\">{ele.sender}</p><p className=\"msg customer-send\">{ele.message}</p></div>])\r\n                  }\r\n            })\r\n        }))\r\n        }\r\n        \r\n    },[customerID])\r\n=======\r\n        setMessages([])\r\n        fetch('/bot/'+botID+'/customer/'+customerID).then(res=> res.json().then(data=>{\r\n                setUsername(data.profile.display_name);\r\n                data.message.forEach(ele=>{ \r\n                  console.log(ele)\r\n                  if (ele.sender_type == \"bot\"){\r\n                    setMessages(messages=> [...messages,<div><p className=\"bot\">{ele.sender}:{ele.message}</p></div>])\r\n                  } else if (ele.sender_type == \"lineUser\"){\r\n                    setMessages(messages=> [...messages,<div><p className=\"user\">{ele.sender}:{ele.message}</p></div>])\r\n                  }   \r\n            })\r\n          }))\r\n    },[customerID])\r\n\r\n>>>>>>> 3736762ecdedf3a05a6616afeb320baa700a545f\r\n    \r\n    useEffect(() =>{\r\n        getMessages();\r\n    },[messages.length])\r\n\r\n    const getMessages = () =>{\r\n      socket.on('connect', function (room) {\r\n          socket.emit('join_room', {\r\n              bot: botID,\r\n              customer:customerID\r\n          })\r\n      })\r\n      \r\n      socket.on(\"message_from_webhook\", msg =>{\r\n          console.log(msg)\r\n          setMessages([...messages,\r\n<<<<<<< HEAD\r\n              <div className=\"customer-msg col\">\r\n                  <p className=\"head-name from-cust msg\">{msg.sender}</p><p className=\"msg customer-send\">{msg.message}</p>\r\n=======\r\n              <div className=\"user\">\r\n                  <p style=\"color:red\">{msg.displayName}:{msg.message}</p>\r\n>>>>>>> 3736762ecdedf3a05a6616afeb320baa700a545f\r\n              </div>]);\r\n          // setUserID([msg.userID]);\r\n      })\r\n      socket.on(\"message_from_response\", msg =>{\r\n          console.log(msg)\r\n          setMessages([...messages,\r\n<<<<<<< HEAD\r\n              <div className=\"owner-msg col\">\r\n                  <p className=\"head-name from-owner msg\">{msg.sender}</p><p className=\"msg owner-send\">{msg.message}</p>\r\n=======\r\n              <div className=\"bot\">\r\n                  <p>{msg.displayName}:{msg.message}</p>\r\n>>>>>>> 3736762ecdedf3a05a6616afeb320baa700a545f\r\n              </div>]);\r\n          // setUserID([msg.userID]);\r\n      })\r\n  }\r\n  \r\n    const onChange = e => {\r\n      setMessage(e.target.value);\r\n    }\r\n\r\n    const onClick = () => {\r\n      if (message != \"\"){\r\n          socket.emit(\"send_message\",{\"message\": message,\"room\":botID+'&'+customerID,\"customerID\":customerID,\"botID\":botID});\r\n          setMessage(\"\");\r\n      }else{\r\n          alert(\"Type your message\")\r\n      }\r\n    }    \r\n    return(\r\n\r\n            <div className=\"main__chatcontent\">\r\n                    <div className=\"content__header\">\r\n                        <div className=\"blocks\">\r\n                            <div className=\"current-chatting-user\">\r\n<<<<<<< HEAD\r\n=======\r\n                      \r\n>>>>>>> 3736762ecdedf3a05a6616afeb320baa700a545f\r\n                              <p>{username}</p>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                    <div className=\"content__body\">\r\n                      \r\n                        {messages.length > 0 && \r\n                          messages.map(msg => (\r\n                             <div className=\"chat__item \">\r\n                                  <p className=\"msg-all\">{msg}</p>\r\n                            </div>  \r\n                        ))}\r\n                    </div>\r\n                      \r\n                    \r\n                    \r\n                    <div className=\"content__footer\">\r\n                      <div className=\"sendNewMessage\">\r\n                          <input type=\"text\" value={message} name=\"message\" placeholder=\"Type a message here\" onChange={e => onChange(e)} />\r\n                          <button className=\"btnSendMsg\" id=\"sendMsgBtn\">\r\n                              <i className=\"fa fa-paper-plane\" onClick={()=> onClick()} ></i>\r\n                          </button>\r\n                      </div>\r\n                    </div>\r\n            </div>\r\n\r\n    \r\n\r\n            \r\n    );\r\n}\r\nconst MemoizedItem = React.memo(Chatbody, () => true)\r\nexport default Chatbody;\r\n","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Chat\\chatlist.js",["447","448"],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Chat\\Chatlist.js",["449","450"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Styles = styled.div`\r\n\r\n.main-chatlist {\r\n  /* border-right: 1px solid #ebe7fb; */\r\n  padding: 20px 0 0 20px;\r\n  border-right: 1px solid #ebe7fb;\r\n}\r\n\r\nlink {\r\n  text-decoration: none;\r\n}\r\n\r\n.chatlist__heading {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-right: 6%;\r\n}\r\n\r\n.btn-nobg {\r\n  background-color: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  color: #dad9dd;\r\n  outline: none;\r\n}\r\n\r\n.search_wrap {\r\n  background-color: #e6e5ea;\r\n  border-radius: 5px;\r\n  margin-bottom: 5%;\r\n  margin-right: 8%;\r\n}\r\n\r\n.search_wrap input {\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 15px 15px;\r\n  outline: none;\r\n  width: 80%;\r\n  padding-right: 0;\r\n}\r\n\r\n.search-btn {\r\n  height: 46px;\r\n  border: none;\r\n  background-color: transparent;\r\n  outline: none;\r\n  width: 20%;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n}\r\n\r\n.chatlist-msg link{\r\n  margin-right: 5%;\r\n  text-decoration: none;\r\n\r\n}\r\n\r\n.chatlist-user{\r\n  /* background-color: #e6e5ea; */\r\n  border-radius: 5px;\r\n  /* font-family: 'Public Sans', sans-serif; */\r\n  margin-top: 2%;\r\n  height: 65vh;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  margin-right: 4%;\r\n}\r\n\r\n.chatlist-user::-webkit-scrollbar-track{\r\n  background-color: #dfdfdfdf;\r\n  border-radius: 10px;\r\n  /* margin-left: 5%; */\r\n\r\n}\r\n\r\n.chatlist-user::-webkit-scrollbar{\r\n  width: 8px;\r\n  height: 8px;\r\n}\r\n\r\n.chatlist-user::-webkit-scrollbar-thumb{\r\n  background-color: rgba(0, 0, 0, 0.4);;\r\n  border-radius: 10px;\r\n\r\n}\r\n\r\n.user-list{\r\n  background-color : rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.user-list-pic img{\r\n  /* position: absolute; */\r\n  margin-top: 3px;\r\n  /* margin-right: 20px; */\r\n  width: 50px;\r\n  height: 50px;\r\n  /* border: 1px red solid; */\r\n  border-radius: 50%;\r\n  z-index: -1000;\r\n  /* margin-right: 20px; */\r\n  /* position: relative; */\r\n}\r\n\r\n.user-list-name{\r\n  /* font-weight: 900; */\r\n  /* padding: 2%; */\r\n}\r\n\r\n.msg-user{\r\n  margin: 0 0.1%;\r\n  padding: 5%;\r\n  max-height: 100px;\r\n  display: grid;\r\n  grid-template-columns: 20% 80%;\r\n  /* background-color: aquamarine; */\r\n  /* border-radius: 5px; */\r\n  border-bottom: 1px #dfdfdfdf solid;\r\n}\r\n\r\n.msg-user:hover{\r\n  background-color: #F7F7F9;\r\n  /* opacity: 0.3; */\r\n  cursor: pointer;\r\n}\r\n\r\n.user-list-text{\r\n  font-family: 'Public Sans', sans-serif;\r\n  font-size: 13px;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 1;\r\n  -webkit-box-orient: vertical; \r\n  /* max-width: 500px;  */\r\n  overflow: hidden;\r\n  /* padding: 2%; */\r\n}\r\n\r\n.user-list-input{\r\n  margin: 2%;\r\n}\r\n\r\n.connec {\r\n  display: flex;\r\n  margin-top: -15px;\r\n  margin-left: 35px;\r\n  width:15px;\r\n  height: 15px;\r\n  border-radius: 100%;\r\n  background-color: white;\r\n}\r\n\r\n.fa-line{\r\n  color: #00B900;\r\n}\r\n\r\n.fa-facebook-square{\r\n  color: #1877f2;\r\n}\r\n\r\n.tabs{\r\n  display:inline-block;\r\n}\r\n` \r\nfunction Chatlist({botID}){\r\n\r\n    const [customerList, setCustomerList] =  useState([])\r\n\r\n    useEffect(() =>{\r\n      fetch('/bot/'+botID+'/customer').then(res=> res.json().then(data=> setCustomerList(data)\r\n      ))\r\n      \r\n    },[])\r\n\r\n    return(\r\n        <Styles> \r\n            <div className=\"chatlist\">\r\n                <div className=\"chatlist_body\">\r\n                    <div className=\"main-chatlist\">\r\n                        <div className=\"chatlist__heading\">\r\n                            <h2>Chats</h2>\r\n                            <button className=\"btn-nobg\">\r\n                                <i className=\"fa fa-ellipsis-h\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"chatList__search\">\r\n                            <div className=\"search_wrap\">\r\n                                <input type=\"text\" placeholder=\"Search Here\" required />\r\n                                <button className=\"search-btn\">\r\n                                <i className=\"fa fa-search\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tabs\">\r\n                            {/* <div className=\"tabs-all\">\r\n                              All\r\n                            </div>\r\n                            <div className=\"tabs-facebook\">\r\n                              Facebook\r\n                            </div>\r\n                            <div className=\"tabs-line\">\r\n                              line\r\n                            </div> */}\r\n                        </div>\r\n                      <div className=\"chatlist-user\">\r\n\r\n                      { customerList.map((customer) => (\r\n                        <div className=\"chatlist-msg\">\r\n           \r\n                            <Link to={\"/chat/\"+ botID+\"/live_chat/\"+customer.userID}>\r\n                                <li className=\"msg-cust row\">\r\n                                    <div className=\"cust-list-pic col-lg-3 col-sm-1\">\r\n                                      <img></img>\r\n                                      <div className=\"connec\">\r\n                                        <i className=\"fab fa-facebook-square\"></i>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"cust-list-input col\">\r\n                                        <h6 className=\"cust-list-name\">{customer.display_name}</h6>\r\n                                        <div className=\"cust-list-text\"> \r\n                                          สวัสดีค่ะ มีสินค้าอะไรบ้างคะ คุยกับบอทแล้วไม่เข้าใจเลยค่ะ อยากเรียกให้ช่วยค่ะ มานี่ๆๆๆๆๆ มานี่มาาาาา\r\n                                        </div>\r\n                                    </div>\r\n                                  </li>\r\n                                </Link>  \r\n                              </div>\r\n                              \r\n                             \r\n                              ))\r\n                      }\r\n\r\n                              {/* <div className=\"chatlist-msg\">\r\n                                  <li className=\"msg-user row\">\r\n                                      <div className=\"user-list-pic col-lg-3 col-sm-1\">\r\n                                        <img></img>\r\n                                        <div className=\"connec\">\r\n                                          <i className=\"fab fa-line\"></i>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"user-list-input col\">\r\n                                          <h6 className=\"user-list-name\">NAMPUN</h6>\r\n                                          <div className=\"user-list-text\"> \r\n                                            สวัสดีค่ะ มีสินค้าอะไรบ้างคะ คุยกับบอทแล้วไม่เข้าใจเลยค่ะ อยากเรียกให้ช่วยค่ะ มานี่ๆๆๆๆๆ มานี่มาาาาา\r\n                                          </div>\r\n                                      </div>\r\n                                  </li>\r\n                              </div> */}\r\n\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div> \r\n       </Styles>  \r\n    );\r\n}\r\nexport default Chatlist;","C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Page\\Mapping_load.js",["451","452","453","454","455","456","457","458","459","460","461","462","463","464"],"C:\\Users\\User\\Desktop\\A1_project\\client\\src\\Components\\Delete_table.js",["465"],{"ruleId":"466","severity":1,"message":"467","line":6,"column":8,"nodeType":"468","messageId":"469","endLine":6,"endColumn":20},{"ruleId":"466","severity":1,"message":"470","line":7,"column":8,"nodeType":"468","messageId":"469","endLine":7,"endColumn":17},{"ruleId":"466","severity":1,"message":"471","line":9,"column":9,"nodeType":"468","messageId":"469","endLine":9,"endColumn":20},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","replacedBy":"475"},{"ruleId":"476","severity":1,"message":"477","line":41,"column":91,"nodeType":"478","endLine":41,"endColumn":96},{"ruleId":"476","severity":1,"message":"477","line":42,"column":88,"nodeType":"478","endLine":42,"endColumn":93},{"ruleId":"476","severity":1,"message":"477","line":43,"column":87,"nodeType":"478","endLine":43,"endColumn":92},{"ruleId":"479","severity":1,"message":"480","line":202,"column":24,"nodeType":"481","messageId":"482","endLine":202,"endColumn":26},{"ruleId":"466","severity":1,"message":"483","line":1,"column":16,"nodeType":"468","messageId":"469","endLine":1,"endColumn":24},{"ruleId":"466","severity":1,"message":"484","line":2,"column":9,"nodeType":"468","messageId":"469","endLine":2,"endColumn":15},{"ruleId":"466","severity":1,"message":"485","line":2,"column":17,"nodeType":"468","messageId":"469","endLine":2,"endColumn":25},{"ruleId":"466","severity":1,"message":"486","line":1,"column":37,"nodeType":"468","messageId":"469","endLine":1,"endColumn":45},{"ruleId":"466","severity":1,"message":"487","line":1,"column":47,"nodeType":"468","messageId":"469","endLine":1,"endColumn":58},{"ruleId":"466","severity":1,"message":"488","line":6,"column":5,"nodeType":"468","messageId":"469","endLine":6,"endColumn":12},{"ruleId":"466","severity":1,"message":"489","line":7,"column":5,"nodeType":"468","messageId":"469","endLine":7,"endColumn":13},{"ruleId":"466","severity":1,"message":"490","line":8,"column":5,"nodeType":"468","messageId":"469","endLine":8,"endColumn":15},{"ruleId":"466","severity":1,"message":"491","line":9,"column":5,"nodeType":"468","messageId":"469","endLine":9,"endColumn":18},{"ruleId":"466","severity":1,"message":"492","line":9,"column":20,"nodeType":"468","messageId":"469","endLine":9,"endColumn":32},{"ruleId":"466","severity":1,"message":"493","line":16,"column":10,"nodeType":"468","messageId":"469","endLine":16,"endColumn":18},{"ruleId":"466","severity":1,"message":"494","line":34,"column":7,"nodeType":"468","messageId":"469","endLine":34,"endColumn":14},{"ruleId":"466","severity":1,"message":"495","line":44,"column":9,"nodeType":"468","messageId":"469","endLine":44,"endColumn":14},{"ruleId":"466","severity":1,"message":"496","line":49,"column":10,"nodeType":"468","messageId":"469","endLine":49,"endColumn":20},{"ruleId":"497","severity":1,"message":"498","line":104,"column":6,"nodeType":"499","endLine":104,"endColumn":29,"suggestions":"500"},{"ruleId":"501","severity":1,"message":"502","line":182,"column":13,"nodeType":"503","endLine":182,"endColumn":83},{"ruleId":"466","severity":1,"message":"504","line":1,"column":27,"nodeType":"468","messageId":"469","endLine":1,"endColumn":36},{"ruleId":"466","severity":1,"message":"505","line":39,"column":24,"nodeType":"468","messageId":"469","endLine":39,"endColumn":38},{"ruleId":"466","severity":1,"message":"506","line":40,"column":13,"nodeType":"468","messageId":"469","endLine":40,"endColumn":17},{"ruleId":"466","severity":1,"message":"507","line":40,"column":18,"nodeType":"468","messageId":"469","endLine":40,"endColumn":25},{"ruleId":"466","severity":1,"message":"508","line":72,"column":11,"nodeType":"468","messageId":"469","endLine":72,"endColumn":19},{"ruleId":"466","severity":1,"message":"509","line":77,"column":21,"nodeType":"468","messageId":"469","endLine":77,"endColumn":23},{"ruleId":"501","severity":1,"message":"502","line":87,"column":13,"nodeType":"503","endLine":87,"endColumn":84},{"ruleId":"501","severity":1,"message":"502","line":48,"column":13,"nodeType":"503","endLine":48,"endColumn":81},{"ruleId":"466","severity":1,"message":"504","line":1,"column":27,"nodeType":"468","messageId":"469","endLine":1,"endColumn":36},{"ruleId":"466","severity":1,"message":"510","line":3,"column":10,"nodeType":"468","messageId":"469","endLine":3,"endColumn":14},{"ruleId":"466","severity":1,"message":"511","line":4,"column":8,"nodeType":"468","messageId":"469","endLine":4,"endColumn":19},{"ruleId":"466","severity":1,"message":"512","line":44,"column":7,"nodeType":"468","messageId":"469","endLine":44,"endColumn":14},{"ruleId":"466","severity":1,"message":"505","line":45,"column":23,"nodeType":"468","messageId":"469","endLine":45,"endColumn":37},{"ruleId":"501","severity":1,"message":"502","line":82,"column":9,"nodeType":"503","endLine":82,"endColumn":78},{"ruleId":"466","severity":1,"message":"504","line":1,"column":17,"nodeType":"468","messageId":"469","endLine":1,"endColumn":26},{"ruleId":"466","severity":1,"message":"483","line":1,"column":28,"nodeType":"468","messageId":"469","endLine":1,"endColumn":36},{"ruleId":"466","severity":1,"message":"486","line":1,"column":37,"nodeType":"468","messageId":"469","endLine":1,"endColumn":45},{"ruleId":"466","severity":1,"message":"487","line":1,"column":47,"nodeType":"468","messageId":"469","endLine":1,"endColumn":58},{"ruleId":"466","severity":1,"message":"493","line":8,"column":10,"nodeType":"468","messageId":"469","endLine":8,"endColumn":18},{"ruleId":"501","severity":1,"message":"502","line":44,"column":13,"nodeType":"503","endLine":44,"endColumn":83},{"ruleId":"466","severity":1,"message":"510","line":3,"column":9,"nodeType":"468","messageId":"469","endLine":3,"endColumn":13},{"ruleId":"476","severity":1,"message":"477","line":210,"column":142,"nodeType":"478","endLine":210,"endColumn":166},{"ruleId":"476","severity":1,"message":"477","line":214,"column":151,"nodeType":"478","endLine":214,"endColumn":178},{"ruleId":"476","severity":1,"message":"477","line":233,"column":154,"nodeType":"478","endLine":233,"endColumn":182},{"ruleId":"476","severity":1,"message":"477","line":237,"column":151,"nodeType":"478","endLine":237,"endColumn":178},{"ruleId":"476","severity":1,"message":"477","line":241,"column":144,"nodeType":"478","endLine":241,"endColumn":171},{"ruleId":"476","severity":1,"message":"477","line":256,"column":195,"nodeType":"478","endLine":256,"endColumn":226},{"ruleId":"497","severity":1,"message":"513","line":40,"column":15,"nodeType":"514","endLine":43,"endColumn":6},{"ruleId":"501","severity":1,"message":"515","line":55,"column":25,"nodeType":"503","endLine":55,"endColumn":150},{"ruleId":"501","severity":1,"message":"516","line":56,"column":25,"nodeType":"503","endLine":56,"endColumn":103},{"ruleId":"501","severity":1,"message":"515","line":79,"column":41,"nodeType":"503","endLine":79,"endColumn":186},{"ruleId":"501","severity":1,"message":"516","line":80,"column":41,"nodeType":"503","endLine":80,"endColumn":142},{"ruleId":"517","severity":1,"message":"518","line":123,"column":13,"nodeType":"503","endLine":123,"endColumn":76},{"ruleId":"519","severity":1,"message":"520","line":161,"column":25,"nodeType":"503","endLine":161,"endColumn":49},{"ruleId":"519","severity":1,"message":"521","line":166,"column":25,"nodeType":"503","endLine":166,"endColumn":56},{"ruleId":"466","severity":1,"message":"522","line":4,"column":9,"nodeType":"468","messageId":"469","endLine":4,"endColumn":19},{"ruleId":"466","severity":1,"message":"523","line":178,"column":22,"nodeType":"468","messageId":"469","endLine":178,"endColumn":28},{"ruleId":"517","severity":1,"message":"518","line":187,"column":26,"nodeType":"503","endLine":187,"endColumn":55},{"ruleId":"517","severity":1,"message":"518","line":205,"column":82,"nodeType":"503","endLine":205,"endColumn":134},{"ruleId":"466","severity":1,"message":"522","line":4,"column":9,"nodeType":"468","messageId":"469","endLine":4,"endColumn":19},{"ruleId":"466","severity":1,"message":"524","line":5,"column":8,"nodeType":"468","messageId":"469","endLine":5,"endColumn":23},{"ruleId":"466","severity":1,"message":"523","line":221,"column":22,"nodeType":"468","messageId":"469","endLine":221,"endColumn":28},{"ruleId":"517","severity":1,"message":"518","line":229,"column":28,"nodeType":"503","endLine":229,"endColumn":57},{"ruleId":"517","severity":1,"message":"518","line":247,"column":79,"nodeType":"503","endLine":247,"endColumn":124},{"ruleId":"466","severity":1,"message":"525","line":1,"column":37,"nodeType":"468","messageId":"469","endLine":1,"endColumn":43},{"ruleId":"497","severity":1,"message":"513","line":73,"column":15,"nodeType":"514","endLine":75,"endColumn":6},{"ruleId":"497","severity":1,"message":"526","line":75,"column":7,"nodeType":"499","endLine":75,"endColumn":9,"suggestions":"527"},{"ruleId":"501","severity":1,"message":"502","line":84,"column":16,"nodeType":"503","endLine":84,"endColumn":88},{"ruleId":"466","severity":1,"message":"493","line":5,"column":22,"nodeType":"468","messageId":"469","endLine":5,"endColumn":30},{"ruleId":"466","severity":1,"message":"528","line":9,"column":10,"nodeType":"468","messageId":"469","endLine":9,"endColumn":19},{"ruleId":"529","severity":1,"message":"530","line":198,"column":1,"nodeType":"531","messageId":"532","endLine":214,"endColumn":27},{"ruleId":"501","severity":1,"message":"502","line":37,"column":16,"nodeType":"503","endLine":37,"endColumn":98},{"ruleId":"501","severity":1,"message":"502","line":36,"column":17,"nodeType":"503","endLine":36,"endColumn":87},{"ruleId":"466","severity":1,"message":"522","line":3,"column":10,"nodeType":"468","messageId":"469","endLine":3,"endColumn":20},{"ruleId":"533","severity":1,"message":"534","line":197,"column":26,"nodeType":"514","messageId":"535","endLine":202,"endColumn":8},{"ruleId":"466","severity":1,"message":"523","line":267,"column":23,"nodeType":"468","messageId":"469","endLine":267,"endColumn":29},{"ruleId":"466","severity":1,"message":"536","line":277,"column":9,"nodeType":"468","messageId":"469","endLine":277,"endColumn":22},{"ruleId":"517","severity":1,"message":"518","line":277,"column":26,"nodeType":"503","endLine":277,"endColumn":55},{"ruleId":"517","severity":1,"message":"518","line":203,"column":41,"nodeType":"503","endLine":203,"endColumn":99},{"ruleId":"517","severity":1,"message":"518","line":204,"column":41,"nodeType":"503","endLine":204,"endColumn":99},{"ruleId":"517","severity":1,"message":"518","line":205,"column":41,"nodeType":"503","endLine":205,"endColumn":99},{"ruleId":"517","severity":1,"message":"518","line":206,"column":41,"nodeType":"503","endLine":206,"endColumn":99},{"ruleId":"466","severity":1,"message":"504","line":5,"column":27,"nodeType":"468","messageId":"469","endLine":5,"endColumn":36},{"ruleId":"501","severity":1,"message":"537","line":22,"column":5,"nodeType":"503","endLine":22,"endColumn":18},{"ruleId":"519","severity":1,"message":"520","line":25,"column":15,"nodeType":"503","endLine":25,"endColumn":48},{"ruleId":"519","severity":1,"message":"520","line":30,"column":15,"nodeType":"503","endLine":30,"endColumn":48},{"ruleId":"519","severity":1,"message":"520","line":35,"column":15,"nodeType":"503","endLine":35,"endColumn":48},{"ruleId":"519","severity":1,"message":"520","line":40,"column":15,"nodeType":"503","endLine":40,"endColumn":48},{"ruleId":"466","severity":1,"message":"538","line":48,"column":16,"nodeType":"468","messageId":"469","endLine":48,"endColumn":23},{"ruleId":"501","severity":1,"message":"537","line":51,"column":5,"nodeType":"503","endLine":51,"endColumn":18},{"ruleId":"479","severity":1,"message":"480","line":52,"column":47,"nodeType":"481","messageId":"482","endLine":52,"endColumn":49},{"ruleId":"517","severity":1,"message":"518","line":68,"column":11,"nodeType":"503","endLine":68,"endColumn":72},{"ruleId":"519","severity":1,"message":"521","line":81,"column":7,"nodeType":"503","endLine":81,"endColumn":79},{"ruleId":"466","severity":1,"message":"539","line":93,"column":10,"nodeType":"468","messageId":"469","endLine":93,"endColumn":18},{"ruleId":"466","severity":1,"message":"540","line":93,"column":20,"nodeType":"468","messageId":"469","endLine":93,"endColumn":31},{"ruleId":"519","severity":1,"message":"521","line":98,"column":7,"nodeType":"503","endLine":98,"endColumn":110},{"ruleId":"519","severity":1,"message":"520","line":117,"column":12,"nodeType":"503","endLine":119,"endColumn":14},{"ruleId":"519","severity":1,"message":"520","line":126,"column":11,"nodeType":"503","endLine":128,"endColumn":14},{"ruleId":"519","severity":1,"message":"520","line":135,"column":11,"nodeType":"503","endLine":137,"endColumn":14},{"ruleId":"519","severity":1,"message":"520","line":143,"column":11,"nodeType":"503","endLine":146,"endColumn":14},{"ruleId":"466","severity":1,"message":"541","line":4,"column":8,"nodeType":"468","messageId":"469","endLine":4,"endColumn":16},{"ruleId":"466","severity":1,"message":"542","line":5,"column":8,"nodeType":"468","messageId":"469","endLine":5,"endColumn":14},{"ruleId":"466","severity":1,"message":"493","line":6,"column":10,"nodeType":"468","messageId":"469","endLine":6,"endColumn":18},{"ruleId":"466","severity":1,"message":"543","line":11,"column":12,"nodeType":"468","messageId":"469","endLine":11,"endColumn":20},{"ruleId":"497","severity":1,"message":"526","line":21,"column":7,"nodeType":"499","endLine":21,"endColumn":9,"suggestions":"544"},{"ruleId":"501","severity":1,"message":"502","line":26,"column":21,"nodeType":"503","endLine":26,"endColumn":88},{"ruleId":"479","severity":1,"message":"480","line":60,"column":106,"nodeType":"481","messageId":"482","endLine":60,"endColumn":108},{"ruleId":"517","severity":1,"message":"518","line":62,"column":49,"nodeType":"503","endLine":62,"endColumn":80},{"ruleId":"479","severity":1,"message":"480","line":63,"column":67,"nodeType":"481","messageId":"482","endLine":63,"endColumn":69},{"ruleId":"466","severity":1,"message":"471","line":5,"column":9,"nodeType":"468","messageId":"469","endLine":5,"endColumn":20},{"ruleId":"466","severity":1,"message":"470","line":6,"column":8,"nodeType":"468","messageId":"469","endLine":6,"endColumn":17},{"ruleId":"466","severity":1,"message":"545","line":8,"column":10,"nodeType":"468","messageId":"469","endLine":8,"endColumn":18},{"ruleId":"479","severity":1,"message":"480","line":251,"column":16,"nodeType":"481","messageId":"482","endLine":251,"endColumn":18},{"ruleId":"479","severity":1,"message":"480","line":253,"column":23,"nodeType":"481","messageId":"482","endLine":253,"endColumn":25},{"ruleId":"479","severity":1,"message":"480","line":287,"column":19,"nodeType":"481","messageId":"482","endLine":287,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":307,"column":19,"nodeType":"481","messageId":"482","endLine":307,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":327,"column":19,"nodeType":"481","messageId":"482","endLine":327,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":348,"column":19,"nodeType":"481","messageId":"482","endLine":348,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":369,"column":19,"nodeType":"481","messageId":"482","endLine":369,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":390,"column":19,"nodeType":"481","messageId":"482","endLine":390,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":410,"column":19,"nodeType":"481","messageId":"482","endLine":410,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":430,"column":19,"nodeType":"481","messageId":"482","endLine":430,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":468,"column":19,"nodeType":"481","messageId":"482","endLine":468,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":491,"column":19,"nodeType":"481","messageId":"482","endLine":491,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":513,"column":19,"nodeType":"481","messageId":"482","endLine":513,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":535,"column":19,"nodeType":"481","messageId":"482","endLine":535,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":557,"column":19,"nodeType":"481","messageId":"482","endLine":557,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":579,"column":19,"nodeType":"481","messageId":"482","endLine":579,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":601,"column":19,"nodeType":"481","messageId":"482","endLine":601,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":623,"column":19,"nodeType":"481","messageId":"482","endLine":623,"endColumn":21},{"ruleId":"466","severity":1,"message":"546","line":1,"column":38,"nodeType":"468","messageId":"469","endLine":1,"endColumn":48},{"ruleId":"466","severity":1,"message":"547","line":290,"column":5,"nodeType":"468","messageId":"469","endLine":290,"endColumn":19},{"ruleId":"466","severity":1,"message":"548","line":294,"column":35,"nodeType":"468","messageId":"469","endLine":294,"endColumn":49},{"ruleId":"466","severity":1,"message":"549","line":343,"column":9,"nodeType":"468","messageId":"469","endLine":343,"endColumn":20},{"ruleId":"466","severity":1,"message":"550","line":455,"column":10,"nodeType":"468","messageId":"469","endLine":455,"endColumn":18},{"ruleId":"479","severity":1,"message":"551","line":485,"column":24,"nodeType":"481","messageId":"482","endLine":485,"endColumn":26},{"ruleId":"479","severity":1,"message":"551","line":485,"column":50,"nodeType":"481","messageId":"482","endLine":485,"endColumn":52},{"ruleId":"466","severity":1,"message":"552","line":505,"column":9,"nodeType":"468","messageId":"469","endLine":505,"endColumn":17},{"ruleId":"497","severity":1,"message":"553","line":529,"column":7,"nodeType":"499","endLine":529,"endColumn":9,"suggestions":"554"},{"ruleId":"466","severity":1,"message":"555","line":532,"column":9,"nodeType":"468","messageId":"469","endLine":532,"endColumn":18},{"ruleId":"466","severity":1,"message":"483","line":1,"column":16,"nodeType":"468","messageId":"469","endLine":1,"endColumn":24},{"ruleId":"466","severity":1,"message":"556","line":17,"column":12,"nodeType":"468","messageId":"469","endLine":17,"endColumn":16},{"ruleId":"466","severity":1,"message":"557","line":45,"column":11,"nodeType":"468","messageId":"469","endLine":45,"endColumn":21},{"ruleId":"479","severity":1,"message":"480","line":52,"column":21,"nodeType":"481","messageId":"482","endLine":52,"endColumn":23},{"ruleId":"519","severity":1,"message":"521","line":54,"column":17,"nodeType":"503","endLine":54,"endColumn":51},{"ruleId":"466","severity":1,"message":"547","line":312,"column":5,"nodeType":"468","messageId":"469","endLine":312,"endColumn":19},{"ruleId":"466","severity":1,"message":"548","line":316,"column":35,"nodeType":"468","messageId":"469","endLine":316,"endColumn":49},{"ruleId":"466","severity":1,"message":"550","line":475,"column":10,"nodeType":"468","messageId":"469","endLine":475,"endColumn":18},{"ruleId":"466","severity":1,"message":"558","line":498,"column":25,"nodeType":"468","messageId":"469","endLine":498,"endColumn":41},{"ruleId":"479","severity":1,"message":"551","line":509,"column":24,"nodeType":"481","messageId":"482","endLine":509,"endColumn":26},{"ruleId":"479","severity":1,"message":"551","line":509,"column":50,"nodeType":"481","messageId":"482","endLine":509,"endColumn":52},{"ruleId":"466","severity":1,"message":"552","line":529,"column":9,"nodeType":"468","messageId":"469","endLine":529,"endColumn":17},{"ruleId":"497","severity":1,"message":"553","line":553,"column":6,"nodeType":"499","endLine":553,"endColumn":8,"suggestions":"559"},{"ruleId":"466","severity":1,"message":"555","line":556,"column":9,"nodeType":"468","messageId":"469","endLine":556,"endColumn":18},{"ruleId":"466","severity":1,"message":"550","line":291,"column":10,"nodeType":"468","messageId":"469","endLine":291,"endColumn":18},{"ruleId":"466","severity":1,"message":"552","line":292,"column":9,"nodeType":"468","messageId":"469","endLine":292,"endColumn":17},{"ruleId":"466","severity":1,"message":"547","line":311,"column":5,"nodeType":"468","messageId":"469","endLine":311,"endColumn":19},{"ruleId":"466","severity":1,"message":"548","line":315,"column":35,"nodeType":"468","messageId":"469","endLine":315,"endColumn":49},{"ruleId":"466","severity":1,"message":"550","line":480,"column":10,"nodeType":"468","messageId":"469","endLine":480,"endColumn":18},{"ruleId":"466","severity":1,"message":"558","line":503,"column":25,"nodeType":"468","messageId":"469","endLine":503,"endColumn":41},{"ruleId":"479","severity":1,"message":"551","line":514,"column":24,"nodeType":"481","messageId":"482","endLine":514,"endColumn":26},{"ruleId":"479","severity":1,"message":"551","line":514,"column":50,"nodeType":"481","messageId":"482","endLine":514,"endColumn":52},{"ruleId":"466","severity":1,"message":"552","line":534,"column":9,"nodeType":"468","messageId":"469","endLine":534,"endColumn":17},{"ruleId":"497","severity":1,"message":"553","line":558,"column":6,"nodeType":"499","endLine":558,"endColumn":8,"suggestions":"560"},{"ruleId":"466","severity":1,"message":"555","line":561,"column":9,"nodeType":"468","messageId":"469","endLine":561,"endColumn":18},{"ruleId":"466","severity":1,"message":"510","line":6,"column":9,"nodeType":"468","messageId":"469","endLine":6,"endColumn":13},{"ruleId":"466","severity":1,"message":"561","line":258,"column":7,"nodeType":"468","messageId":"469","endLine":258,"endColumn":20},{"ruleId":"466","severity":1,"message":"562","line":265,"column":9,"nodeType":"468","messageId":"469","endLine":265,"endColumn":17},{"ruleId":"466","severity":1,"message":"550","line":293,"column":10,"nodeType":"468","messageId":"469","endLine":293,"endColumn":18},{"ruleId":"466","severity":1,"message":"552","line":294,"column":9,"nodeType":"468","messageId":"469","endLine":294,"endColumn":17},{"ruleId":"466","severity":1,"message":"547","line":314,"column":5,"nodeType":"468","messageId":"469","endLine":314,"endColumn":19},{"ruleId":"466","severity":1,"message":"548","line":318,"column":35,"nodeType":"468","messageId":"469","endLine":318,"endColumn":49},{"ruleId":"466","severity":1,"message":"550","line":476,"column":10,"nodeType":"468","messageId":"469","endLine":476,"endColumn":18},{"ruleId":"466","severity":1,"message":"558","line":499,"column":25,"nodeType":"468","messageId":"469","endLine":499,"endColumn":41},{"ruleId":"479","severity":1,"message":"551","line":510,"column":24,"nodeType":"481","messageId":"482","endLine":510,"endColumn":26},{"ruleId":"479","severity":1,"message":"551","line":510,"column":50,"nodeType":"481","messageId":"482","endLine":510,"endColumn":52},{"ruleId":"466","severity":1,"message":"552","line":530,"column":9,"nodeType":"468","messageId":"469","endLine":530,"endColumn":17},{"ruleId":"497","severity":1,"message":"553","line":557,"column":6,"nodeType":"499","endLine":557,"endColumn":8,"suggestions":"563"},{"ruleId":"466","severity":1,"message":"555","line":560,"column":9,"nodeType":"468","messageId":"469","endLine":560,"endColumn":18},{"ruleId":"466","severity":1,"message":"483","line":1,"column":49,"nodeType":"468","messageId":"469","endLine":1,"endColumn":57},{"ruleId":"517","severity":1,"message":"518","line":162,"column":25,"nodeType":"503","endLine":162,"endColumn":56},{"ruleId":"517","severity":1,"message":"518","line":179,"column":25,"nodeType":"503","endLine":179,"endColumn":66},{"ruleId":"517","severity":1,"message":"518","line":196,"column":25,"nodeType":"503","endLine":196,"endColumn":61},{"ruleId":"517","severity":1,"message":"518","line":77,"column":13,"nodeType":"503","endLine":77,"endColumn":77},{"ruleId":"517","severity":1,"message":"518","line":80,"column":11,"nodeType":"503","endLine":80,"endColumn":74},{"ruleId":"529","severity":1,"message":"530","line":100,"column":1,"nodeType":"531","messageId":"532","endLine":104,"endColumn":25},{"ruleId":"517","severity":1,"message":"518","line":98,"column":11,"nodeType":"503","endLine":98,"endColumn":60},{"ruleId":"466","severity":1,"message":"564","line":141,"column":21,"nodeType":"468","messageId":"469","endLine":141,"endColumn":31},{"ruleId":"497","severity":1,"message":"565","line":180,"column":8,"nodeType":"499","endLine":180,"endColumn":10,"suggestions":"566"},{"ruleId":"466","severity":1,"message":"564","line":146,"column":21,"nodeType":"468","messageId":"469","endLine":146,"endColumn":31},{"ruleId":"497","severity":1,"message":"565","line":176,"column":8,"nodeType":"499","endLine":176,"endColumn":10,"suggestions":"567"},{"ruleId":"466","severity":1,"message":"483","line":2,"column":16,"nodeType":"468","messageId":"469","endLine":2,"endColumn":24},{"ruleId":"466","severity":1,"message":"504","line":2,"column":26,"nodeType":"468","messageId":"469","endLine":2,"endColumn":35},{"ruleId":"466","severity":1,"message":"525","line":2,"column":37,"nodeType":"468","messageId":"469","endLine":2,"endColumn":43},{"ruleId":"517","severity":1,"message":"518","line":103,"column":29,"nodeType":"503","endLine":103,"endColumn":97},{"ruleId":"466","severity":1,"message":"542","line":3,"column":8,"nodeType":"468","messageId":"469","endLine":3,"endColumn":14},{"ruleId":"466","severity":1,"message":"493","line":4,"column":10,"nodeType":"468","messageId":"469","endLine":4,"endColumn":18},{"ruleId":"479","severity":1,"message":"480","line":26,"column":40,"nodeType":"481","messageId":"482","endLine":26,"endColumn":42},{"ruleId":"479","severity":1,"message":"480","line":28,"column":46,"nodeType":"481","messageId":"482","endLine":28,"endColumn":48},{"ruleId":"497","severity":1,"message":"553","line":35,"column":7,"nodeType":"499","endLine":35,"endColumn":19,"suggestions":"568"},{"ruleId":"497","severity":1,"message":"569","line":39,"column":7,"nodeType":"499","endLine":39,"endColumn":24,"suggestions":"570"},{"ruleId":"479","severity":1,"message":"551","line":72,"column":19,"nodeType":"481","messageId":"482","endLine":72,"endColumn":21},{"ruleId":"466","severity":1,"message":"571","line":116,"column":7,"nodeType":"468","messageId":"469","endLine":116,"endColumn":19},{"ruleId":"497","severity":1,"message":"553","line":172,"column":7,"nodeType":"499","endLine":172,"endColumn":9,"suggestions":"572"},{"ruleId":"517","severity":1,"message":"518","line":210,"column":39,"nodeType":"503","endLine":210,"endColumn":44},{"ruleId":"497","severity":1,"message":"553","line":180,"column":7,"nodeType":"499","endLine":180,"endColumn":9,"suggestions":"573"},{"ruleId":"517","severity":1,"message":"518","line":220,"column":39,"nodeType":"503","endLine":220,"endColumn":44},{"ruleId":"466","severity":1,"message":"486","line":1,"column":37,"nodeType":"468","messageId":"469","endLine":1,"endColumn":45},{"ruleId":"466","severity":1,"message":"487","line":1,"column":47,"nodeType":"468","messageId":"469","endLine":1,"endColumn":58},{"ruleId":"466","severity":1,"message":"488","line":7,"column":5,"nodeType":"468","messageId":"469","endLine":7,"endColumn":12},{"ruleId":"466","severity":1,"message":"489","line":8,"column":5,"nodeType":"468","messageId":"469","endLine":8,"endColumn":13},{"ruleId":"466","severity":1,"message":"490","line":9,"column":5,"nodeType":"468","messageId":"469","endLine":9,"endColumn":15},{"ruleId":"466","severity":1,"message":"491","line":10,"column":5,"nodeType":"468","messageId":"469","endLine":10,"endColumn":18},{"ruleId":"466","severity":1,"message":"492","line":10,"column":20,"nodeType":"468","messageId":"469","endLine":10,"endColumn":32},{"ruleId":"466","severity":1,"message":"493","line":17,"column":10,"nodeType":"468","messageId":"469","endLine":17,"endColumn":18},{"ruleId":"466","severity":1,"message":"494","line":90,"column":9,"nodeType":"468","messageId":"469","endLine":90,"endColumn":16},{"ruleId":"466","severity":1,"message":"495","line":104,"column":9,"nodeType":"468","messageId":"469","endLine":104,"endColumn":14},{"ruleId":"466","severity":1,"message":"496","line":109,"column":10,"nodeType":"468","messageId":"469","endLine":109,"endColumn":20},{"ruleId":"497","severity":1,"message":"574","line":162,"column":6,"nodeType":"499","endLine":162,"endColumn":8,"suggestions":"575"},{"ruleId":"466","severity":1,"message":"576","line":249,"column":9,"nodeType":"468","messageId":"469","endLine":249,"endColumn":13},{"ruleId":"501","severity":1,"message":"502","line":300,"column":13,"nodeType":"503","endLine":300,"endColumn":83},{"ruleId":"466","severity":1,"message":"483","line":1,"column":49,"nodeType":"468","messageId":"469","endLine":1,"endColumn":57},"no-unused-vars","'rootReducers' is defined but never used.","Identifier","unusedVar","'tReducers' is defined but never used.","'createStore' is defined but never used.","no-native-reassign",["577"],"no-negated-in-lhs",["578"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Button' is defined but never used.","'Collapse' is defined but never used.","'Fragment' is defined but never used.","'useCallback' is defined but never used.","'MiniMap' is defined but never used.","'Controls' is defined but never used.","'Background' is defined but never used.","'getBezierPath' is defined but never used.","'getMarkerEnd' is defined but never used.","'Redirect' is defined but never used.","'flowKey' is assigned a value but never used.","'style' is assigned a value but never used.","'rfInstance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectNode'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setElements' needs the current value of 'selectNode'.","ArrayExpression",["579"],"react/jsx-pascal-case","Imported JSX component Navbar_member must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'useEffect' is defined but never used.","'setdeleteState' is assigned a value but never used.","'Info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'add_data' is assigned a value but never used.","'id' is assigned a value but never used.","'Link' is defined but never used.","'DeleteModal' is defined but never used.","'history' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Imported JSX component Delete_pop must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Connect_bot must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'withRouter' is defined but never used.","'bot_id' is assigned a value but never used.","'ReactFileReader' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.bot_id'. Either include it or remove the dependency array.",["580"],"'Container' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs","'$imagePreview' is assigned a value but never used.","Imported JSX component Navbar_real must be in PascalCase or SCREAMING_SNAKE_CASE","'setMain' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'ChatList' is defined but never used.","'styled' is defined but never used.","'customer' is assigned a value but never used.",["581"],"'Provider' is defined but never used.","'useHistory' is defined but never used.","'visibleColumns' is assigned a value but never used.","'selectedRowIds' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'showWord' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'openWord' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'botID'. Either include it or remove the dependency array.",["582"],"'resetData' is assigned a value but never used.","'rand' is defined but never used.","'deleteData' is assigned a value but never used.","'setSkipPageReset' is assigned a value but never used.",["583"],["584"],"'defaultColumn' is assigned a value but never used.","'Ondelete' is assigned a value but never used.",["585"],"'setWebhook' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.props.bot_id'. Either include it or remove the dependency array.",["586"],["587"],["588"],"React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["589"],"'MemoizedItem' is assigned a value but never used.",["590"],["591"],"React Hook useEffect has a missing dependency: 'mapID'. Either include it or remove the dependency array.",["592"],"'test' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"595","fix":"597"},{"desc":"598","fix":"599"},{"desc":"598","fix":"600"},{"desc":"598","fix":"601"},{"desc":"598","fix":"602"},{"desc":"603","fix":"604"},{"desc":"603","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"598","fix":"610"},{"desc":"598","fix":"611"},{"desc":"612","fix":"613"},"Update the dependencies array to be: [nodeName, selectNode, setElements]",{"range":"614","text":"615"},"Update the dependencies array to be: [props.match.params.bot_id]",{"range":"616","text":"617"},{"range":"618","text":"617"},"Update the dependencies array to be: [botID]",{"range":"619","text":"620"},{"range":"621","text":"620"},{"range":"622","text":"620"},{"range":"623","text":"620"},"Update the dependencies array to be: [props.props.bot_id]",{"range":"624","text":"625"},{"range":"626","text":"625"},"Update the dependencies array to be: [botID, customerID]",{"range":"627","text":"628"},"Update the dependencies array to be: [getMessages, messages.length]",{"range":"629","text":"630"},{"range":"631","text":"620"},{"range":"632","text":"620"},"Update the dependencies array to be: [mapID]",{"range":"633","text":"634"},[2895,2918],"[nodeName, selectNode, setElements]",[1752,1754],"[props.match.params.bot_id]",[807,809],[12609,12611],"[botID]",[12730,12732],[12964,12966],[12927,12929],[4431,4433],"[props.props.bot_id]",[3863,3865],[1367,1379],"[botID, customerID]",[1440,1457],"[getMessages, messages.length]",[3155,3157],[3231,3233],[3843,3845],"[mapID]"]